
picoc:     file format elf64-x86-64


Disassembly of section .init:

0000000000402910 <_init>:
  402910:	48 83 ec 08          	sub    $0x8,%rsp
  402914:	48 8b 05 dd c6 21 00 	mov    0x21c6dd(%rip),%rax        # 61eff8 <__gmon_start__>
  40291b:	48 85 c0             	test   %rax,%rax
  40291e:	74 02                	je     402922 <_init+0x12>
  402920:	ff d0                	callq  *%rax
  402922:	48 83 c4 08          	add    $0x8,%rsp
  402926:	c3                   	retq   

Disassembly of section .plt:

0000000000402930 <.plt>:
  402930:	ff 35 d2 c6 21 00    	pushq  0x21c6d2(%rip)        # 61f008 <_GLOBAL_OFFSET_TABLE_+0x8>
  402936:	ff 25 d4 c6 21 00    	jmpq   *0x21c6d4(%rip)        # 61f010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40293c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402940 <getenv@plt>:
  402940:	ff 25 d2 c6 21 00    	jmpq   *0x21c6d2(%rip)        # 61f018 <getenv@GLIBC_2.2.5>
  402946:	68 00 00 00 00       	pushq  $0x0
  40294b:	e9 e0 ff ff ff       	jmpq   402930 <.plt>

0000000000402950 <free@plt>:
  402950:	ff 25 ca c6 21 00    	jmpq   *0x21c6ca(%rip)        # 61f020 <free@GLIBC_2.2.5>
  402956:	68 01 00 00 00       	pushq  $0x1
  40295b:	e9 d0 ff ff ff       	jmpq   402930 <.plt>

0000000000402960 <putchar@plt>:
  402960:	ff 25 c2 c6 21 00    	jmpq   *0x21c6c2(%rip)        # 61f028 <putchar@GLIBC_2.2.5>
  402966:	68 02 00 00 00       	pushq  $0x2
  40296b:	e9 c0 ff ff ff       	jmpq   402930 <.plt>

0000000000402970 <localtime@plt>:
  402970:	ff 25 ba c6 21 00    	jmpq   *0x21c6ba(%rip)        # 61f030 <localtime@GLIBC_2.2.5>
  402976:	68 03 00 00 00       	pushq  $0x3
  40297b:	e9 b0 ff ff ff       	jmpq   402930 <.plt>

0000000000402980 <__errno_location@plt>:
  402980:	ff 25 b2 c6 21 00    	jmpq   *0x21c6b2(%rip)        # 61f038 <__errno_location@GLIBC_2.2.5>
  402986:	68 04 00 00 00       	pushq  $0x4
  40298b:	e9 a0 ff ff ff       	jmpq   402930 <.plt>

0000000000402990 <fdatasync@plt>:
  402990:	ff 25 aa c6 21 00    	jmpq   *0x21c6aa(%rip)        # 61f040 <fdatasync@GLIBC_2.2.5>
  402996:	68 05 00 00 00       	pushq  $0x5
  40299b:	e9 90 ff ff ff       	jmpq   402930 <.plt>

00000000004029a0 <unlink@plt>:
  4029a0:	ff 25 a2 c6 21 00    	jmpq   *0x21c6a2(%rip)        # 61f048 <unlink@GLIBC_2.2.5>
  4029a6:	68 06 00 00 00       	pushq  $0x6
  4029ab:	e9 80 ff ff ff       	jmpq   402930 <.plt>

00000000004029b0 <strncpy@plt>:
  4029b0:	ff 25 9a c6 21 00    	jmpq   *0x21c69a(%rip)        # 61f050 <strncpy@GLIBC_2.2.5>
  4029b6:	68 07 00 00 00       	pushq  $0x7
  4029bb:	e9 70 ff ff ff       	jmpq   402930 <.plt>

00000000004029c0 <gethostid@plt>:
  4029c0:	ff 25 92 c6 21 00    	jmpq   *0x21c692(%rip)        # 61f058 <gethostid@GLIBC_2.2.5>
  4029c6:	68 08 00 00 00       	pushq  $0x8
  4029cb:	e9 60 ff ff ff       	jmpq   402930 <.plt>

00000000004029d0 <remove@plt>:
  4029d0:	ff 25 8a c6 21 00    	jmpq   *0x21c68a(%rip)        # 61f060 <remove@GLIBC_2.2.5>
  4029d6:	68 09 00 00 00       	pushq  $0x9
  4029db:	e9 50 ff ff ff       	jmpq   402930 <.plt>

00000000004029e0 <strncmp@plt>:
  4029e0:	ff 25 82 c6 21 00    	jmpq   *0x21c682(%rip)        # 61f068 <strncmp@GLIBC_2.2.5>
  4029e6:	68 0a 00 00 00       	pushq  $0xa
  4029eb:	e9 40 ff ff ff       	jmpq   402930 <.plt>

00000000004029f0 <_exit@plt>:
  4029f0:	ff 25 7a c6 21 00    	jmpq   *0x21c67a(%rip)        # 61f070 <_exit@GLIBC_2.2.5>
  4029f6:	68 0b 00 00 00       	pushq  $0xb
  4029fb:	e9 30 ff ff ff       	jmpq   402930 <.plt>

0000000000402a00 <strcpy@plt>:
  402a00:	ff 25 72 c6 21 00    	jmpq   *0x21c672(%rip)        # 61f078 <strcpy@GLIBC_2.2.5>
  402a06:	68 0c 00 00 00       	pushq  $0xc
  402a0b:	e9 20 ff ff ff       	jmpq   402930 <.plt>

0000000000402a10 <chroot@plt>:
  402a10:	ff 25 6a c6 21 00    	jmpq   *0x21c66a(%rip)        # 61f080 <chroot@GLIBC_2.2.5>
  402a16:	68 0d 00 00 00       	pushq  $0xd
  402a1b:	e9 10 ff ff ff       	jmpq   402930 <.plt>

0000000000402a20 <__isoc99_fscanf@plt>:
  402a20:	ff 25 62 c6 21 00    	jmpq   *0x21c662(%rip)        # 61f088 <__isoc99_fscanf@GLIBC_2.7>
  402a26:	68 0e 00 00 00       	pushq  $0xe
  402a2b:	e9 00 ff ff ff       	jmpq   402930 <.plt>

0000000000402a30 <toupper@plt>:
  402a30:	ff 25 5a c6 21 00    	jmpq   *0x21c65a(%rip)        # 61f090 <toupper@GLIBC_2.2.5>
  402a36:	68 0f 00 00 00       	pushq  $0xf
  402a3b:	e9 f0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a40 <puts@plt>:
  402a40:	ff 25 52 c6 21 00    	jmpq   *0x21c652(%rip)        # 61f098 <puts@GLIBC_2.2.5>
  402a46:	68 10 00 00 00       	pushq  $0x10
  402a4b:	e9 e0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a50 <ferror@plt>:
  402a50:	ff 25 4a c6 21 00    	jmpq   *0x21c64a(%rip)        # 61f0a0 <ferror@GLIBC_2.2.5>
  402a56:	68 11 00 00 00       	pushq  $0x11
  402a5b:	e9 d0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a60 <isatty@plt>:
  402a60:	ff 25 42 c6 21 00    	jmpq   *0x21c642(%rip)        # 61f0a8 <isatty@GLIBC_2.2.5>
  402a66:	68 12 00 00 00       	pushq  $0x12
  402a6b:	e9 c0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a70 <fread@plt>:
  402a70:	ff 25 3a c6 21 00    	jmpq   *0x21c63a(%rip)        # 61f0b0 <fread@GLIBC_2.2.5>
  402a76:	68 13 00 00 00       	pushq  $0x13
  402a7b:	e9 b0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a80 <readlink@plt>:
  402a80:	ff 25 32 c6 21 00    	jmpq   *0x21c632(%rip)        # 61f0b8 <readlink@GLIBC_2.2.5>
  402a86:	68 14 00 00 00       	pushq  $0x14
  402a8b:	e9 a0 fe ff ff       	jmpq   402930 <.plt>

0000000000402a90 <write@plt>:
  402a90:	ff 25 2a c6 21 00    	jmpq   *0x21c62a(%rip)        # 61f0c0 <write@GLIBC_2.2.5>
  402a96:	68 15 00 00 00       	pushq  $0x15
  402a9b:	e9 90 fe ff ff       	jmpq   402930 <.plt>

0000000000402aa0 <getpid@plt>:
  402aa0:	ff 25 22 c6 21 00    	jmpq   *0x21c622(%rip)        # 61f0c8 <getpid@GLIBC_2.2.5>
  402aa6:	68 16 00 00 00       	pushq  $0x16
  402aab:	e9 80 fe ff ff       	jmpq   402930 <.plt>

0000000000402ab0 <pathconf@plt>:
  402ab0:	ff 25 1a c6 21 00    	jmpq   *0x21c61a(%rip)        # 61f0d0 <pathconf@GLIBC_2.2.5>
  402ab6:	68 17 00 00 00       	pushq  $0x17
  402abb:	e9 70 fe ff ff       	jmpq   402930 <.plt>

0000000000402ac0 <clock@plt>:
  402ac0:	ff 25 12 c6 21 00    	jmpq   *0x21c612(%rip)        # 61f0d8 <clock@GLIBC_2.2.5>
  402ac6:	68 18 00 00 00       	pushq  $0x18
  402acb:	e9 60 fe ff ff       	jmpq   402930 <.plt>

0000000000402ad0 <fclose@plt>:
  402ad0:	ff 25 0a c6 21 00    	jmpq   *0x21c60a(%rip)        # 61f0e0 <fclose@GLIBC_2.2.5>
  402ad6:	68 19 00 00 00       	pushq  $0x19
  402adb:	e9 50 fe ff ff       	jmpq   402930 <.plt>

0000000000402ae0 <ctime@plt>:
  402ae0:	ff 25 02 c6 21 00    	jmpq   *0x21c602(%rip)        # 61f0e8 <ctime@GLIBC_2.2.5>
  402ae6:	68 1a 00 00 00       	pushq  $0x1a
  402aeb:	e9 40 fe ff ff       	jmpq   402930 <.plt>

0000000000402af0 <rmdir@plt>:
  402af0:	ff 25 fa c5 21 00    	jmpq   *0x21c5fa(%rip)        # 61f0f0 <rmdir@GLIBC_2.2.5>
  402af6:	68 1b 00 00 00       	pushq  $0x1b
  402afb:	e9 30 fe ff ff       	jmpq   402930 <.plt>

0000000000402b00 <strlen@plt>:
  402b00:	ff 25 f2 c5 21 00    	jmpq   *0x21c5f2(%rip)        # 61f0f8 <strlen@GLIBC_2.2.5>
  402b06:	68 1c 00 00 00       	pushq  $0x1c
  402b0b:	e9 20 fe ff ff       	jmpq   402930 <.plt>

0000000000402b10 <chdir@plt>:
  402b10:	ff 25 ea c5 21 00    	jmpq   *0x21c5ea(%rip)        # 61f100 <chdir@GLIBC_2.2.5>
  402b16:	68 1d 00 00 00       	pushq  $0x1d
  402b1b:	e9 10 fe ff ff       	jmpq   402930 <.plt>

0000000000402b20 <getuid@plt>:
  402b20:	ff 25 e2 c5 21 00    	jmpq   *0x21c5e2(%rip)        # 61f108 <getuid@GLIBC_2.2.5>
  402b26:	68 1e 00 00 00       	pushq  $0x1e
  402b2b:	e9 00 fe ff ff       	jmpq   402930 <.plt>

0000000000402b30 <setbuf@plt>:
  402b30:	ff 25 da c5 21 00    	jmpq   *0x21c5da(%rip)        # 61f110 <setbuf@GLIBC_2.2.5>
  402b36:	68 1f 00 00 00       	pushq  $0x1f
  402b3b:	e9 f0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b40 <asctime@plt>:
  402b40:	ff 25 d2 c5 21 00    	jmpq   *0x21c5d2(%rip)        # 61f118 <asctime@GLIBC_2.2.5>
  402b46:	68 20 00 00 00       	pushq  $0x20
  402b4b:	e9 e0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b50 <system@plt>:
  402b50:	ff 25 ca c5 21 00    	jmpq   *0x21c5ca(%rip)        # 61f120 <system@GLIBC_2.2.5>
  402b56:	68 21 00 00 00       	pushq  $0x21
  402b5b:	e9 d0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b60 <dup2@plt>:
  402b60:	ff 25 c2 c5 21 00    	jmpq   *0x21c5c2(%rip)        # 61f128 <dup2@GLIBC_2.2.5>
  402b66:	68 22 00 00 00       	pushq  $0x22
  402b6b:	e9 c0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b70 <strchr@plt>:
  402b70:	ff 25 ba c5 21 00    	jmpq   *0x21c5ba(%rip)        # 61f130 <strchr@GLIBC_2.2.5>
  402b76:	68 23 00 00 00       	pushq  $0x23
  402b7b:	e9 b0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b80 <printf@plt>:
  402b80:	ff 25 b2 c5 21 00    	jmpq   *0x21c5b2(%rip)        # 61f138 <printf@GLIBC_2.2.5>
  402b86:	68 24 00 00 00       	pushq  $0x24
  402b8b:	e9 a0 fd ff ff       	jmpq   402930 <.plt>

0000000000402b90 <fgetpos@plt>:
  402b90:	ff 25 aa c5 21 00    	jmpq   *0x21c5aa(%rip)        # 61f140 <fgetpos@GLIBC_2.2.5>
  402b96:	68 25 00 00 00       	pushq  $0x25
  402b9b:	e9 90 fd ff ff       	jmpq   402930 <.plt>

0000000000402ba0 <rewind@plt>:
  402ba0:	ff 25 a2 c5 21 00    	jmpq   *0x21c5a2(%rip)        # 61f148 <rewind@GLIBC_2.2.5>
  402ba6:	68 26 00 00 00       	pushq  $0x26
  402bab:	e9 80 fd ff ff       	jmpq   402930 <.plt>

0000000000402bb0 <_IO_putc@plt>:
  402bb0:	ff 25 9a c5 21 00    	jmpq   *0x21c59a(%rip)        # 61f150 <_IO_putc@GLIBC_2.2.5>
  402bb6:	68 27 00 00 00       	pushq  $0x27
  402bbb:	e9 70 fd ff ff       	jmpq   402930 <.plt>

0000000000402bc0 <symlink@plt>:
  402bc0:	ff 25 92 c5 21 00    	jmpq   *0x21c592(%rip)        # 61f158 <symlink@GLIBC_2.2.5>
  402bc6:	68 28 00 00 00       	pushq  $0x28
  402bcb:	e9 60 fd ff ff       	jmpq   402930 <.plt>

0000000000402bd0 <snprintf@plt>:
  402bd0:	ff 25 8a c5 21 00    	jmpq   *0x21c58a(%rip)        # 61f160 <snprintf@GLIBC_2.2.5>
  402bd6:	68 29 00 00 00       	pushq  $0x29
  402bdb:	e9 50 fd ff ff       	jmpq   402930 <.plt>

0000000000402be0 <strrchr@plt>:
  402be0:	ff 25 82 c5 21 00    	jmpq   *0x21c582(%rip)        # 61f168 <strrchr@GLIBC_2.2.5>
  402be6:	68 2a 00 00 00       	pushq  $0x2a
  402beb:	e9 40 fd ff ff       	jmpq   402930 <.plt>

0000000000402bf0 <ftruncate@plt>:
  402bf0:	ff 25 7a c5 21 00    	jmpq   *0x21c57a(%rip)        # 61f170 <ftruncate@GLIBC_2.2.5>
  402bf6:	68 2b 00 00 00       	pushq  $0x2b
  402bfb:	e9 30 fd ff ff       	jmpq   402930 <.plt>

0000000000402c00 <gmtime_r@plt>:
  402c00:	ff 25 72 c5 21 00    	jmpq   *0x21c572(%rip)        # 61f178 <gmtime_r@GLIBC_2.2.5>
  402c06:	68 2c 00 00 00       	pushq  $0x2c
  402c0b:	e9 20 fd ff ff       	jmpq   402930 <.plt>

0000000000402c10 <dup@plt>:
  402c10:	ff 25 6a c5 21 00    	jmpq   *0x21c56a(%rip)        # 61f180 <dup@GLIBC_2.2.5>
  402c16:	68 2d 00 00 00       	pushq  $0x2d
  402c1b:	e9 10 fd ff ff       	jmpq   402930 <.plt>

0000000000402c20 <lseek@plt>:
  402c20:	ff 25 62 c5 21 00    	jmpq   *0x21c562(%rip)        # 61f188 <lseek@GLIBC_2.2.5>
  402c26:	68 2e 00 00 00       	pushq  $0x2e
  402c2b:	e9 00 fd ff ff       	jmpq   402930 <.plt>

0000000000402c30 <__assert_fail@plt>:
  402c30:	ff 25 5a c5 21 00    	jmpq   *0x21c55a(%rip)        # 61f190 <__assert_fail@GLIBC_2.2.5>
  402c36:	68 2f 00 00 00       	pushq  $0x2f
  402c3b:	e9 f0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c40 <fputs@plt>:
  402c40:	ff 25 52 c5 21 00    	jmpq   *0x21c552(%rip)        # 61f198 <fputs@GLIBC_2.2.5>
  402c46:	68 30 00 00 00       	pushq  $0x30
  402c4b:	e9 e0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c50 <lockf@plt>:
  402c50:	ff 25 4a c5 21 00    	jmpq   *0x21c54a(%rip)        # 61f1a0 <lockf@GLIBC_2.2.5>
  402c56:	68 31 00 00 00       	pushq  $0x31
  402c5b:	e9 d0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c60 <memset@plt>:
  402c60:	ff 25 42 c5 21 00    	jmpq   *0x21c542(%rip)        # 61f1a8 <memset@GLIBC_2.2.5>
  402c66:	68 32 00 00 00       	pushq  $0x32
  402c6b:	e9 c0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c70 <geteuid@plt>:
  402c70:	ff 25 3a c5 21 00    	jmpq   *0x21c53a(%rip)        # 61f1b0 <geteuid@GLIBC_2.2.5>
  402c76:	68 33 00 00 00       	pushq  $0x33
  402c7b:	e9 b0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c80 <freopen@plt>:
  402c80:	ff 25 32 c5 21 00    	jmpq   *0x21c532(%rip)        # 61f1b8 <freopen@GLIBC_2.2.5>
  402c86:	68 34 00 00 00       	pushq  $0x34
  402c8b:	e9 a0 fc ff ff       	jmpq   402930 <.plt>

0000000000402c90 <index@plt>:
  402c90:	ff 25 2a c5 21 00    	jmpq   *0x21c52a(%rip)        # 61f1c0 <index@GLIBC_2.2.5>
  402c96:	68 35 00 00 00       	pushq  $0x35
  402c9b:	e9 90 fc ff ff       	jmpq   402930 <.plt>

0000000000402ca0 <getcwd@plt>:
  402ca0:	ff 25 22 c5 21 00    	jmpq   *0x21c522(%rip)        # 61f1c8 <getcwd@GLIBC_2.2.5>
  402ca6:	68 36 00 00 00       	pushq  $0x36
  402cab:	e9 80 fc ff ff       	jmpq   402930 <.plt>

0000000000402cb0 <strncat@plt>:
  402cb0:	ff 25 1a c5 21 00    	jmpq   *0x21c51a(%rip)        # 61f1d0 <strncat@GLIBC_2.2.5>
  402cb6:	68 37 00 00 00       	pushq  $0x37
  402cbb:	e9 70 fc ff ff       	jmpq   402930 <.plt>

0000000000402cc0 <fgetc@plt>:
  402cc0:	ff 25 12 c5 21 00    	jmpq   *0x21c512(%rip)        # 61f1d8 <fgetc@GLIBC_2.2.5>
  402cc6:	68 38 00 00 00       	pushq  $0x38
  402ccb:	e9 60 fc ff ff       	jmpq   402930 <.plt>

0000000000402cd0 <alarm@plt>:
  402cd0:	ff 25 0a c5 21 00    	jmpq   *0x21c50a(%rip)        # 61f1e0 <alarm@GLIBC_2.2.5>
  402cd6:	68 39 00 00 00       	pushq  $0x39
  402cdb:	e9 50 fc ff ff       	jmpq   402930 <.plt>

0000000000402ce0 <close@plt>:
  402ce0:	ff 25 02 c5 21 00    	jmpq   *0x21c502(%rip)        # 61f1e8 <close@GLIBC_2.2.5>
  402ce6:	68 3a 00 00 00       	pushq  $0x3a
  402ceb:	e9 40 fc ff ff       	jmpq   402930 <.plt>

0000000000402cf0 <setsid@plt>:
  402cf0:	ff 25 fa c4 21 00    	jmpq   *0x21c4fa(%rip)        # 61f1f0 <setsid@GLIBC_2.2.5>
  402cf6:	68 3b 00 00 00       	pushq  $0x3b
  402cfb:	e9 30 fc ff ff       	jmpq   402930 <.plt>

0000000000402d00 <strspn@plt>:
  402d00:	ff 25 f2 c4 21 00    	jmpq   *0x21c4f2(%rip)        # 61f1f8 <strspn@GLIBC_2.2.5>
  402d06:	68 3c 00 00 00       	pushq  $0x3c
  402d0b:	e9 20 fc ff ff       	jmpq   402930 <.plt>

0000000000402d10 <fputc@plt>:
  402d10:	ff 25 ea c4 21 00    	jmpq   *0x21c4ea(%rip)        # 61f200 <fputc@GLIBC_2.2.5>
  402d16:	68 3d 00 00 00       	pushq  $0x3d
  402d1b:	e9 10 fc ff ff       	jmpq   402930 <.plt>

0000000000402d20 <ualarm@plt>:
  402d20:	ff 25 e2 c4 21 00    	jmpq   *0x21c4e2(%rip)        # 61f208 <ualarm@GLIBC_2.2.5>
  402d26:	68 3e 00 00 00       	pushq  $0x3e
  402d2b:	e9 00 fc ff ff       	jmpq   402930 <.plt>

0000000000402d30 <strcspn@plt>:
  402d30:	ff 25 da c4 21 00    	jmpq   *0x21c4da(%rip)        # 61f210 <strcspn@GLIBC_2.2.5>
  402d36:	68 3f 00 00 00       	pushq  $0x3f
  402d3b:	e9 f0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d40 <strtok_r@plt>:
  402d40:	ff 25 d2 c4 21 00    	jmpq   *0x21c4d2(%rip)        # 61f218 <strtok_r@GLIBC_2.2.5>
  402d46:	68 40 00 00 00       	pushq  $0x40
  402d4b:	e9 e0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d50 <memchr@plt>:
  402d50:	ff 25 ca c4 21 00    	jmpq   *0x21c4ca(%rip)        # 61f220 <memchr@GLIBC_2.2.5>
  402d56:	68 41 00 00 00       	pushq  $0x41
  402d5b:	e9 d0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d60 <read@plt>:
  402d60:	ff 25 c2 c4 21 00    	jmpq   *0x21c4c2(%rip)        # 61f228 <read@GLIBC_2.2.5>
  402d66:	68 42 00 00 00       	pushq  $0x42
  402d6b:	e9 c0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d70 <srand@plt>:
  402d70:	ff 25 ba c4 21 00    	jmpq   *0x21c4ba(%rip)        # 61f230 <srand@GLIBC_2.2.5>
  402d76:	68 43 00 00 00       	pushq  $0x43
  402d7b:	e9 b0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d80 <memcmp@plt>:
  402d80:	ff 25 b2 c4 21 00    	jmpq   *0x21c4b2(%rip)        # 61f238 <memcmp@GLIBC_2.2.5>
  402d86:	68 44 00 00 00       	pushq  $0x44
  402d8b:	e9 a0 fb ff ff       	jmpq   402930 <.plt>

0000000000402d90 <sbrk@plt>:
  402d90:	ff 25 aa c4 21 00    	jmpq   *0x21c4aa(%rip)        # 61f240 <sbrk@GLIBC_2.2.5>
  402d96:	68 45 00 00 00       	pushq  $0x45
  402d9b:	e9 90 fb ff ff       	jmpq   402930 <.plt>

0000000000402da0 <fgets@plt>:
  402da0:	ff 25 a2 c4 21 00    	jmpq   *0x21c4a2(%rip)        # 61f248 <fgets@GLIBC_2.2.5>
  402da6:	68 46 00 00 00       	pushq  $0x46
  402dab:	e9 80 fb ff ff       	jmpq   402930 <.plt>

0000000000402db0 <_setjmp@plt>:
  402db0:	ff 25 9a c4 21 00    	jmpq   *0x21c49a(%rip)        # 61f250 <_setjmp@GLIBC_2.2.5>
  402db6:	68 47 00 00 00       	pushq  $0x47
  402dbb:	e9 70 fb ff ff       	jmpq   402930 <.plt>

0000000000402dc0 <calloc@plt>:
  402dc0:	ff 25 92 c4 21 00    	jmpq   *0x21c492(%rip)        # 61f258 <calloc@GLIBC_2.2.5>
  402dc6:	68 48 00 00 00       	pushq  $0x48
  402dcb:	e9 60 fb ff ff       	jmpq   402930 <.plt>

0000000000402dd0 <strxfrm@plt>:
  402dd0:	ff 25 8a c4 21 00    	jmpq   *0x21c48a(%rip)        # 61f260 <strxfrm@GLIBC_2.2.5>
  402dd6:	68 49 00 00 00       	pushq  $0x49
  402ddb:	e9 50 fb ff ff       	jmpq   402930 <.plt>

0000000000402de0 <tmpfile@plt>:
  402de0:	ff 25 82 c4 21 00    	jmpq   *0x21c482(%rip)        # 61f268 <tmpfile@GLIBC_2.2.5>
  402de6:	68 4a 00 00 00       	pushq  $0x4a
  402deb:	e9 40 fb ff ff       	jmpq   402930 <.plt>

0000000000402df0 <strcmp@plt>:
  402df0:	ff 25 7a c4 21 00    	jmpq   *0x21c47a(%rip)        # 61f270 <strcmp@GLIBC_2.2.5>
  402df6:	68 4b 00 00 00       	pushq  $0x4b
  402dfb:	e9 30 fb ff ff       	jmpq   402930 <.plt>

0000000000402e00 <getchar@plt>:
  402e00:	ff 25 72 c4 21 00    	jmpq   *0x21c472(%rip)        # 61f278 <getchar@GLIBC_2.2.5>
  402e06:	68 4c 00 00 00       	pushq  $0x4c
  402e0b:	e9 20 fb ff ff       	jmpq   402930 <.plt>

0000000000402e10 <signal@plt>:
  402e10:	ff 25 6a c4 21 00    	jmpq   *0x21c46a(%rip)        # 61f280 <signal@GLIBC_2.2.5>
  402e16:	68 4d 00 00 00       	pushq  $0x4d
  402e1b:	e9 10 fb ff ff       	jmpq   402930 <.plt>

0000000000402e20 <fpathconf@plt>:
  402e20:	ff 25 62 c4 21 00    	jmpq   *0x21c462(%rip)        # 61f288 <fpathconf@GLIBC_2.2.5>
  402e26:	68 4e 00 00 00       	pushq  $0x4e
  402e2b:	e9 00 fb ff ff       	jmpq   402930 <.plt>

0000000000402e30 <fprintf@plt>:
  402e30:	ff 25 5a c4 21 00    	jmpq   *0x21c45a(%rip)        # 61f290 <fprintf@GLIBC_2.2.5>
  402e36:	68 4f 00 00 00       	pushq  $0x4f
  402e3b:	e9 f0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e40 <ftell@plt>:
  402e40:	ff 25 52 c4 21 00    	jmpq   *0x21c452(%rip)        # 61f298 <ftell@GLIBC_2.2.5>
  402e46:	68 50 00 00 00       	pushq  $0x50
  402e4b:	e9 e0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e50 <feof@plt>:
  402e50:	ff 25 4a c4 21 00    	jmpq   *0x21c44a(%rip)        # 61f2a0 <feof@GLIBC_2.2.5>
  402e56:	68 51 00 00 00       	pushq  $0x51
  402e5b:	e9 d0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e60 <strtol@plt>:
  402e60:	ff 25 42 c4 21 00    	jmpq   *0x21c442(%rip)        # 61f2a8 <strtol@GLIBC_2.2.5>
  402e66:	68 52 00 00 00       	pushq  $0x52
  402e6b:	e9 c0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e70 <clearerr@plt>:
  402e70:	ff 25 3a c4 21 00    	jmpq   *0x21c43a(%rip)        # 61f2b0 <clearerr@GLIBC_2.2.5>
  402e76:	68 53 00 00 00       	pushq  $0x53
  402e7b:	e9 b0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e80 <memcpy@plt>:
  402e80:	ff 25 32 c4 21 00    	jmpq   *0x21c432(%rip)        # 61f2b8 <memcpy@GLIBC_2.14>
  402e86:	68 54 00 00 00       	pushq  $0x54
  402e8b:	e9 a0 fa ff ff       	jmpq   402930 <.plt>

0000000000402e90 <truncate@plt>:
  402e90:	ff 25 2a c4 21 00    	jmpq   *0x21c42a(%rip)        # 61f2c0 <truncate@GLIBC_2.2.5>
  402e96:	68 55 00 00 00       	pushq  $0x55
  402e9b:	e9 90 fa ff ff       	jmpq   402930 <.plt>

0000000000402ea0 <time@plt>:
  402ea0:	ff 25 22 c4 21 00    	jmpq   *0x21c422(%rip)        # 61f2c8 <time@GLIBC_2.2.5>
  402ea6:	68 56 00 00 00       	pushq  $0x56
  402eab:	e9 80 fa ff ff       	jmpq   402930 <.plt>

0000000000402eb0 <fileno@plt>:
  402eb0:	ff 25 1a c4 21 00    	jmpq   *0x21c41a(%rip)        # 61f2d0 <fileno@GLIBC_2.2.5>
  402eb6:	68 57 00 00 00       	pushq  $0x57
  402ebb:	e9 70 fa ff ff       	jmpq   402930 <.plt>

0000000000402ec0 <getgid@plt>:
  402ec0:	ff 25 12 c4 21 00    	jmpq   *0x21c412(%rip)        # 61f2d8 <getgid@GLIBC_2.2.5>
  402ec6:	68 58 00 00 00       	pushq  $0x58
  402ecb:	e9 60 fa ff ff       	jmpq   402930 <.plt>

0000000000402ed0 <tcgetpgrp@plt>:
  402ed0:	ff 25 0a c4 21 00    	jmpq   *0x21c40a(%rip)        # 61f2e0 <tcgetpgrp@GLIBC_2.2.5>
  402ed6:	68 59 00 00 00       	pushq  $0x59
  402edb:	e9 50 fa ff ff       	jmpq   402930 <.plt>

0000000000402ee0 <__xstat@plt>:
  402ee0:	ff 25 02 c4 21 00    	jmpq   *0x21c402(%rip)        # 61f2e8 <__xstat@GLIBC_2.2.5>
  402ee6:	68 5a 00 00 00       	pushq  $0x5a
  402eeb:	e9 40 fa ff ff       	jmpq   402930 <.plt>

0000000000402ef0 <sync@plt>:
  402ef0:	ff 25 fa c3 21 00    	jmpq   *0x21c3fa(%rip)        # 61f2f0 <sync@GLIBC_2.2.5>
  402ef6:	68 5b 00 00 00       	pushq  $0x5b
  402efb:	e9 30 fa ff ff       	jmpq   402930 <.plt>

0000000000402f00 <tolower@plt>:
  402f00:	ff 25 f2 c3 21 00    	jmpq   *0x21c3f2(%rip)        # 61f2f8 <tolower@GLIBC_2.2.5>
  402f06:	68 5c 00 00 00       	pushq  $0x5c
  402f0b:	e9 20 fa ff ff       	jmpq   402930 <.plt>

0000000000402f10 <pause@plt>:
  402f10:	ff 25 ea c3 21 00    	jmpq   *0x21c3ea(%rip)        # 61f300 <pause@GLIBC_2.2.5>
  402f16:	68 5d 00 00 00       	pushq  $0x5d
  402f1b:	e9 10 fa ff ff       	jmpq   402930 <.plt>

0000000000402f20 <malloc@plt>:
  402f20:	ff 25 e2 c3 21 00    	jmpq   *0x21c3e2(%rip)        # 61f308 <malloc@GLIBC_2.2.5>
  402f26:	68 5e 00 00 00       	pushq  $0x5e
  402f2b:	e9 00 fa ff ff       	jmpq   402930 <.plt>

0000000000402f30 <fflush@plt>:
  402f30:	ff 25 da c3 21 00    	jmpq   *0x21c3da(%rip)        # 61f310 <fflush@GLIBC_2.2.5>
  402f36:	68 5f 00 00 00       	pushq  $0x5f
  402f3b:	e9 f0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f40 <nice@plt>:
  402f40:	ff 25 d2 c3 21 00    	jmpq   *0x21c3d2(%rip)        # 61f318 <nice@GLIBC_2.2.5>
  402f46:	68 60 00 00 00       	pushq  $0x60
  402f4b:	e9 e0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f50 <__isoc99_sscanf@plt>:
  402f50:	ff 25 ca c3 21 00    	jmpq   *0x21c3ca(%rip)        # 61f320 <__isoc99_sscanf@GLIBC_2.7>
  402f56:	68 61 00 00 00       	pushq  $0x61
  402f5b:	e9 d0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f60 <ungetc@plt>:
  402f60:	ff 25 c2 c3 21 00    	jmpq   *0x21c3c2(%rip)        # 61f328 <ungetc@GLIBC_2.2.5>
  402f66:	68 62 00 00 00       	pushq  $0x62
  402f6b:	e9 c0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f70 <ttyname_r@plt>:
  402f70:	ff 25 ba c3 21 00    	jmpq   *0x21c3ba(%rip)        # 61f330 <ttyname_r@GLIBC_2.2.5>
  402f76:	68 63 00 00 00       	pushq  $0x63
  402f7b:	e9 b0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f80 <getlogin@plt>:
  402f80:	ff 25 b2 c3 21 00    	jmpq   *0x21c3b2(%rip)        # 61f338 <getlogin@GLIBC_2.2.5>
  402f86:	68 64 00 00 00       	pushq  $0x64
  402f8b:	e9 a0 f9 ff ff       	jmpq   402930 <.plt>

0000000000402f90 <lchown@plt>:
  402f90:	ff 25 aa c3 21 00    	jmpq   *0x21c3aa(%rip)        # 61f340 <lchown@GLIBC_2.2.5>
  402f96:	68 65 00 00 00       	pushq  $0x65
  402f9b:	e9 90 f9 ff ff       	jmpq   402930 <.plt>

0000000000402fa0 <getegid@plt>:
  402fa0:	ff 25 a2 c3 21 00    	jmpq   *0x21c3a2(%rip)        # 61f348 <getegid@GLIBC_2.2.5>
  402fa6:	68 66 00 00 00       	pushq  $0x66
  402fab:	e9 80 f9 ff ff       	jmpq   402930 <.plt>

0000000000402fb0 <strcoll@plt>:
  402fb0:	ff 25 9a c3 21 00    	jmpq   *0x21c39a(%rip)        # 61f350 <strcoll@GLIBC_2.2.5>
  402fb6:	68 67 00 00 00       	pushq  $0x67
  402fbb:	e9 70 f9 ff ff       	jmpq   402930 <.plt>

0000000000402fc0 <mktime@plt>:
  402fc0:	ff 25 92 c3 21 00    	jmpq   *0x21c392(%rip)        # 61f358 <mktime@GLIBC_2.2.5>
  402fc6:	68 68 00 00 00       	pushq  $0x68
  402fcb:	e9 60 f9 ff ff       	jmpq   402930 <.plt>

0000000000402fd0 <strpbrk@plt>:
  402fd0:	ff 25 8a c3 21 00    	jmpq   *0x21c38a(%rip)        # 61f360 <strpbrk@GLIBC_2.2.5>
  402fd6:	68 69 00 00 00       	pushq  $0x69
  402fdb:	e9 50 f9 ff ff       	jmpq   402930 <.plt>

0000000000402fe0 <confstr@plt>:
  402fe0:	ff 25 82 c3 21 00    	jmpq   *0x21c382(%rip)        # 61f368 <confstr@GLIBC_2.2.5>
  402fe6:	68 6a 00 00 00       	pushq  $0x6a
  402feb:	e9 40 f9 ff ff       	jmpq   402930 <.plt>

0000000000402ff0 <fseek@plt>:
  402ff0:	ff 25 7a c3 21 00    	jmpq   *0x21c37a(%rip)        # 61f370 <fseek@GLIBC_2.2.5>
  402ff6:	68 6b 00 00 00       	pushq  $0x6b
  402ffb:	e9 30 f9 ff ff       	jmpq   402930 <.plt>

0000000000403000 <fchdir@plt>:
  403000:	ff 25 72 c3 21 00    	jmpq   *0x21c372(%rip)        # 61f378 <fchdir@GLIBC_2.2.5>
  403006:	68 6c 00 00 00       	pushq  $0x6c
  40300b:	e9 20 f9 ff ff       	jmpq   402930 <.plt>

0000000000403010 <setreuid@plt>:
  403010:	ff 25 6a c3 21 00    	jmpq   *0x21c36a(%rip)        # 61f380 <setreuid@GLIBC_2.2.5>
  403016:	68 6d 00 00 00       	pushq  $0x6d
  40301b:	e9 10 f9 ff ff       	jmpq   402930 <.plt>

0000000000403020 <chown@plt>:
  403020:	ff 25 62 c3 21 00    	jmpq   *0x21c362(%rip)        # 61f388 <chown@GLIBC_2.2.5>
  403026:	68 6e 00 00 00       	pushq  $0x6e
  40302b:	e9 00 f9 ff ff       	jmpq   402930 <.plt>

0000000000403030 <ttyname@plt>:
  403030:	ff 25 5a c3 21 00    	jmpq   *0x21c35a(%rip)        # 61f390 <ttyname@GLIBC_2.2.5>
  403036:	68 6f 00 00 00       	pushq  $0x6f
  40303b:	e9 f0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403040 <setregid@plt>:
  403040:	ff 25 52 c3 21 00    	jmpq   *0x21c352(%rip)        # 61f398 <setregid@GLIBC_2.2.5>
  403046:	68 70 00 00 00       	pushq  $0x70
  40304b:	e9 e0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403050 <realloc@plt>:
  403050:	ff 25 4a c3 21 00    	jmpq   *0x21c34a(%rip)        # 61f3a0 <realloc@GLIBC_2.2.5>
  403056:	68 71 00 00 00       	pushq  $0x71
  40305b:	e9 d0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403060 <getlogin_r@plt>:
  403060:	ff 25 42 c3 21 00    	jmpq   *0x21c342(%rip)        # 61f3a8 <getlogin_r@GLIBC_2.2.5>
  403066:	68 72 00 00 00       	pushq  $0x72
  40306b:	e9 c0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403070 <timegm@plt>:
  403070:	ff 25 3a c3 21 00    	jmpq   *0x21c33a(%rip)        # 61f3b0 <timegm@GLIBC_2.2.5>
  403076:	68 73 00 00 00       	pushq  $0x73
  40307b:	e9 b0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403080 <setvbuf@plt>:
  403080:	ff 25 32 c3 21 00    	jmpq   *0x21c332(%rip)        # 61f3b8 <setvbuf@GLIBC_2.2.5>
  403086:	68 74 00 00 00       	pushq  $0x74
  40308b:	e9 a0 f8 ff ff       	jmpq   402930 <.plt>

0000000000403090 <longjmp@plt>:
  403090:	ff 25 2a c3 21 00    	jmpq   *0x21c32a(%rip)        # 61f3c0 <longjmp@GLIBC_2.2.5>
  403096:	68 75 00 00 00       	pushq  $0x75
  40309b:	e9 90 f8 ff ff       	jmpq   402930 <.plt>

00000000004030a0 <strftime@plt>:
  4030a0:	ff 25 22 c3 21 00    	jmpq   *0x21c322(%rip)        # 61f3c8 <strftime@GLIBC_2.2.5>
  4030a6:	68 76 00 00 00       	pushq  $0x76
  4030ab:	e9 80 f8 ff ff       	jmpq   402930 <.plt>

00000000004030b0 <memmove@plt>:
  4030b0:	ff 25 1a c3 21 00    	jmpq   *0x21c31a(%rip)        # 61f3d0 <memmove@GLIBC_2.2.5>
  4030b6:	68 77 00 00 00       	pushq  $0x77
  4030bb:	e9 70 f8 ff ff       	jmpq   402930 <.plt>

00000000004030c0 <fsync@plt>:
  4030c0:	ff 25 12 c3 21 00    	jmpq   *0x21c312(%rip)        # 61f3d8 <fsync@GLIBC_2.2.5>
  4030c6:	68 78 00 00 00       	pushq  $0x78
  4030cb:	e9 60 f8 ff ff       	jmpq   402930 <.plt>

00000000004030d0 <setgid@plt>:
  4030d0:	ff 25 0a c3 21 00    	jmpq   *0x21c30a(%rip)        # 61f3e0 <setgid@GLIBC_2.2.5>
  4030d6:	68 79 00 00 00       	pushq  $0x79
  4030db:	e9 50 f8 ff ff       	jmpq   402930 <.plt>

00000000004030e0 <getpgrp@plt>:
  4030e0:	ff 25 02 c3 21 00    	jmpq   *0x21c302(%rip)        # 61f3e8 <getpgrp@GLIBC_2.2.5>
  4030e6:	68 7a 00 00 00       	pushq  $0x7a
  4030eb:	e9 40 f8 ff ff       	jmpq   402930 <.plt>

00000000004030f0 <tcsetpgrp@plt>:
  4030f0:	ff 25 fa c2 21 00    	jmpq   *0x21c2fa(%rip)        # 61f3f0 <tcsetpgrp@GLIBC_2.2.5>
  4030f6:	68 7b 00 00 00       	pushq  $0x7b
  4030fb:	e9 30 f8 ff ff       	jmpq   402930 <.plt>

0000000000403100 <getpass@plt>:
  403100:	ff 25 f2 c2 21 00    	jmpq   *0x21c2f2(%rip)        # 61f3f8 <getpass@GLIBC_2.2.5>
  403106:	68 7c 00 00 00       	pushq  $0x7c
  40310b:	e9 20 f8 ff ff       	jmpq   402930 <.plt>

0000000000403110 <atol@plt>:
  403110:	ff 25 ea c2 21 00    	jmpq   *0x21c2ea(%rip)        # 61f400 <atol@GLIBC_2.2.5>
  403116:	68 7d 00 00 00       	pushq  $0x7d
  40311b:	e9 10 f8 ff ff       	jmpq   402930 <.plt>

0000000000403120 <access@plt>:
  403120:	ff 25 e2 c2 21 00    	jmpq   *0x21c2e2(%rip)        # 61f408 <access@GLIBC_2.2.5>
  403126:	68 7e 00 00 00       	pushq  $0x7e
  40312b:	e9 00 f8 ff ff       	jmpq   402930 <.plt>

0000000000403130 <ctermid@plt>:
  403130:	ff 25 da c2 21 00    	jmpq   *0x21c2da(%rip)        # 61f410 <ctermid@GLIBC_2.2.5>
  403136:	68 7f 00 00 00       	pushq  $0x7f
  40313b:	e9 f0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403140 <fchown@plt>:
  403140:	ff 25 d2 c2 21 00    	jmpq   *0x21c2d2(%rip)        # 61f418 <fchown@GLIBC_2.2.5>
  403146:	68 80 00 00 00       	pushq  $0x80
  40314b:	e9 e0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403150 <fopen@plt>:
  403150:	ff 25 ca c2 21 00    	jmpq   *0x21c2ca(%rip)        # 61f420 <fopen@GLIBC_2.2.5>
  403156:	68 81 00 00 00       	pushq  $0x81
  40315b:	e9 d0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403160 <rindex@plt>:
  403160:	ff 25 c2 c2 21 00    	jmpq   *0x21c2c2(%rip)        # 61f428 <rindex@GLIBC_2.2.5>
  403166:	68 82 00 00 00       	pushq  $0x82
  40316b:	e9 c0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403170 <perror@plt>:
  403170:	ff 25 ba c2 21 00    	jmpq   *0x21c2ba(%rip)        # 61f430 <perror@GLIBC_2.2.5>
  403176:	68 83 00 00 00       	pushq  $0x83
  40317b:	e9 b0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403180 <strtok@plt>:
  403180:	ff 25 b2 c2 21 00    	jmpq   *0x21c2b2(%rip)        # 61f438 <strtok@GLIBC_2.2.5>
  403186:	68 84 00 00 00       	pushq  $0x84
  40318b:	e9 a0 f7 ff ff       	jmpq   402930 <.plt>

0000000000403190 <sysconf@plt>:
  403190:	ff 25 aa c2 21 00    	jmpq   *0x21c2aa(%rip)        # 61f440 <sysconf@GLIBC_2.2.5>
  403196:	68 85 00 00 00       	pushq  $0x85
  40319b:	e9 90 f7 ff ff       	jmpq   402930 <.plt>

00000000004031a0 <rename@plt>:
  4031a0:	ff 25 a2 c2 21 00    	jmpq   *0x21c2a2(%rip)        # 61f448 <rename@GLIBC_2.2.5>
  4031a6:	68 86 00 00 00       	pushq  $0x86
  4031ab:	e9 80 f7 ff ff       	jmpq   402930 <.plt>

00000000004031b0 <gmtime@plt>:
  4031b0:	ff 25 9a c2 21 00    	jmpq   *0x21c29a(%rip)        # 61f450 <gmtime@GLIBC_2.2.5>
  4031b6:	68 87 00 00 00       	pushq  $0x87
  4031bb:	e9 70 f7 ff ff       	jmpq   402930 <.plt>

00000000004031c0 <vfork@plt>:
  4031c0:	ff 25 92 c2 21 00    	jmpq   *0x21c292(%rip)        # 61f458 <vfork@GLIBC_2.2.5>
  4031c6:	68 88 00 00 00       	pushq  $0x88
  4031cb:	e9 60 f7 ff ff       	jmpq   402930 <.plt>

00000000004031d0 <fsetpos@plt>:
  4031d0:	ff 25 8a c2 21 00    	jmpq   *0x21c28a(%rip)        # 61f460 <fsetpos@GLIBC_2.2.5>
  4031d6:	68 89 00 00 00       	pushq  $0x89
  4031db:	e9 50 f7 ff ff       	jmpq   402930 <.plt>

00000000004031e0 <strtoul@plt>:
  4031e0:	ff 25 82 c2 21 00    	jmpq   *0x21c282(%rip)        # 61f468 <strtoul@GLIBC_2.2.5>
  4031e6:	68 8a 00 00 00       	pushq  $0x8a
  4031eb:	e9 40 f7 ff ff       	jmpq   402930 <.plt>

00000000004031f0 <atoi@plt>:
  4031f0:	ff 25 7a c2 21 00    	jmpq   *0x21c27a(%rip)        # 61f470 <atoi@GLIBC_2.2.5>
  4031f6:	68 8b 00 00 00       	pushq  $0x8b
  4031fb:	e9 30 f7 ff ff       	jmpq   402930 <.plt>

0000000000403200 <strcat@plt>:
  403200:	ff 25 72 c2 21 00    	jmpq   *0x21c272(%rip)        # 61f478 <strcat@GLIBC_2.2.5>
  403206:	68 8c 00 00 00       	pushq  $0x8c
  40320b:	e9 20 f7 ff ff       	jmpq   402930 <.plt>

0000000000403210 <setpgid@plt>:
  403210:	ff 25 6a c2 21 00    	jmpq   *0x21c26a(%rip)        # 61f480 <setpgid@GLIBC_2.2.5>
  403216:	68 8d 00 00 00       	pushq  $0x8d
  40321b:	e9 10 f7 ff ff       	jmpq   402930 <.plt>

0000000000403220 <getpagesize@plt>:
  403220:	ff 25 62 c2 21 00    	jmpq   *0x21c262(%rip)        # 61f488 <getpagesize@GLIBC_2.2.5>
  403226:	68 8e 00 00 00       	pushq  $0x8e
  40322b:	e9 00 f7 ff ff       	jmpq   402930 <.plt>

0000000000403230 <sprintf@plt>:
  403230:	ff 25 5a c2 21 00    	jmpq   *0x21c25a(%rip)        # 61f490 <sprintf@GLIBC_2.2.5>
  403236:	68 8f 00 00 00       	pushq  $0x8f
  40323b:	e9 f0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403240 <link@plt>:
  403240:	ff 25 52 c2 21 00    	jmpq   *0x21c252(%rip)        # 61f498 <link@GLIBC_2.2.5>
  403246:	68 90 00 00 00       	pushq  $0x90
  40324b:	e9 e0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403250 <getppid@plt>:
  403250:	ff 25 4a c2 21 00    	jmpq   *0x21c24a(%rip)        # 61f4a0 <getppid@GLIBC_2.2.5>
  403256:	68 91 00 00 00       	pushq  $0x91
  40325b:	e9 d0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403260 <exit@plt>:
  403260:	ff 25 42 c2 21 00    	jmpq   *0x21c242(%rip)        # 61f4a8 <exit@GLIBC_2.2.5>
  403266:	68 92 00 00 00       	pushq  $0x92
  40326b:	e9 c0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403270 <fwrite@plt>:
  403270:	ff 25 3a c2 21 00    	jmpq   *0x21c23a(%rip)        # 61f4b0 <fwrite@GLIBC_2.2.5>
  403276:	68 93 00 00 00       	pushq  $0x93
  40327b:	e9 b0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403280 <setuid@plt>:
  403280:	ff 25 32 c2 21 00    	jmpq   *0x21c232(%rip)        # 61f4b8 <setuid@GLIBC_2.2.5>
  403286:	68 94 00 00 00       	pushq  $0x94
  40328b:	e9 a0 f6 ff ff       	jmpq   402930 <.plt>

0000000000403290 <strdup@plt>:
  403290:	ff 25 2a c2 21 00    	jmpq   *0x21c22a(%rip)        # 61f4c0 <strdup@GLIBC_2.2.5>
  403296:	68 95 00 00 00       	pushq  $0x95
  40329b:	e9 90 f6 ff ff       	jmpq   402930 <.plt>

00000000004032a0 <strerror@plt>:
  4032a0:	ff 25 22 c2 21 00    	jmpq   *0x21c222(%rip)        # 61f4c8 <strerror@GLIBC_2.2.5>
  4032a6:	68 96 00 00 00       	pushq  $0x96
  4032ab:	e9 80 f6 ff ff       	jmpq   402930 <.plt>

00000000004032b0 <sleep@plt>:
  4032b0:	ff 25 1a c2 21 00    	jmpq   *0x21c21a(%rip)        # 61f4d0 <sleep@GLIBC_2.2.5>
  4032b6:	68 97 00 00 00       	pushq  $0x97
  4032bb:	e9 70 f6 ff ff       	jmpq   402930 <.plt>

00000000004032c0 <strptime@plt>:
  4032c0:	ff 25 12 c2 21 00    	jmpq   *0x21c212(%rip)        # 61f4d8 <strptime@GLIBC_2.2.5>
  4032c6:	68 98 00 00 00       	pushq  $0x98
  4032cb:	e9 60 f6 ff ff       	jmpq   402930 <.plt>

00000000004032d0 <setpgrp@plt>:
  4032d0:	ff 25 0a c2 21 00    	jmpq   *0x21c20a(%rip)        # 61f4e0 <setpgrp@GLIBC_2.2.5>
  4032d6:	68 99 00 00 00       	pushq  $0x99
  4032db:	e9 50 f6 ff ff       	jmpq   402930 <.plt>

00000000004032e0 <fork@plt>:
  4032e0:	ff 25 02 c2 21 00    	jmpq   *0x21c202(%rip)        # 61f4e8 <fork@GLIBC_2.2.5>
  4032e6:	68 9a 00 00 00       	pushq  $0x9a
  4032eb:	e9 40 f6 ff ff       	jmpq   402930 <.plt>

00000000004032f0 <strstr@plt>:
  4032f0:	ff 25 fa c1 21 00    	jmpq   *0x21c1fa(%rip)        # 61f4f0 <strstr@GLIBC_2.2.5>
  4032f6:	68 9b 00 00 00       	pushq  $0x9b
  4032fb:	e9 30 f6 ff ff       	jmpq   402930 <.plt>

0000000000403300 <getdtablesize@plt>:
  403300:	ff 25 f2 c1 21 00    	jmpq   *0x21c1f2(%rip)        # 61f4f8 <getdtablesize@GLIBC_2.2.5>
  403306:	68 9c 00 00 00       	pushq  $0x9c
  40330b:	e9 20 f6 ff ff       	jmpq   402930 <.plt>

0000000000403310 <rand@plt>:
  403310:	ff 25 ea c1 21 00    	jmpq   *0x21c1ea(%rip)        # 61f500 <rand@GLIBC_2.2.5>
  403316:	68 9d 00 00 00       	pushq  $0x9d
  40331b:	e9 10 f6 ff ff       	jmpq   402930 <.plt>

0000000000403320 <__ctype_b_loc@plt>:
  403320:	ff 25 e2 c1 21 00    	jmpq   *0x21c1e2(%rip)        # 61f508 <__ctype_b_loc@GLIBC_2.3>
  403326:	68 9e 00 00 00       	pushq  $0x9e
  40332b:	e9 00 f6 ff ff       	jmpq   402930 <.plt>

0000000000403330 <usleep@plt>:
  403330:	ff 25 da c1 21 00    	jmpq   *0x21c1da(%rip)        # 61f510 <usleep@GLIBC_2.2.5>
  403336:	68 9f 00 00 00       	pushq  $0x9f
  40333b:	e9 f0 f5 ff ff       	jmpq   402930 <.plt>

Disassembly of section .text:

0000000000403340 <_start>:
  403340:	31 ed                	xor    %ebp,%ebp
  403342:	49 89 d1             	mov    %rdx,%r9
  403345:	5e                   	pop    %rsi
  403346:	48 89 e2             	mov    %rsp,%rdx
  403349:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40334d:	50                   	push   %rax
  40334e:	54                   	push   %rsp
  40334f:	49 c7 c0 20 74 41 00 	mov    $0x417420,%r8
  403356:	48 c7 c1 b0 73 41 00 	mov    $0x4173b0,%rcx
  40335d:	48 c7 c7 17 34 40 00 	mov    $0x403417,%rdi
  403364:	ff 15 86 bc 21 00    	callq  *0x21bc86(%rip)        # 61eff0 <__libc_start_main@GLIBC_2.2.5>
  40336a:	f4                   	hlt    
  40336b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000403370 <deregister_tm_clones>:
  403370:	55                   	push   %rbp
  403371:	b8 50 08 62 00       	mov    $0x620850,%eax
  403376:	48 3d 50 08 62 00    	cmp    $0x620850,%rax
  40337c:	48 89 e5             	mov    %rsp,%rbp
  40337f:	74 17                	je     403398 <deregister_tm_clones+0x28>
  403381:	b8 00 00 00 00       	mov    $0x0,%eax
  403386:	48 85 c0             	test   %rax,%rax
  403389:	74 0d                	je     403398 <deregister_tm_clones+0x28>
  40338b:	5d                   	pop    %rbp
  40338c:	bf 50 08 62 00       	mov    $0x620850,%edi
  403391:	ff e0                	jmpq   *%rax
  403393:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403398:	5d                   	pop    %rbp
  403399:	c3                   	retq   
  40339a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004033a0 <register_tm_clones>:
  4033a0:	be 50 08 62 00       	mov    $0x620850,%esi
  4033a5:	55                   	push   %rbp
  4033a6:	48 81 ee 50 08 62 00 	sub    $0x620850,%rsi
  4033ad:	48 89 e5             	mov    %rsp,%rbp
  4033b0:	48 c1 fe 03          	sar    $0x3,%rsi
  4033b4:	48 89 f0             	mov    %rsi,%rax
  4033b7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4033bb:	48 01 c6             	add    %rax,%rsi
  4033be:	48 d1 fe             	sar    %rsi
  4033c1:	74 15                	je     4033d8 <register_tm_clones+0x38>
  4033c3:	b8 00 00 00 00       	mov    $0x0,%eax
  4033c8:	48 85 c0             	test   %rax,%rax
  4033cb:	74 0b                	je     4033d8 <register_tm_clones+0x38>
  4033cd:	5d                   	pop    %rbp
  4033ce:	bf 50 08 62 00       	mov    $0x620850,%edi
  4033d3:	ff e0                	jmpq   *%rax
  4033d5:	0f 1f 00             	nopl   (%rax)
  4033d8:	5d                   	pop    %rbp
  4033d9:	c3                   	retq   
  4033da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004033e0 <__do_global_dtors_aux>:
  4033e0:	80 3d e1 d4 21 00 00 	cmpb   $0x0,0x21d4e1(%rip)        # 6208c8 <completed.6991>
  4033e7:	75 17                	jne    403400 <__do_global_dtors_aux+0x20>
  4033e9:	55                   	push   %rbp
  4033ea:	48 89 e5             	mov    %rsp,%rbp
  4033ed:	e8 7e ff ff ff       	callq  403370 <deregister_tm_clones>
  4033f2:	c6 05 cf d4 21 00 01 	movb   $0x1,0x21d4cf(%rip)        # 6208c8 <completed.6991>
  4033f9:	5d                   	pop    %rbp
  4033fa:	c3                   	retq   
  4033fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403400:	f3 c3                	repz retq 
  403402:	0f 1f 40 00          	nopl   0x0(%rax)
  403406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40340d:	00 00 00 

0000000000403410 <frame_dummy>:
  403410:	55                   	push   %rbp
  403411:	48 89 e5             	mov    %rsp,%rbp
  403414:	5d                   	pop    %rbp
  403415:	eb 89                	jmp    4033a0 <register_tm_clones>

0000000000403417 <main>:
  403417:	55                   	push   %rbp
  403418:	48 89 e5             	mov    %rsp,%rbp
  40341b:	48 81 ec 20 14 00 00 	sub    $0x1420,%rsp
  403422:	89 bd ec eb ff ff    	mov    %edi,-0x1414(%rbp)
  403428:	48 89 b5 e0 eb ff ff 	mov    %rsi,-0x1420(%rbp)
  40342f:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  403436:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40343d:	bf 70 74 41 00       	mov    $0x417470,%edi
  403442:	e8 f9 f4 ff ff       	callq  402940 <getenv@plt>
  403447:	48 85 c0             	test   %rax,%rax
  40344a:	74 14                	je     403460 <main+0x49>
  40344c:	bf 70 74 41 00       	mov    $0x417470,%edi
  403451:	e8 ea f4 ff ff       	callq  402940 <getenv@plt>
  403456:	48 89 c7             	mov    %rax,%rdi
  403459:	e8 92 fd ff ff       	callq  4031f0 <atoi@plt>
  40345e:	eb 05                	jmp    403465 <main+0x4e>
  403460:	b8 00 00 02 00       	mov    $0x20000,%eax
  403465:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403468:	83 bd ec eb ff ff 01 	cmpl   $0x1,-0x1414(%rbp)
  40346f:	7f 14                	jg     403485 <main+0x6e>
  403471:	bf 80 74 41 00       	mov    $0x417480,%edi
  403476:	e8 c5 f5 ff ff       	callq  402a40 <puts@plt>
  40347b:	bf 01 00 00 00       	mov    $0x1,%edi
  403480:	e8 db fd ff ff       	callq  403260 <exit@plt>
  403485:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403488:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  40348f:	89 d6                	mov    %edx,%esi
  403491:	48 89 c7             	mov    %rax,%rdi
  403494:	e8 48 cd 00 00       	callq  4101e1 <PicocInitialise>
  403499:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40349c:	48 98                	cltq   
  40349e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4034a5:	00 
  4034a6:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  4034ad:	48 01 d0             	add    %rdx,%rax
  4034b0:	48 8b 00             	mov    (%rax),%rax
  4034b3:	be 83 75 41 00       	mov    $0x417583,%esi
  4034b8:	48 89 c7             	mov    %rax,%rdi
  4034bb:	e8 30 f9 ff ff       	callq  402df0 <strcmp@plt>
  4034c0:	85 c0                	test   %eax,%eax
  4034c2:	74 2b                	je     4034ef <main+0xd8>
  4034c4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4034c7:	48 98                	cltq   
  4034c9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4034d0:	00 
  4034d1:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  4034d8:	48 01 d0             	add    %rdx,%rax
  4034db:	48 8b 00             	mov    (%rax),%rax
  4034de:	be 86 75 41 00       	mov    $0x417586,%esi
  4034e3:	48 89 c7             	mov    %rax,%rdi
  4034e6:	e8 05 f9 ff ff       	callq  402df0 <strcmp@plt>
  4034eb:	85 c0                	test   %eax,%eax
  4034ed:	75 1a                	jne    403509 <main+0xf2>
  4034ef:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  4034f6:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  4034fd:	48 89 c7             	mov    %rax,%rdi
  403500:	e8 b1 db 00 00       	callq  4110b6 <PicocIncludeAllSystemHeaders>
  403505:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  403509:	8b 85 ec eb ff ff    	mov    -0x1414(%rbp),%eax
  40350f:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  403512:	7e 4e                	jle    403562 <main+0x14b>
  403514:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403517:	48 98                	cltq   
  403519:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  403520:	00 
  403521:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  403528:	48 01 d0             	add    %rdx,%rax
  40352b:	48 8b 00             	mov    (%rax),%rax
  40352e:	be 89 75 41 00       	mov    $0x417589,%esi
  403533:	48 89 c7             	mov    %rax,%rdi
  403536:	e8 b5 f8 ff ff       	callq  402df0 <strcmp@plt>
  40353b:	85 c0                	test   %eax,%eax
  40353d:	75 23                	jne    403562 <main+0x14b>
  40353f:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  403546:	48 89 c7             	mov    %rax,%rdi
  403549:	e8 68 db 00 00       	callq  4110b6 <PicocIncludeAllSystemHeaders>
  40354e:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  403555:	48 89 c7             	mov    %rax,%rdi
  403558:	e8 79 5b 00 00       	callq  4090d6 <PicocParseInteractive>
  40355d:	e9 d2 00 00 00       	jmpq   403634 <main+0x21d>
  403562:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  403569:	48 05 18 10 00 00    	add    $0x1018,%rax
  40356f:	48 89 c7             	mov    %rax,%rdi
  403572:	e8 39 f8 ff ff       	callq  402db0 <_setjmp@plt>
  403577:	85 c0                	test   %eax,%eax
  403579:	74 4a                	je     4035c5 <main+0x1ae>
  40357b:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  403582:	48 89 c7             	mov    %rax,%rdi
  403585:	e8 0d cd 00 00       	callq  410297 <PicocCleanup>
  40358a:	8b 85 00 f6 ff ff    	mov    -0xa00(%rbp),%eax
  403590:	e9 b4 00 00 00       	jmpq   403649 <main+0x232>
  403595:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403598:	48 98                	cltq   
  40359a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4035a1:	00 
  4035a2:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  4035a9:	48 01 d0             	add    %rdx,%rax
  4035ac:	48 8b 10             	mov    (%rax),%rdx
  4035af:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  4035b6:	48 89 d6             	mov    %rdx,%rsi
  4035b9:	48 89 c7             	mov    %rax,%rdi
  4035bc:	e8 7c e3 00 00       	callq  41193d <PicocPlatformScanFile>
  4035c1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4035c5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4035c8:	3b 85 ec eb ff ff    	cmp    -0x1414(%rbp),%eax
  4035ce:	7d 2b                	jge    4035fb <main+0x1e4>
  4035d0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4035d3:	48 98                	cltq   
  4035d5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  4035dc:	00 
  4035dd:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  4035e4:	48 01 d0             	add    %rdx,%rax
  4035e7:	48 8b 00             	mov    (%rax),%rax
  4035ea:	be 8c 75 41 00       	mov    $0x41758c,%esi
  4035ef:	48 89 c7             	mov    %rax,%rdi
  4035f2:	e8 f9 f7 ff ff       	callq  402df0 <strcmp@plt>
  4035f7:	85 c0                	test   %eax,%eax
  4035f9:	75 9a                	jne    403595 <main+0x17e>
  4035fb:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  4035ff:	75 33                	jne    403634 <main+0x21d>
  403601:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403604:	48 98                	cltq   
  403606:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40360d:	00 
  40360e:	48 8b 85 e0 eb ff ff 	mov    -0x1420(%rbp),%rax
  403615:	48 01 c2             	add    %rax,%rdx
  403618:	8b 85 ec eb ff ff    	mov    -0x1414(%rbp),%eax
  40361e:	2b 45 fc             	sub    -0x4(%rbp),%eax
  403621:	89 c1                	mov    %eax,%ecx
  403623:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  40362a:	89 ce                	mov    %ecx,%esi
  40362c:	48 89 c7             	mov    %rax,%rdi
  40362f:	e8 e3 cc 00 00       	callq  410317 <PicocCallMain>
  403634:	48 8d 85 f0 eb ff ff 	lea    -0x1410(%rbp),%rax
  40363b:	48 89 c7             	mov    %rax,%rdi
  40363e:	e8 54 cc 00 00       	callq  410297 <PicocCleanup>
  403643:	8b 85 00 f6 ff ff    	mov    -0xa00(%rbp),%eax
  403649:	c9                   	leaveq 
  40364a:	c3                   	retq   

000000000040364b <TableInit>:
  40364b:	55                   	push   %rbp
  40364c:	48 89 e5             	mov    %rsp,%rbp
  40364f:	48 83 ec 10          	sub    $0x10,%rsp
  403653:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40365b:	48 8d b0 f0 10 00 00 	lea    0x10f0(%rax),%rsi
  403662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403666:	48 05 e0 10 00 00    	add    $0x10e0,%rax
  40366c:	b9 01 00 00 00       	mov    $0x1,%ecx
  403671:	ba 61 00 00 00       	mov    $0x61,%edx
  403676:	48 89 c7             	mov    %rax,%rdi
  403679:	e8 87 00 00 00       	callq  403705 <TableInitTable>
  40367e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403682:	be 8e 75 41 00       	mov    $0x41758e,%esi
  403687:	48 89 c7             	mov    %rax,%rdi
  40368a:	e8 72 05 00 00       	callq  403c01 <TableStrRegister>
  40368f:	48 89 c2             	mov    %rax,%rdx
  403692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403696:	48 89 90 f8 13 00 00 	mov    %rdx,0x13f8(%rax)
  40369d:	90                   	nop
  40369e:	c9                   	leaveq 
  40369f:	c3                   	retq   

00000000004036a0 <TableHash>:
  4036a0:	55                   	push   %rbp
  4036a1:	48 89 e5             	mov    %rsp,%rbp
  4036a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4036a8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4036ab:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4036ae:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4036b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4036b8:	c7 45 f8 08 00 00 00 	movl   $0x8,-0x8(%rbp)
  4036bf:	eb 37                	jmp    4036f8 <TableHash+0x58>
  4036c1:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4036c4:	83 f8 19             	cmp    $0x19,%eax
  4036c7:	76 09                	jbe    4036d2 <TableHash+0x32>
  4036c9:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4036cc:	83 e8 1a             	sub    $0x1a,%eax
  4036cf:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4036d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4036d6:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4036da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4036de:	0f b6 00             	movzbl (%rax),%eax
  4036e1:	0f be d0             	movsbl %al,%edx
  4036e4:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4036e7:	89 c1                	mov    %eax,%ecx
  4036e9:	d3 e2                	shl    %cl,%edx
  4036eb:	89 d0                	mov    %edx,%eax
  4036ed:	31 45 fc             	xor    %eax,-0x4(%rbp)
  4036f0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4036f4:	83 45 f8 07          	addl   $0x7,-0x8(%rbp)
  4036f8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4036fb:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4036fe:	7c c1                	jl     4036c1 <TableHash+0x21>
  403700:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403703:	5d                   	pop    %rbp
  403704:	c3                   	retq   

0000000000403705 <TableInitTable>:
  403705:	55                   	push   %rbp
  403706:	48 89 e5             	mov    %rsp,%rbp
  403709:	48 83 ec 20          	sub    $0x20,%rsp
  40370d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403711:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  403715:	89 55 ec             	mov    %edx,-0x14(%rbp)
  403718:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  40371b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40371e:	89 c2                	mov    %eax,%edx
  403720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403724:	66 89 10             	mov    %dx,(%rax)
  403727:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40372a:	89 c2                	mov    %eax,%edx
  40372c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403730:	66 89 50 02          	mov    %dx,0x2(%rax)
  403734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403738:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40373c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  403740:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403743:	48 98                	cltq   
  403745:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40374c:	00 
  40374d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403751:	be 00 00 00 00       	mov    $0x0,%esi
  403756:	48 89 c7             	mov    %rax,%rdi
  403759:	e8 02 f5 ff ff       	callq  402c60 <memset@plt>
  40375e:	90                   	nop
  40375f:	c9                   	leaveq 
  403760:	c3                   	retq   

0000000000403761 <TableSearch>:
  403761:	55                   	push   %rbp
  403762:	48 89 e5             	mov    %rsp,%rbp
  403765:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403769:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40376d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  403771:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403775:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  403779:	0f b7 12             	movzwl (%rdx),%edx
  40377c:	48 0f bf ca          	movswq %dx,%rcx
  403780:	ba 00 00 00 00       	mov    $0x0,%edx
  403785:	48 f7 f1             	div    %rcx
  403788:	48 89 d0             	mov    %rdx,%rax
  40378b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40378e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403792:	48 8b 40 08          	mov    0x8(%rax),%rax
  403796:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403799:	48 63 d2             	movslq %edx,%rdx
  40379c:	48 c1 e2 03          	shl    $0x3,%rdx
  4037a0:	48 01 d0             	add    %rdx,%rax
  4037a3:	48 8b 00             	mov    (%rax),%rax
  4037a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4037aa:	eb 1f                	jmp    4037cb <TableSearch+0x6a>
  4037ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4037b0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4037b4:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4037b8:	75 06                	jne    4037c0 <TableSearch+0x5f>
  4037ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4037be:	eb 20                	jmp    4037e0 <TableSearch+0x7f>
  4037c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4037c4:	48 8b 00             	mov    (%rax),%rax
  4037c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4037cb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4037d0:	75 da                	jne    4037ac <TableSearch+0x4b>
  4037d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4037d6:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4037d9:	89 10                	mov    %edx,(%rax)
  4037db:	b8 00 00 00 00       	mov    $0x0,%eax
  4037e0:	5d                   	pop    %rbp
  4037e1:	c3                   	retq   

00000000004037e2 <TableSet>:
  4037e2:	55                   	push   %rbp
  4037e3:	48 89 e5             	mov    %rsp,%rbp
  4037e6:	48 83 ec 50          	sub    $0x50,%rsp
  4037ea:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4037ee:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4037f2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4037f6:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4037fa:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  4037fe:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  403802:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  403806:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40380a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40380e:	48 89 ce             	mov    %rcx,%rsi
  403811:	48 89 c7             	mov    %rax,%rdi
  403814:	e8 48 ff ff ff       	callq  403761 <TableSearch>
  403819:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40381d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403822:	0f 85 a7 00 00 00    	jne    4038cf <TableSet+0xed>
  403828:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40382c:	0f b7 40 02          	movzwl 0x2(%rax),%eax
  403830:	0f bf d0             	movswl %ax,%edx
  403833:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403837:	89 d1                	mov    %edx,%ecx
  403839:	ba 28 00 00 00       	mov    $0x28,%edx
  40383e:	be 00 00 00 00       	mov    $0x0,%esi
  403843:	48 89 c7             	mov    %rax,%rdi
  403846:	e8 af b2 00 00       	callq  40eafa <VariableAlloc>
  40384b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40384f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403853:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  403857:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40385b:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40385e:	89 c2                	mov    %eax,%edx
  403860:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403864:	66 89 50 10          	mov    %dx,0x10(%rax)
  403868:	8b 45 10             	mov    0x10(%rbp),%eax
  40386b:	89 c2                	mov    %eax,%edx
  40386d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403871:	66 89 50 12          	mov    %dx,0x12(%rax)
  403875:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403879:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40387d:	48 89 50 18          	mov    %rdx,0x18(%rax)
  403881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403885:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  403889:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40388d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403891:	48 8b 40 08          	mov    0x8(%rax),%rax
  403895:	8b 55 ec             	mov    -0x14(%rbp),%edx
  403898:	48 63 d2             	movslq %edx,%rdx
  40389b:	48 c1 e2 03          	shl    $0x3,%rdx
  40389f:	48 01 d0             	add    %rdx,%rax
  4038a2:	48 8b 10             	mov    (%rax),%rdx
  4038a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038a9:	48 89 10             	mov    %rdx,(%rax)
  4038ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4038b0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4038b4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4038b7:	48 63 d2             	movslq %edx,%rdx
  4038ba:	48 c1 e2 03          	shl    $0x3,%rdx
  4038be:	48 01 c2             	add    %rax,%rdx
  4038c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4038c5:	48 89 02             	mov    %rax,(%rdx)
  4038c8:	b8 01 00 00 00       	mov    $0x1,%eax
  4038cd:	eb 05                	jmp    4038d4 <TableSet+0xf2>
  4038cf:	b8 00 00 00 00       	mov    $0x0,%eax
  4038d4:	c9                   	leaveq 
  4038d5:	c3                   	retq   

00000000004038d6 <TableGet>:
  4038d6:	55                   	push   %rbp
  4038d7:	48 89 e5             	mov    %rsp,%rbp
  4038da:	48 83 ec 40          	sub    $0x40,%rsp
  4038de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4038e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4038e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4038ea:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4038ee:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  4038f2:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
  4038f6:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  4038fa:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4038fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403902:	48 89 ce             	mov    %rcx,%rsi
  403905:	48 89 c7             	mov    %rax,%rdi
  403908:	e8 54 fe ff ff       	callq  403761 <TableSearch>
  40390d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403911:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403916:	75 07                	jne    40391f <TableGet+0x49>
  403918:	b8 00 00 00 00       	mov    $0x0,%eax
  40391d:	eb 4c                	jmp    40396b <TableGet+0x95>
  40391f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403923:	48 8b 50 20          	mov    0x20(%rax),%rdx
  403927:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40392b:	48 89 10             	mov    %rdx,(%rax)
  40392e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  403933:	74 31                	je     403966 <TableGet+0x90>
  403935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403939:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40393d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403941:	48 89 10             	mov    %rdx,(%rax)
  403944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403948:	0f b7 40 10          	movzwl 0x10(%rax),%eax
  40394c:	0f b7 d0             	movzwl %ax,%edx
  40394f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403953:	89 10                	mov    %edx,(%rax)
  403955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403959:	0f b7 40 12          	movzwl 0x12(%rax),%eax
  40395d:	0f b7 d0             	movzwl %ax,%edx
  403960:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  403964:	89 10                	mov    %edx,(%rax)
  403966:	b8 01 00 00 00       	mov    $0x1,%eax
  40396b:	c9                   	leaveq 
  40396c:	c3                   	retq   

000000000040396d <TableDelete>:
  40396d:	55                   	push   %rbp
  40396e:	48 89 e5             	mov    %rsp,%rbp
  403971:	48 83 ec 40          	sub    $0x40,%rsp
  403975:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403979:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40397d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403981:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403985:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  403989:	0f b7 12             	movzwl (%rdx),%edx
  40398c:	48 0f bf ca          	movswq %dx,%rcx
  403990:	ba 00 00 00 00       	mov    $0x0,%edx
  403995:	48 f7 f1             	div    %rcx
  403998:	48 89 d0             	mov    %rdx,%rax
  40399b:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40399e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4039a2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4039a6:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4039a9:	48 63 d2             	movslq %edx,%rdx
  4039ac:	48 c1 e2 03          	shl    $0x3,%rdx
  4039b0:	48 01 d0             	add    %rdx,%rax
  4039b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4039b7:	eb 5a                	jmp    403a13 <TableDelete+0xa6>
  4039b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4039bd:	48 8b 00             	mov    (%rax),%rax
  4039c0:	48 8b 40 18          	mov    0x18(%rax),%rax
  4039c4:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
  4039c8:	75 3e                	jne    403a08 <TableDelete+0x9b>
  4039ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4039ce:	48 8b 00             	mov    (%rax),%rax
  4039d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4039d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4039d9:	48 8b 40 20          	mov    0x20(%rax),%rax
  4039dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4039e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4039e5:	48 8b 10             	mov    (%rax),%rdx
  4039e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4039ec:	48 89 10             	mov    %rdx,(%rax)
  4039ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4039f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4039f7:	48 89 d6             	mov    %rdx,%rsi
  4039fa:	48 89 c7             	mov    %rax,%rdi
  4039fd:	e8 05 97 00 00       	callq  40d107 <HeapFreeMem>
  403a02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a06:	eb 1c                	jmp    403a24 <TableDelete+0xb7>
  403a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403a0c:	48 8b 00             	mov    (%rax),%rax
  403a0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403a13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403a17:	48 8b 00             	mov    (%rax),%rax
  403a1a:	48 85 c0             	test   %rax,%rax
  403a1d:	75 9a                	jne    4039b9 <TableDelete+0x4c>
  403a1f:	b8 00 00 00 00       	mov    $0x0,%eax
  403a24:	c9                   	leaveq 
  403a25:	c3                   	retq   

0000000000403a26 <TableSearchIdentifier>:
  403a26:	55                   	push   %rbp
  403a27:	48 89 e5             	mov    %rsp,%rbp
  403a2a:	48 83 ec 30          	sub    $0x30,%rsp
  403a2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403a32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403a36:	89 55 dc             	mov    %edx,-0x24(%rbp)
  403a39:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  403a3d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  403a40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a44:	89 d6                	mov    %edx,%esi
  403a46:	48 89 c7             	mov    %rax,%rdi
  403a49:	e8 52 fc ff ff       	callq  4036a0 <TableHash>
  403a4e:	89 c2                	mov    %eax,%edx
  403a50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403a54:	0f b7 00             	movzwl (%rax),%eax
  403a57:	0f bf c8             	movswl %ax,%ecx
  403a5a:	89 d0                	mov    %edx,%eax
  403a5c:	ba 00 00 00 00       	mov    $0x0,%edx
  403a61:	f7 f1                	div    %ecx
  403a63:	89 d0                	mov    %edx,%eax
  403a65:	89 45 f4             	mov    %eax,-0xc(%rbp)
  403a68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403a6c:	48 8b 40 08          	mov    0x8(%rax),%rax
  403a70:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403a73:	48 63 d2             	movslq %edx,%rdx
  403a76:	48 c1 e2 03          	shl    $0x3,%rdx
  403a7a:	48 01 d0             	add    %rdx,%rax
  403a7d:	48 8b 00             	mov    (%rax),%rax
  403a80:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403a84:	eb 44                	jmp    403aca <TableSearchIdentifier+0xa4>
  403a86:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403a89:	48 63 d0             	movslq %eax,%rdx
  403a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403a90:	48 8d 48 18          	lea    0x18(%rax),%rcx
  403a94:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403a98:	48 89 c6             	mov    %rax,%rsi
  403a9b:	48 89 cf             	mov    %rcx,%rdi
  403a9e:	e8 3d ef ff ff       	callq  4029e0 <strncmp@plt>
  403aa3:	85 c0                	test   %eax,%eax
  403aa5:	75 18                	jne    403abf <TableSearchIdentifier+0x99>
  403aa7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403aab:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403aae:	48 98                	cltq   
  403ab0:	0f b6 44 02 18       	movzbl 0x18(%rdx,%rax,1),%eax
  403ab5:	84 c0                	test   %al,%al
  403ab7:	75 06                	jne    403abf <TableSearchIdentifier+0x99>
  403ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403abd:	eb 20                	jmp    403adf <TableSearchIdentifier+0xb9>
  403abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403ac3:	48 8b 00             	mov    (%rax),%rax
  403ac6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403aca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403acf:	75 b5                	jne    403a86 <TableSearchIdentifier+0x60>
  403ad1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ad5:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403ad8:	89 10                	mov    %edx,(%rax)
  403ada:	b8 00 00 00 00       	mov    $0x0,%eax
  403adf:	c9                   	leaveq 
  403ae0:	c3                   	retq   

0000000000403ae1 <TableSetIdentifier>:
  403ae1:	55                   	push   %rbp
  403ae2:	48 89 e5             	mov    %rsp,%rbp
  403ae5:	48 83 ec 40          	sub    $0x40,%rsp
  403ae9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403aed:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403af1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403af5:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  403af8:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
  403afc:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  403aff:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  403b03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403b07:	48 89 c7             	mov    %rax,%rdi
  403b0a:	e8 17 ff ff ff       	callq  403a26 <TableSearchIdentifier>
  403b0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403b13:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403b18:	74 0d                	je     403b27 <TableSetIdentifier+0x46>
  403b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403b1e:	48 83 c0 18          	add    $0x18,%rax
  403b22:	e9 a5 00 00 00       	jmpq   403bcc <TableSetIdentifier+0xeb>
  403b27:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403b2a:	83 c0 19             	add    $0x19,%eax
  403b2d:	89 c2                	mov    %eax,%edx
  403b2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403b33:	89 d6                	mov    %edx,%esi
  403b35:	48 89 c7             	mov    %rax,%rdi
  403b38:	e8 a7 95 00 00       	callq  40d0e4 <HeapAllocMem>
  403b3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  403b41:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  403b46:	75 16                	jne    403b5e <TableSetIdentifier+0x7d>
  403b48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403b4c:	be 8f 75 41 00       	mov    $0x41758f,%esi
  403b51:	48 89 c7             	mov    %rax,%rdi
  403b54:	b8 00 00 00 00       	mov    $0x0,%eax
  403b59:	e8 bb cc 00 00       	callq  410819 <ProgramFailNoParser>
  403b5e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403b61:	48 63 d0             	movslq %eax,%rdx
  403b64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403b68:	48 8d 48 18          	lea    0x18(%rax),%rcx
  403b6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  403b70:	48 89 c6             	mov    %rax,%rsi
  403b73:	48 89 cf             	mov    %rcx,%rdi
  403b76:	e8 35 ee ff ff       	callq  4029b0 <strncpy@plt>
  403b7b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  403b7f:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  403b82:	48 98                	cltq   
  403b84:	c6 44 02 18 00       	movb   $0x0,0x18(%rdx,%rax,1)
  403b89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403b8d:	48 8b 40 08          	mov    0x8(%rax),%rax
  403b91:	8b 55 ec             	mov    -0x14(%rbp),%edx
  403b94:	48 63 d2             	movslq %edx,%rdx
  403b97:	48 c1 e2 03          	shl    $0x3,%rdx
  403b9b:	48 01 d0             	add    %rdx,%rax
  403b9e:	48 8b 10             	mov    (%rax),%rdx
  403ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403ba5:	48 89 10             	mov    %rdx,(%rax)
  403ba8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403bac:	48 8b 40 08          	mov    0x8(%rax),%rax
  403bb0:	8b 55 ec             	mov    -0x14(%rbp),%edx
  403bb3:	48 63 d2             	movslq %edx,%rdx
  403bb6:	48 c1 e2 03          	shl    $0x3,%rdx
  403bba:	48 01 c2             	add    %rax,%rdx
  403bbd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403bc1:	48 89 02             	mov    %rax,(%rdx)
  403bc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403bc8:	48 83 c0 18          	add    $0x18,%rax
  403bcc:	c9                   	leaveq 
  403bcd:	c3                   	retq   

0000000000403bce <TableStrRegister2>:
  403bce:	55                   	push   %rbp
  403bcf:	48 89 e5             	mov    %rsp,%rbp
  403bd2:	48 83 ec 20          	sub    $0x20,%rsp
  403bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  403bde:	89 55 ec             	mov    %edx,-0x14(%rbp)
  403be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403be5:	48 8d b0 e0 10 00 00 	lea    0x10e0(%rax),%rsi
  403bec:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403bef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  403bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403bf7:	48 89 c7             	mov    %rax,%rdi
  403bfa:	e8 e2 fe ff ff       	callq  403ae1 <TableSetIdentifier>
  403bff:	c9                   	leaveq 
  403c00:	c3                   	retq   

0000000000403c01 <TableStrRegister>:
  403c01:	55                   	push   %rbp
  403c02:	48 89 e5             	mov    %rsp,%rbp
  403c05:	48 83 ec 10          	sub    $0x10,%rsp
  403c09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  403c0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  403c11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  403c15:	48 89 c7             	mov    %rax,%rdi
  403c18:	e8 e3 ee ff ff       	callq  402b00 <strlen@plt>
  403c1d:	89 c2                	mov    %eax,%edx
  403c1f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  403c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403c27:	48 89 ce             	mov    %rcx,%rsi
  403c2a:	48 89 c7             	mov    %rax,%rdi
  403c2d:	e8 9c ff ff ff       	callq  403bce <TableStrRegister2>
  403c32:	c9                   	leaveq 
  403c33:	c3                   	retq   

0000000000403c34 <TableStrFree>:
  403c34:	55                   	push   %rbp
  403c35:	48 89 e5             	mov    %rsp,%rbp
  403c38:	48 83 ec 30          	sub    $0x30,%rsp
  403c3c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403c40:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  403c47:	eb 52                	jmp    403c9b <TableStrFree+0x67>
  403c49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403c4d:	48 8b 80 e8 10 00 00 	mov    0x10e8(%rax),%rax
  403c54:	8b 55 f4             	mov    -0xc(%rbp),%edx
  403c57:	48 63 d2             	movslq %edx,%rdx
  403c5a:	48 c1 e2 03          	shl    $0x3,%rdx
  403c5e:	48 01 d0             	add    %rdx,%rax
  403c61:	48 8b 00             	mov    (%rax),%rax
  403c64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403c68:	eb 26                	jmp    403c90 <TableStrFree+0x5c>
  403c6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403c6e:	48 8b 00             	mov    (%rax),%rax
  403c71:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403c75:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  403c79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403c7d:	48 89 d6             	mov    %rdx,%rsi
  403c80:	48 89 c7             	mov    %rax,%rdi
  403c83:	e8 7f 94 00 00       	callq  40d107 <HeapFreeMem>
  403c88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403c8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  403c90:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  403c95:	75 d3                	jne    403c6a <TableStrFree+0x36>
  403c97:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  403c9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403c9f:	0f b7 80 e0 10 00 00 	movzwl 0x10e0(%rax),%eax
  403ca6:	98                   	cwtl   
  403ca7:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  403caa:	7c 9d                	jl     403c49 <TableStrFree+0x15>
  403cac:	90                   	nop
  403cad:	c9                   	leaveq 
  403cae:	c3                   	retq   

0000000000403caf <LexInit>:
  403caf:	55                   	push   %rbp
  403cb0:	48 89 e5             	mov    %rsp,%rbp
  403cb3:	53                   	push   %rbx
  403cb4:	48 83 ec 28          	sub    $0x28,%rsp
  403cb8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403cbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403cc0:	48 8d b0 e8 03 00 00 	lea    0x3e8(%rax),%rsi
  403cc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403ccb:	48 05 d8 03 00 00    	add    $0x3d8,%rax
  403cd1:	b9 01 00 00 00       	mov    $0x1,%ecx
  403cd6:	ba 4a 00 00 00       	mov    $0x4a,%edx
  403cdb:	48 89 c7             	mov    %rax,%rdi
  403cde:	e8 22 fa ff ff       	callq  403705 <TableInitTable>
  403ce3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  403cea:	eb 68                	jmp    403d54 <LexInit+0xa5>
  403cec:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403cef:	48 98                	cltq   
  403cf1:	48 c1 e0 04          	shl    $0x4,%rax
  403cf5:	48 8d 98 40 f5 61 00 	lea    0x61f540(%rax),%rbx
  403cfc:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403cff:	48 98                	cltq   
  403d01:	48 c1 e0 04          	shl    $0x4,%rax
  403d05:	48 05 40 f5 61 00    	add    $0x61f540,%rax
  403d0b:	48 8b 10             	mov    (%rax),%rdx
  403d0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d12:	48 89 d6             	mov    %rdx,%rsi
  403d15:	48 89 c7             	mov    %rax,%rdi
  403d18:	e8 e4 fe ff ff       	callq  403c01 <TableStrRegister>
  403d1d:	48 89 c2             	mov    %rax,%rdx
  403d20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d24:	48 8d b0 d8 03 00 00 	lea    0x3d8(%rax),%rsi
  403d2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d2f:	48 83 ec 08          	sub    $0x8,%rsp
  403d33:	6a 00                	pushq  $0x0
  403d35:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  403d3b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  403d41:	48 89 d9             	mov    %rbx,%rcx
  403d44:	48 89 c7             	mov    %rax,%rdi
  403d47:	e8 96 fa ff ff       	callq  4037e2 <TableSet>
  403d4c:	48 83 c4 10          	add    $0x10,%rsp
  403d50:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  403d54:	8b 45 ec             	mov    -0x14(%rbp),%eax
  403d57:	83 f8 24             	cmp    $0x24,%eax
  403d5a:	76 90                	jbe    403cec <LexInit+0x3d>
  403d5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d60:	48 c7 80 b0 03 00 00 	movq   $0x0,0x3b0(%rax)
  403d67:	00 00 00 00 
  403d6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d6f:	48 8d 90 40 03 00 00 	lea    0x340(%rax),%rdx
  403d76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d7a:	48 89 90 b8 03 00 00 	mov    %rdx,0x3b8(%rax)
  403d81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d85:	48 c7 80 c0 03 00 00 	movq   $0x0,0x3c0(%rax)
  403d8c:	00 00 00 00 
  403d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d94:	c6 80 c8 03 00 00 00 	movb   $0x0,0x3c8(%rax)
  403d9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403d9f:	c6 80 c9 03 00 00 00 	movb   $0x0,0x3c9(%rax)
  403da6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403daa:	c6 80 ca 03 00 00 00 	movb   $0x0,0x3ca(%rax)
  403db1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  403db5:	c6 80 cb 03 00 00 00 	movb   $0x0,0x3cb(%rax)
  403dbc:	90                   	nop
  403dbd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  403dc1:	c9                   	leaveq 
  403dc2:	c3                   	retq   

0000000000403dc3 <LexCleanup>:
  403dc3:	55                   	push   %rbp
  403dc4:	48 89 e5             	mov    %rsp,%rbp
  403dc7:	48 83 ec 20          	sub    $0x20,%rsp
  403dcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403dcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403dd3:	be 00 00 00 00       	mov    $0x0,%esi
  403dd8:	48 89 c7             	mov    %rax,%rdi
  403ddb:	e8 7d 28 00 00       	callq  40665d <LexInteractiveClear>
  403de0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  403de7:	eb 42                	jmp    403e2b <LexCleanup+0x68>
  403de9:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403dec:	48 98                	cltq   
  403dee:	48 c1 e0 04          	shl    $0x4,%rax
  403df2:	48 05 40 f5 61 00    	add    $0x61f540,%rax
  403df8:	48 8b 10             	mov    (%rax),%rdx
  403dfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403dff:	48 89 d6             	mov    %rdx,%rsi
  403e02:	48 89 c7             	mov    %rax,%rdi
  403e05:	e8 f7 fd ff ff       	callq  403c01 <TableStrRegister>
  403e0a:	48 89 c2             	mov    %rax,%rdx
  403e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403e11:	48 8d 88 d8 03 00 00 	lea    0x3d8(%rax),%rcx
  403e18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403e1c:	48 89 ce             	mov    %rcx,%rsi
  403e1f:	48 89 c7             	mov    %rax,%rdi
  403e22:	e8 46 fb ff ff       	callq  40396d <TableDelete>
  403e27:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  403e2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  403e2e:	83 f8 24             	cmp    $0x24,%eax
  403e31:	76 b6                	jbe    403de9 <LexCleanup+0x26>
  403e33:	90                   	nop
  403e34:	c9                   	leaveq 
  403e35:	c3                   	retq   

0000000000403e36 <LexCheckReservedWord>:
  403e36:	55                   	push   %rbp
  403e37:	48 89 e5             	mov    %rsp,%rbp
  403e3a:	48 83 ec 20          	sub    $0x20,%rsp
  403e3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  403e42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  403e46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403e4a:	48 8d b8 d8 03 00 00 	lea    0x3d8(%rax),%rdi
  403e51:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  403e55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e59:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  403e5f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  403e65:	b9 00 00 00 00       	mov    $0x0,%ecx
  403e6a:	48 89 c6             	mov    %rax,%rsi
  403e6d:	e8 64 fa ff ff       	callq  4038d6 <TableGet>
  403e72:	85 c0                	test   %eax,%eax
  403e74:	74 09                	je     403e7f <LexCheckReservedWord+0x49>
  403e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403e7a:	8b 40 08             	mov    0x8(%rax),%eax
  403e7d:	eb 05                	jmp    403e84 <LexCheckReservedWord+0x4e>
  403e7f:	b8 00 00 00 00       	mov    $0x0,%eax
  403e84:	c9                   	leaveq 
  403e85:	c3                   	retq   

0000000000403e86 <LexGetNumber>:
  403e86:	55                   	push   %rbp
  403e87:	48 89 e5             	mov    %rsp,%rbp
  403e8a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  403e8e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403e92:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403e96:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  403e9d:	00 
  403e9e:	48 c7 45 f0 0a 00 00 	movq   $0xa,-0x10(%rbp)
  403ea5:	00 
  403ea6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403eaa:	48 8b 00             	mov    (%rax),%rax
  403ead:	0f b6 00             	movzbl (%rax),%eax
  403eb0:	3c 30                	cmp    $0x30,%al
  403eb2:	0f 85 78 01 00 00    	jne    404030 <LexGetNumber+0x1aa>
  403eb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ebc:	48 8b 00             	mov    (%rax),%rax
  403ebf:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403ec3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ec7:	48 89 10             	mov    %rdx,(%rax)
  403eca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ece:	8b 40 1c             	mov    0x1c(%rax),%eax
  403ed1:	8d 50 01             	lea    0x1(%rax),%edx
  403ed4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ed8:	89 50 1c             	mov    %edx,0x1c(%rax)
  403edb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403edf:	48 8b 10             	mov    (%rax),%rdx
  403ee2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ee6:	48 8b 40 08          	mov    0x8(%rax),%rax
  403eea:	48 39 c2             	cmp    %rax,%rdx
  403eed:	0f 84 3d 01 00 00    	je     404030 <LexGetNumber+0x1aa>
  403ef3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ef7:	48 8b 00             	mov    (%rax),%rax
  403efa:	0f b6 00             	movzbl (%rax),%eax
  403efd:	3c 78                	cmp    $0x78,%al
  403eff:	74 0e                	je     403f0f <LexGetNumber+0x89>
  403f01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f05:	48 8b 00             	mov    (%rax),%rax
  403f08:	0f b6 00             	movzbl (%rax),%eax
  403f0b:	3c 58                	cmp    $0x58,%al
  403f0d:	75 2d                	jne    403f3c <LexGetNumber+0xb6>
  403f0f:	48 c7 45 f0 10 00 00 	movq   $0x10,-0x10(%rbp)
  403f16:	00 
  403f17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f1b:	48 8b 00             	mov    (%rax),%rax
  403f1e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403f22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f26:	48 89 10             	mov    %rdx,(%rax)
  403f29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f2d:	8b 40 1c             	mov    0x1c(%rax),%eax
  403f30:	8d 50 01             	lea    0x1(%rax),%edx
  403f33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f37:	89 50 1c             	mov    %edx,0x1c(%rax)
  403f3a:	eb 63                	jmp    403f9f <LexGetNumber+0x119>
  403f3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f40:	48 8b 00             	mov    (%rax),%rax
  403f43:	0f b6 00             	movzbl (%rax),%eax
  403f46:	3c 62                	cmp    $0x62,%al
  403f48:	74 0e                	je     403f58 <LexGetNumber+0xd2>
  403f4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f4e:	48 8b 00             	mov    (%rax),%rax
  403f51:	0f b6 00             	movzbl (%rax),%eax
  403f54:	3c 42                	cmp    $0x42,%al
  403f56:	75 2d                	jne    403f85 <LexGetNumber+0xff>
  403f58:	48 c7 45 f0 02 00 00 	movq   $0x2,-0x10(%rbp)
  403f5f:	00 
  403f60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f64:	48 8b 00             	mov    (%rax),%rax
  403f67:	48 8d 50 01          	lea    0x1(%rax),%rdx
  403f6b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f6f:	48 89 10             	mov    %rdx,(%rax)
  403f72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f76:	8b 40 1c             	mov    0x1c(%rax),%eax
  403f79:	8d 50 01             	lea    0x1(%rax),%edx
  403f7c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f80:	89 50 1c             	mov    %edx,0x1c(%rax)
  403f83:	eb 1a                	jmp    403f9f <LexGetNumber+0x119>
  403f85:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403f89:	48 8b 00             	mov    (%rax),%rax
  403f8c:	0f b6 00             	movzbl (%rax),%eax
  403f8f:	3c 2e                	cmp    $0x2e,%al
  403f91:	0f 84 99 00 00 00    	je     404030 <LexGetNumber+0x1aa>
  403f97:	48 c7 45 f0 08 00 00 	movq   $0x8,-0x10(%rbp)
  403f9e:	00 
  403f9f:	e9 8c 00 00 00       	jmpq   404030 <LexGetNumber+0x1aa>
  403fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  403fa8:	48 0f af 45 f0       	imul   -0x10(%rbp),%rax
  403fad:	48 89 c2             	mov    %rax,%rdx
  403fb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403fb4:	48 8b 00             	mov    (%rax),%rax
  403fb7:	0f b6 00             	movzbl (%rax),%eax
  403fba:	3c 39                	cmp    $0x39,%al
  403fbc:	7f 14                	jg     403fd2 <LexGetNumber+0x14c>
  403fbe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403fc2:	48 8b 00             	mov    (%rax),%rax
  403fc5:	0f b6 00             	movzbl (%rax),%eax
  403fc8:	0f be c0             	movsbl %al,%eax
  403fcb:	83 e8 30             	sub    $0x30,%eax
  403fce:	48 98                	cltq   
  403fd0:	eb 34                	jmp    404006 <LexGetNumber+0x180>
  403fd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403fd6:	48 8b 00             	mov    (%rax),%rax
  403fd9:	0f b6 00             	movzbl (%rax),%eax
  403fdc:	3c 46                	cmp    $0x46,%al
  403fde:	7f 14                	jg     403ff4 <LexGetNumber+0x16e>
  403fe0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403fe4:	48 8b 00             	mov    (%rax),%rax
  403fe7:	0f b6 00             	movzbl (%rax),%eax
  403fea:	0f be c0             	movsbl %al,%eax
  403fed:	83 e8 37             	sub    $0x37,%eax
  403ff0:	48 98                	cltq   
  403ff2:	eb 12                	jmp    404006 <LexGetNumber+0x180>
  403ff4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403ff8:	48 8b 00             	mov    (%rax),%rax
  403ffb:	0f b6 00             	movzbl (%rax),%eax
  403ffe:	0f be c0             	movsbl %al,%eax
  404001:	83 e8 57             	sub    $0x57,%eax
  404004:	48 98                	cltq   
  404006:	48 01 d0             	add    %rdx,%rax
  404009:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40400d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404011:	48 8b 00             	mov    (%rax),%rax
  404014:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404018:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40401c:	48 89 10             	mov    %rdx,(%rax)
  40401f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404023:	8b 40 1c             	mov    0x1c(%rax),%eax
  404026:	8d 50 01             	lea    0x1(%rax),%edx
  404029:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40402d:	89 50 1c             	mov    %edx,0x1c(%rax)
  404030:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404034:	48 8b 10             	mov    (%rax),%rdx
  404037:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40403b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40403f:	48 39 c2             	cmp    %rax,%rdx
  404042:	74 7f                	je     4040c3 <LexGetNumber+0x23d>
  404044:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404048:	48 8b 00             	mov    (%rax),%rax
  40404b:	0f b6 00             	movzbl (%rax),%eax
  40404e:	3c 2f                	cmp    $0x2f,%al
  404050:	7e 2a                	jle    40407c <LexGetNumber+0x1f6>
  404052:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404056:	48 8b 00             	mov    (%rax),%rax
  404059:	0f b6 00             	movzbl (%rax),%eax
  40405c:	48 0f be c0          	movsbq %al,%rax
  404060:	ba 0a 00 00 00       	mov    $0xa,%edx
  404065:	48 83 7d f0 0a       	cmpq   $0xa,-0x10(%rbp)
  40406a:	48 0f 4e 55 f0       	cmovle -0x10(%rbp),%rdx
  40406f:	48 83 c2 30          	add    $0x30,%rdx
  404073:	48 39 d0             	cmp    %rdx,%rax
  404076:	0f 8c 28 ff ff ff    	jl     403fa4 <LexGetNumber+0x11e>
  40407c:	48 83 7d f0 0a       	cmpq   $0xa,-0x10(%rbp)
  404081:	7e 40                	jle    4040c3 <LexGetNumber+0x23d>
  404083:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404087:	48 8b 00             	mov    (%rax),%rax
  40408a:	0f b6 00             	movzbl (%rax),%eax
  40408d:	3c 60                	cmp    $0x60,%al
  40408f:	7e 12                	jle    4040a3 <LexGetNumber+0x21d>
  404091:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404095:	48 8b 00             	mov    (%rax),%rax
  404098:	0f b6 00             	movzbl (%rax),%eax
  40409b:	3c 66                	cmp    $0x66,%al
  40409d:	0f 8e 01 ff ff ff    	jle    403fa4 <LexGetNumber+0x11e>
  4040a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040a7:	48 8b 00             	mov    (%rax),%rax
  4040aa:	0f b6 00             	movzbl (%rax),%eax
  4040ad:	3c 40                	cmp    $0x40,%al
  4040af:	7e 12                	jle    4040c3 <LexGetNumber+0x23d>
  4040b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040b5:	48 8b 00             	mov    (%rax),%rax
  4040b8:	0f b6 00             	movzbl (%rax),%eax
  4040bb:	3c 46                	cmp    $0x46,%al
  4040bd:	0f 8e e1 fe ff ff    	jle    403fa4 <LexGetNumber+0x11e>
  4040c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040c7:	48 8b 00             	mov    (%rax),%rax
  4040ca:	0f b6 00             	movzbl (%rax),%eax
  4040cd:	3c 75                	cmp    $0x75,%al
  4040cf:	74 0e                	je     4040df <LexGetNumber+0x259>
  4040d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040d5:	48 8b 00             	mov    (%rax),%rax
  4040d8:	0f b6 00             	movzbl (%rax),%eax
  4040db:	3c 55                	cmp    $0x55,%al
  4040dd:	75 23                	jne    404102 <LexGetNumber+0x27c>
  4040df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040e3:	48 8b 00             	mov    (%rax),%rax
  4040e6:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4040ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040ee:	48 89 10             	mov    %rdx,(%rax)
  4040f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040f5:	8b 40 1c             	mov    0x1c(%rax),%eax
  4040f8:	8d 50 01             	lea    0x1(%rax),%edx
  4040fb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4040ff:	89 50 1c             	mov    %edx,0x1c(%rax)
  404102:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404106:	48 8b 00             	mov    (%rax),%rax
  404109:	0f b6 00             	movzbl (%rax),%eax
  40410c:	3c 6c                	cmp    $0x6c,%al
  40410e:	74 0e                	je     40411e <LexGetNumber+0x298>
  404110:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404114:	48 8b 00             	mov    (%rax),%rax
  404117:	0f b6 00             	movzbl (%rax),%eax
  40411a:	3c 4c                	cmp    $0x4c,%al
  40411c:	75 23                	jne    404141 <LexGetNumber+0x2bb>
  40411e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404122:	48 8b 00             	mov    (%rax),%rax
  404125:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404129:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40412d:	48 89 10             	mov    %rdx,(%rax)
  404130:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404134:	8b 40 1c             	mov    0x1c(%rax),%eax
  404137:	8d 50 01             	lea    0x1(%rax),%edx
  40413a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40413e:	89 50 1c             	mov    %edx,0x1c(%rax)
  404141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404145:	48 8d 90 88 0b 00 00 	lea    0xb88(%rax),%rdx
  40414c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404150:	48 89 10             	mov    %rdx,(%rax)
  404153:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404157:	48 8b 40 08          	mov    0x8(%rax),%rax
  40415b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40415f:	48 89 10             	mov    %rdx,(%rax)
  404162:	c7 45 ec 2e 00 00 00 	movl   $0x2e,-0x14(%rbp)
  404169:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40416d:	48 8b 10             	mov    (%rax),%rdx
  404170:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404174:	48 8b 40 08          	mov    0x8(%rax),%rax
  404178:	48 39 c2             	cmp    %rax,%rdx
  40417b:	75 05                	jne    404182 <LexGetNumber+0x2fc>
  40417d:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404180:	eb 03                	jmp    404185 <LexGetNumber+0x2ff>
  404182:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404185:	5d                   	pop    %rbp
  404186:	c3                   	retq   

0000000000404187 <LexGetWord>:
  404187:	55                   	push   %rbp
  404188:	48 89 e5             	mov    %rsp,%rbp
  40418b:	53                   	push   %rbx
  40418c:	48 83 ec 38          	sub    $0x38,%rsp
  404190:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  404194:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  404198:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40419c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041a0:	48 8b 00             	mov    (%rax),%rax
  4041a3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4041a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041ab:	48 8b 00             	mov    (%rax),%rax
  4041ae:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4041b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041b6:	48 89 10             	mov    %rdx,(%rax)
  4041b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041bd:	8b 40 1c             	mov    0x1c(%rax),%eax
  4041c0:	8d 50 01             	lea    0x1(%rax),%edx
  4041c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041c7:	89 50 1c             	mov    %edx,0x1c(%rax)
  4041ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041ce:	48 8b 10             	mov    (%rax),%rdx
  4041d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041d5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4041d9:	48 39 c2             	cmp    %rax,%rdx
  4041dc:	74 37                	je     404215 <LexGetWord+0x8e>
  4041de:	e8 3d f1 ff ff       	callq  403320 <__ctype_b_loc@plt>
  4041e3:	48 8b 10             	mov    (%rax),%rdx
  4041e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4041ea:	48 8b 00             	mov    (%rax),%rax
  4041ed:	0f b6 00             	movzbl (%rax),%eax
  4041f0:	48 0f be c0          	movsbq %al,%rax
  4041f4:	48 01 c0             	add    %rax,%rax
  4041f7:	48 01 d0             	add    %rdx,%rax
  4041fa:	0f b7 00             	movzwl (%rax),%eax
  4041fd:	0f b7 c0             	movzwl %ax,%eax
  404200:	83 e0 08             	and    $0x8,%eax
  404203:	85 c0                	test   %eax,%eax
  404205:	75 a0                	jne    4041a7 <LexGetWord+0x20>
  404207:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40420b:	48 8b 00             	mov    (%rax),%rax
  40420e:	0f b6 00             	movzbl (%rax),%eax
  404211:	3c 5f                	cmp    $0x5f,%al
  404213:	74 92                	je     4041a7 <LexGetWord+0x20>
  404215:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404219:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  404220:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404224:	48 8b 00             	mov    (%rax),%rax
  404227:	48 89 c2             	mov    %rax,%rdx
  40422a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40422e:	48 29 c2             	sub    %rax,%rdx
  404231:	48 89 d0             	mov    %rdx,%rax
  404234:	89 c2                	mov    %eax,%edx
  404236:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40423a:	48 8b 58 08          	mov    0x8(%rax),%rbx
  40423e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  404242:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404246:	48 89 ce             	mov    %rcx,%rsi
  404249:	48 89 c7             	mov    %rax,%rdi
  40424c:	e8 7d f9 ff ff       	callq  403bce <TableStrRegister2>
  404251:	48 89 03             	mov    %rax,(%rbx)
  404254:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404258:	48 8b 40 08          	mov    0x8(%rax),%rax
  40425c:	48 8b 10             	mov    (%rax),%rdx
  40425f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404263:	48 89 d6             	mov    %rdx,%rsi
  404266:	48 89 c7             	mov    %rax,%rdi
  404269:	e8 c8 fb ff ff       	callq  403e36 <LexCheckReservedWord>
  40426e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  404271:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  404274:	83 f8 53             	cmp    $0x53,%eax
  404277:	74 14                	je     40428d <LexGetWord+0x106>
  404279:	83 f8 54             	cmp    $0x54,%eax
  40427c:	74 02                	je     404280 <LexGetWord+0xf9>
  40427e:	eb 19                	jmp    404299 <LexGetWord+0x112>
  404280:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404284:	c7 40 28 01 00 00 00 	movl   $0x1,0x28(%rax)
  40428b:	eb 0c                	jmp    404299 <LexGetWord+0x112>
  40428d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404291:	c7 40 28 02 00 00 00 	movl   $0x2,0x28(%rax)
  404298:	90                   	nop
  404299:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40429d:	74 05                	je     4042a4 <LexGetWord+0x11d>
  40429f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4042a2:	eb 1c                	jmp    4042c0 <LexGetWord+0x139>
  4042a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4042a8:	8b 40 28             	mov    0x28(%rax),%eax
  4042ab:	83 f8 03             	cmp    $0x3,%eax
  4042ae:	75 0b                	jne    4042bb <LexGetWord+0x134>
  4042b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4042b4:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%rax)
  4042bb:	b8 2d 00 00 00       	mov    $0x2d,%eax
  4042c0:	48 83 c4 38          	add    $0x38,%rsp
  4042c4:	5b                   	pop    %rbx
  4042c5:	5d                   	pop    %rbp
  4042c6:	c3                   	retq   

00000000004042c7 <LexUnEscapeCharacterConstant>:
  4042c7:	55                   	push   %rbp
  4042c8:	48 89 e5             	mov    %rsp,%rbp
  4042cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4042cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4042d3:	89 d0                	mov    %edx,%eax
  4042d5:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  4042d8:	88 45 dc             	mov    %al,-0x24(%rbp)
  4042db:	80 7d dc 39          	cmpb   $0x39,-0x24(%rbp)
  4042df:	77 09                	ja     4042ea <LexUnEscapeCharacterConstant+0x23>
  4042e1:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
  4042e5:	83 e8 30             	sub    $0x30,%eax
  4042e8:	eb 16                	jmp    404300 <LexUnEscapeCharacterConstant+0x39>
  4042ea:	80 7d dc 46          	cmpb   $0x46,-0x24(%rbp)
  4042ee:	77 09                	ja     4042f9 <LexUnEscapeCharacterConstant+0x32>
  4042f0:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
  4042f4:	83 e8 37             	sub    $0x37,%eax
  4042f7:	eb 07                	jmp    404300 <LexUnEscapeCharacterConstant+0x39>
  4042f9:	0f b6 45 dc          	movzbl -0x24(%rbp),%eax
  4042fd:	83 e8 57             	sub    $0x57,%eax
  404300:	88 45 ff             	mov    %al,-0x1(%rbp)
  404303:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40430a:	eb 6a                	jmp    404376 <LexUnEscapeCharacterConstant+0xaf>
  40430c:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40430f:	f6 65 ff             	mulb   -0x1(%rbp)
  404312:	89 c2                	mov    %eax,%edx
  404314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404318:	48 8b 00             	mov    (%rax),%rax
  40431b:	0f b6 00             	movzbl (%rax),%eax
  40431e:	3c 39                	cmp    $0x39,%al
  404320:	7f 0f                	jg     404331 <LexUnEscapeCharacterConstant+0x6a>
  404322:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404326:	48 8b 00             	mov    (%rax),%rax
  404329:	0f b6 00             	movzbl (%rax),%eax
  40432c:	83 e8 30             	sub    $0x30,%eax
  40432f:	eb 2a                	jmp    40435b <LexUnEscapeCharacterConstant+0x94>
  404331:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404335:	48 8b 00             	mov    (%rax),%rax
  404338:	0f b6 00             	movzbl (%rax),%eax
  40433b:	3c 46                	cmp    $0x46,%al
  40433d:	7f 0f                	jg     40434e <LexUnEscapeCharacterConstant+0x87>
  40433f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404343:	48 8b 00             	mov    (%rax),%rax
  404346:	0f b6 00             	movzbl (%rax),%eax
  404349:	83 e8 37             	sub    $0x37,%eax
  40434c:	eb 0d                	jmp    40435b <LexUnEscapeCharacterConstant+0x94>
  40434e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404352:	48 8b 00             	mov    (%rax),%rax
  404355:	0f b6 00             	movzbl (%rax),%eax
  404358:	83 e8 57             	sub    $0x57,%eax
  40435b:	01 d0                	add    %edx,%eax
  40435d:	88 45 ff             	mov    %al,-0x1(%rbp)
  404360:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  404364:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404368:	48 8b 00             	mov    (%rax),%rax
  40436b:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40436f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404373:	48 89 10             	mov    %rdx,(%rax)
  404376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40437a:	48 8b 00             	mov    (%rax),%rax
  40437d:	0f b6 00             	movzbl (%rax),%eax
  404380:	3c 2f                	cmp    $0x2f,%al
  404382:	7e 21                	jle    4043a5 <LexUnEscapeCharacterConstant+0xde>
  404384:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404388:	48 8b 00             	mov    (%rax),%rax
  40438b:	0f b6 00             	movzbl (%rax),%eax
  40438e:	0f be c0             	movsbl %al,%eax
  404391:	ba 0a 00 00 00       	mov    $0xa,%edx
  404396:	83 7d d8 0a          	cmpl   $0xa,-0x28(%rbp)
  40439a:	0f 4e 55 d8          	cmovle -0x28(%rbp),%edx
  40439e:	83 c2 30             	add    $0x30,%edx
  4043a1:	39 d0                	cmp    %edx,%eax
  4043a3:	7c 3e                	jl     4043e3 <LexUnEscapeCharacterConstant+0x11c>
  4043a5:	83 7d d8 0a          	cmpl   $0xa,-0x28(%rbp)
  4043a9:	7e 42                	jle    4043ed <LexUnEscapeCharacterConstant+0x126>
  4043ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4043af:	48 8b 00             	mov    (%rax),%rax
  4043b2:	0f b6 00             	movzbl (%rax),%eax
  4043b5:	3c 60                	cmp    $0x60,%al
  4043b7:	7e 0e                	jle    4043c7 <LexUnEscapeCharacterConstant+0x100>
  4043b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4043bd:	48 8b 00             	mov    (%rax),%rax
  4043c0:	0f b6 00             	movzbl (%rax),%eax
  4043c3:	3c 66                	cmp    $0x66,%al
  4043c5:	7e 1c                	jle    4043e3 <LexUnEscapeCharacterConstant+0x11c>
  4043c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4043cb:	48 8b 00             	mov    (%rax),%rax
  4043ce:	0f b6 00             	movzbl (%rax),%eax
  4043d1:	3c 40                	cmp    $0x40,%al
  4043d3:	7e 18                	jle    4043ed <LexUnEscapeCharacterConstant+0x126>
  4043d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4043d9:	48 8b 00             	mov    (%rax),%rax
  4043dc:	0f b6 00             	movzbl (%rax),%eax
  4043df:	3c 46                	cmp    $0x46,%al
  4043e1:	7f 0a                	jg     4043ed <LexUnEscapeCharacterConstant+0x126>
  4043e3:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  4043e7:	0f 8e 1f ff ff ff    	jle    40430c <LexUnEscapeCharacterConstant+0x45>
  4043ed:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  4043f1:	5d                   	pop    %rbp
  4043f2:	c3                   	retq   

00000000004043f3 <LexUnEscapeCharacter>:
  4043f3:	55                   	push   %rbp
  4043f4:	48 89 e5             	mov    %rsp,%rbp
  4043f7:	48 83 ec 20          	sub    $0x20,%rsp
  4043fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4043ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404403:	eb 12                	jmp    404417 <LexUnEscapeCharacter+0x24>
  404405:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404409:	48 8b 00             	mov    (%rax),%rax
  40440c:	48 8d 50 02          	lea    0x2(%rax),%rdx
  404410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404414:	48 89 10             	mov    %rdx,(%rax)
  404417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40441b:	48 8b 00             	mov    (%rax),%rax
  40441e:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  404422:	74 45                	je     404469 <LexUnEscapeCharacter+0x76>
  404424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404428:	48 8b 00             	mov    (%rax),%rax
  40442b:	0f b6 00             	movzbl (%rax),%eax
  40442e:	3c 5c                	cmp    $0x5c,%al
  404430:	75 37                	jne    404469 <LexUnEscapeCharacter+0x76>
  404432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404436:	48 8b 00             	mov    (%rax),%rax
  404439:	48 83 c0 01          	add    $0x1,%rax
  40443d:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  404441:	74 26                	je     404469 <LexUnEscapeCharacter+0x76>
  404443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404447:	48 8b 00             	mov    (%rax),%rax
  40444a:	48 83 c0 01          	add    $0x1,%rax
  40444e:	0f b6 00             	movzbl (%rax),%eax
  404451:	3c 0a                	cmp    $0xa,%al
  404453:	74 b0                	je     404405 <LexUnEscapeCharacter+0x12>
  404455:	eb 12                	jmp    404469 <LexUnEscapeCharacter+0x76>
  404457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40445b:	48 8b 00             	mov    (%rax),%rax
  40445e:	48 8d 50 03          	lea    0x3(%rax),%rdx
  404462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404466:	48 89 10             	mov    %rdx,(%rax)
  404469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40446d:	48 8b 00             	mov    (%rax),%rax
  404470:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  404474:	74 54                	je     4044ca <LexUnEscapeCharacter+0xd7>
  404476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40447a:	48 8b 00             	mov    (%rax),%rax
  40447d:	0f b6 00             	movzbl (%rax),%eax
  404480:	3c 5c                	cmp    $0x5c,%al
  404482:	75 46                	jne    4044ca <LexUnEscapeCharacter+0xd7>
  404484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404488:	48 8b 00             	mov    (%rax),%rax
  40448b:	48 83 c0 01          	add    $0x1,%rax
  40448f:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  404493:	74 35                	je     4044ca <LexUnEscapeCharacter+0xd7>
  404495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404499:	48 8b 00             	mov    (%rax),%rax
  40449c:	48 83 c0 02          	add    $0x2,%rax
  4044a0:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4044a4:	74 24                	je     4044ca <LexUnEscapeCharacter+0xd7>
  4044a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044aa:	48 8b 00             	mov    (%rax),%rax
  4044ad:	48 83 c0 01          	add    $0x1,%rax
  4044b1:	0f b6 00             	movzbl (%rax),%eax
  4044b4:	3c 0d                	cmp    $0xd,%al
  4044b6:	75 12                	jne    4044ca <LexUnEscapeCharacter+0xd7>
  4044b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044bc:	48 8b 00             	mov    (%rax),%rax
  4044bf:	48 83 c0 02          	add    $0x2,%rax
  4044c3:	0f b6 00             	movzbl (%rax),%eax
  4044c6:	3c 0a                	cmp    $0xa,%al
  4044c8:	74 8d                	je     404457 <LexUnEscapeCharacter+0x64>
  4044ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044ce:	48 8b 00             	mov    (%rax),%rax
  4044d1:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4044d5:	75 0a                	jne    4044e1 <LexUnEscapeCharacter+0xee>
  4044d7:	b8 5c 00 00 00       	mov    $0x5c,%eax
  4044dc:	e9 10 01 00 00       	jmpq   4045f1 <LexUnEscapeCharacter+0x1fe>
  4044e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044e5:	48 8b 00             	mov    (%rax),%rax
  4044e8:	0f b6 00             	movzbl (%rax),%eax
  4044eb:	3c 5c                	cmp    $0x5c,%al
  4044ed:	0f 85 e9 00 00 00    	jne    4045dc <LexUnEscapeCharacter+0x1e9>
  4044f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4044f7:	48 8b 00             	mov    (%rax),%rax
  4044fa:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4044fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404502:	48 89 10             	mov    %rdx,(%rax)
  404505:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404509:	48 8b 00             	mov    (%rax),%rax
  40450c:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  404510:	75 0a                	jne    40451c <LexUnEscapeCharacter+0x129>
  404512:	b8 5c 00 00 00       	mov    $0x5c,%eax
  404517:	e9 d5 00 00 00       	jmpq   4045f1 <LexUnEscapeCharacter+0x1fe>
  40451c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404520:	48 8b 00             	mov    (%rax),%rax
  404523:	48 8d 48 01          	lea    0x1(%rax),%rcx
  404527:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40452b:	48 89 0a             	mov    %rcx,(%rdx)
  40452e:	0f b6 00             	movzbl (%rax),%eax
  404531:	88 45 ff             	mov    %al,-0x1(%rbp)
  404534:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  404538:	83 e8 22             	sub    $0x22,%eax
  40453b:	83 f8 56             	cmp    $0x56,%eax
  40453e:	0f 87 92 00 00 00    	ja     4045d6 <LexUnEscapeCharacter+0x1e3>
  404544:	89 c0                	mov    %eax,%eax
  404546:	48 8b 04 c5 88 76 41 	mov    0x417688(,%rax,8),%rax
  40454d:	00 
  40454e:	ff e0                	jmpq   *%rax
  404550:	b8 5c 00 00 00       	mov    $0x5c,%eax
  404555:	e9 97 00 00 00       	jmpq   4045f1 <LexUnEscapeCharacter+0x1fe>
  40455a:	b8 27 00 00 00       	mov    $0x27,%eax
  40455f:	e9 8d 00 00 00       	jmpq   4045f1 <LexUnEscapeCharacter+0x1fe>
  404564:	b8 22 00 00 00       	mov    $0x22,%eax
  404569:	e9 83 00 00 00       	jmpq   4045f1 <LexUnEscapeCharacter+0x1fe>
  40456e:	b8 07 00 00 00       	mov    $0x7,%eax
  404573:	eb 7c                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  404575:	b8 08 00 00 00       	mov    $0x8,%eax
  40457a:	eb 75                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  40457c:	b8 0c 00 00 00       	mov    $0xc,%eax
  404581:	eb 6e                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  404583:	b8 0a 00 00 00       	mov    $0xa,%eax
  404588:	eb 67                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  40458a:	b8 0d 00 00 00       	mov    $0xd,%eax
  40458f:	eb 60                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  404591:	b8 09 00 00 00       	mov    $0x9,%eax
  404596:	eb 59                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  404598:	b8 0b 00 00 00       	mov    $0xb,%eax
  40459d:	eb 52                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  40459f:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
  4045a3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4045a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045ab:	b9 08 00 00 00       	mov    $0x8,%ecx
  4045b0:	48 89 c7             	mov    %rax,%rdi
  4045b3:	e8 0f fd ff ff       	callq  4042c7 <LexUnEscapeCharacterConstant>
  4045b8:	eb 37                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  4045ba:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4045be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045c2:	b9 10 00 00 00       	mov    $0x10,%ecx
  4045c7:	ba 30 00 00 00       	mov    $0x30,%edx
  4045cc:	48 89 c7             	mov    %rax,%rdi
  4045cf:	e8 f3 fc ff ff       	callq  4042c7 <LexUnEscapeCharacterConstant>
  4045d4:	eb 1b                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  4045d6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  4045da:	eb 15                	jmp    4045f1 <LexUnEscapeCharacter+0x1fe>
  4045dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045e0:	48 8b 00             	mov    (%rax),%rax
  4045e3:	48 8d 48 01          	lea    0x1(%rax),%rcx
  4045e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4045eb:	48 89 0a             	mov    %rcx,(%rdx)
  4045ee:	0f b6 00             	movzbl (%rax),%eax
  4045f1:	c9                   	leaveq 
  4045f2:	c3                   	retq   

00000000004045f3 <LexGetStringConstant>:
  4045f3:	55                   	push   %rbp
  4045f4:	48 89 e5             	mov    %rsp,%rbp
  4045f7:	48 83 ec 60          	sub    $0x60,%rsp
  4045fb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  4045ff:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  404603:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  404607:	89 c8                	mov    %ecx,%eax
  404609:	88 45 a4             	mov    %al,-0x5c(%rbp)
  40460c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  404613:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404617:	48 8b 00             	mov    (%rax),%rax
  40461a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40461e:	e9 e8 00 00 00       	jmpq   40470b <LexGetStringConstant+0x118>
  404623:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404627:	0f 84 a6 00 00 00    	je     4046d3 <LexGetStringConstant+0xe0>
  40462d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404631:	48 8b 00             	mov    (%rax),%rax
  404634:	0f b6 00             	movzbl (%rax),%eax
  404637:	3c 0d                	cmp    $0xd,%al
  404639:	75 2a                	jne    404665 <LexGetStringConstant+0x72>
  40463b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40463f:	48 8b 00             	mov    (%rax),%rax
  404642:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404646:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40464a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40464e:	48 39 c2             	cmp    %rax,%rdx
  404651:	74 12                	je     404665 <LexGetStringConstant+0x72>
  404653:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404657:	48 8b 00             	mov    (%rax),%rax
  40465a:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40465e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404662:	48 89 10             	mov    %rdx,(%rax)
  404665:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404669:	48 8b 00             	mov    (%rax),%rax
  40466c:	0f b6 00             	movzbl (%rax),%eax
  40466f:	3c 0a                	cmp    $0xa,%al
  404671:	75 57                	jne    4046ca <LexGetStringConstant+0xd7>
  404673:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404677:	48 8b 00             	mov    (%rax),%rax
  40467a:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40467e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404682:	48 8b 40 08          	mov    0x8(%rax),%rax
  404686:	48 39 c2             	cmp    %rax,%rdx
  404689:	74 3f                	je     4046ca <LexGetStringConstant+0xd7>
  40468b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40468f:	8b 40 18             	mov    0x18(%rax),%eax
  404692:	8d 50 01             	lea    0x1(%rax),%edx
  404695:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404699:	89 50 18             	mov    %edx,0x18(%rax)
  40469c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046a0:	48 8b 00             	mov    (%rax),%rax
  4046a3:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4046a7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046ab:	48 89 10             	mov    %rdx,(%rax)
  4046ae:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046b2:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  4046b9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046bd:	8b 40 2c             	mov    0x2c(%rax),%eax
  4046c0:	8d 50 01             	lea    0x1(%rax),%edx
  4046c3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046c7:	89 50 2c             	mov    %edx,0x2c(%rax)
  4046ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4046d1:	eb 15                	jmp    4046e8 <LexGetStringConstant+0xf5>
  4046d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046d7:	48 8b 00             	mov    (%rax),%rax
  4046da:	0f b6 00             	movzbl (%rax),%eax
  4046dd:	3c 5c                	cmp    $0x5c,%al
  4046df:	75 07                	jne    4046e8 <LexGetStringConstant+0xf5>
  4046e1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4046e8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046ec:	48 8b 00             	mov    (%rax),%rax
  4046ef:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4046f3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046f7:	48 89 10             	mov    %rdx,(%rax)
  4046fa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4046fe:	8b 40 1c             	mov    0x1c(%rax),%eax
  404701:	8d 50 01             	lea    0x1(%rax),%edx
  404704:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404708:	89 50 1c             	mov    %edx,0x1c(%rax)
  40470b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40470f:	48 8b 10             	mov    (%rax),%rdx
  404712:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404716:	48 8b 40 08          	mov    0x8(%rax),%rax
  40471a:	48 39 c2             	cmp    %rax,%rdx
  40471d:	74 1d                	je     40473c <LexGetStringConstant+0x149>
  40471f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404723:	48 8b 00             	mov    (%rax),%rax
  404726:	0f b6 00             	movzbl (%rax),%eax
  404729:	38 45 a4             	cmp    %al,-0x5c(%rbp)
  40472c:	0f 85 f1 fe ff ff    	jne    404623 <LexGetStringConstant+0x30>
  404732:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404736:	0f 85 e7 fe ff ff    	jne    404623 <LexGetStringConstant+0x30>
  40473c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404740:	48 8b 00             	mov    (%rax),%rax
  404743:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  404747:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40474b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40474f:	48 29 c2             	sub    %rax,%rdx
  404752:	48 89 d0             	mov    %rdx,%rax
  404755:	89 c2                	mov    %eax,%edx
  404757:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40475b:	89 d6                	mov    %edx,%esi
  40475d:	48 89 c7             	mov    %rax,%rdi
  404760:	e8 72 87 00 00       	callq  40ced7 <HeapAllocStack>
  404765:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  404769:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40476e:	75 1d                	jne    40478d <LexGetStringConstant+0x19a>
  404770:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  404774:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404778:	ba 40 79 41 00       	mov    $0x417940,%edx
  40477d:	48 89 ce             	mov    %rcx,%rsi
  404780:	48 89 c7             	mov    %rax,%rdi
  404783:	b8 00 00 00 00       	mov    $0x0,%eax
  404788:	e8 9c c2 00 00       	callq  410a29 <LexFail>
  40478d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404791:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  404795:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  404799:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40479d:	48 89 10             	mov    %rdx,(%rax)
  4047a0:	eb 25                	jmp    4047c7 <LexGetStringConstant+0x1d4>
  4047a2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4047a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4047aa:	48 89 d6             	mov    %rdx,%rsi
  4047ad:	48 89 c7             	mov    %rax,%rdi
  4047b0:	e8 3e fc ff ff       	callq  4043f3 <LexUnEscapeCharacter>
  4047b5:	89 c1                	mov    %eax,%ecx
  4047b7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4047bb:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4047bf:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4047c3:	89 ca                	mov    %ecx,%edx
  4047c5:	88 10                	mov    %dl,(%rax)
  4047c7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4047cb:	48 8b 00             	mov    (%rax),%rax
  4047ce:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  4047d2:	75 ce                	jne    4047a2 <LexGetStringConstant+0x1af>
  4047d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4047d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4047dc:	48 29 c2             	sub    %rax,%rdx
  4047df:	48 89 d0             	mov    %rdx,%rax
  4047e2:	89 c2                	mov    %eax,%edx
  4047e4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4047e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4047ec:	48 89 ce             	mov    %rcx,%rsi
  4047ef:	48 89 c7             	mov    %rax,%rdi
  4047f2:	e8 d7 f3 ff ff       	callq  403bce <TableStrRegister2>
  4047f7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  4047fb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4047ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404803:	48 29 c2             	sub    %rax,%rdx
  404806:	48 89 d0             	mov    %rdx,%rax
  404809:	89 c2                	mov    %eax,%edx
  40480b:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40480f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404813:	48 89 ce             	mov    %rcx,%rsi
  404816:	48 89 c7             	mov    %rax,%rdi
  404819:	e8 70 87 00 00       	callq  40cf8e <HeapPopStack>
  40481e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404822:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404826:	48 89 d6             	mov    %rdx,%rsi
  404829:	48 89 c7             	mov    %rax,%rdi
  40482c:	e8 c2 b3 00 00       	callq  40fbf3 <VariableStringLiteralGet>
  404831:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  404835:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40483a:	75 60                	jne    40489c <LexGetStringConstant+0x2a9>
  40483c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404840:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  404846:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40484c:	b9 00 00 00 00       	mov    $0x0,%ecx
  404851:	ba 00 00 00 00       	mov    $0x0,%edx
  404856:	be 00 00 00 00       	mov    $0x0,%esi
  40485b:	48 89 c7             	mov    %rax,%rdi
  40485e:	e8 02 a3 00 00       	callq  40eb65 <VariableAllocValueAndData>
  404863:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  404867:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40486b:	48 8b 90 58 0e 00 00 	mov    0xe58(%rax),%rdx
  404872:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404876:	48 89 10             	mov    %rdx,(%rax)
  404879:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40487d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  404881:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404885:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404889:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40488d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  404891:	48 89 ce             	mov    %rcx,%rsi
  404894:	48 89 c7             	mov    %rax,%rdi
  404897:	e8 ac b3 00 00       	callq  40fc48 <VariableStringLiteralDefine>
  40489c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4048a0:	48 8b 90 48 0e 00 00 	mov    0xe48(%rax),%rdx
  4048a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4048ab:	48 89 10             	mov    %rdx,(%rax)
  4048ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4048b2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4048b6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4048ba:	48 89 10             	mov    %rdx,(%rax)
  4048bd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4048c1:	48 8b 00             	mov    (%rax),%rax
  4048c4:	0f b6 00             	movzbl (%rax),%eax
  4048c7:	38 45 a4             	cmp    %al,-0x5c(%rbp)
  4048ca:	75 23                	jne    4048ef <LexGetStringConstant+0x2fc>
  4048cc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4048d0:	48 8b 00             	mov    (%rax),%rax
  4048d3:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4048d7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4048db:	48 89 10             	mov    %rdx,(%rax)
  4048de:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4048e2:	8b 40 1c             	mov    0x1c(%rax),%eax
  4048e5:	8d 50 01             	lea    0x1(%rax),%edx
  4048e8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4048ec:	89 50 1c             	mov    %edx,0x1c(%rax)
  4048ef:	b8 30 00 00 00       	mov    $0x30,%eax
  4048f4:	c9                   	leaveq 
  4048f5:	c3                   	retq   

00000000004048f6 <LexGetCharacterConstant>:
  4048f6:	55                   	push   %rbp
  4048f7:	48 89 e5             	mov    %rsp,%rbp
  4048fa:	48 83 ec 20          	sub    $0x20,%rsp
  4048fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  404902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  404906:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40490a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40490e:	48 8d 90 48 0b 00 00 	lea    0xb48(%rax),%rdx
  404915:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404919:	48 89 10             	mov    %rdx,(%rax)
  40491c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404920:	48 8b 50 08          	mov    0x8(%rax),%rdx
  404924:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404928:	48 89 d6             	mov    %rdx,%rsi
  40492b:	48 89 c7             	mov    %rax,%rdi
  40492e:	e8 c0 fa ff ff       	callq  4043f3 <LexUnEscapeCharacter>
  404933:	89 c2                	mov    %eax,%edx
  404935:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404939:	48 8b 40 08          	mov    0x8(%rax),%rax
  40493d:	88 10                	mov    %dl,(%rax)
  40493f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404943:	48 8b 10             	mov    (%rax),%rdx
  404946:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40494a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40494e:	48 39 c2             	cmp    %rax,%rdx
  404951:	74 2b                	je     40497e <LexGetCharacterConstant+0x88>
  404953:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404957:	48 8b 00             	mov    (%rax),%rax
  40495a:	0f b6 00             	movzbl (%rax),%eax
  40495d:	3c 27                	cmp    $0x27,%al
  40495f:	74 1d                	je     40497e <LexGetCharacterConstant+0x88>
  404961:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  404965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404969:	ba 4e 79 41 00       	mov    $0x41794e,%edx
  40496e:	48 89 ce             	mov    %rcx,%rsi
  404971:	48 89 c7             	mov    %rax,%rdi
  404974:	b8 00 00 00 00       	mov    $0x0,%eax
  404979:	e8 ab c0 00 00       	callq  410a29 <LexFail>
  40497e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404982:	48 8b 00             	mov    (%rax),%rax
  404985:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404989:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40498d:	48 89 10             	mov    %rdx,(%rax)
  404990:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  404994:	8b 40 1c             	mov    0x1c(%rax),%eax
  404997:	8d 50 01             	lea    0x1(%rax),%edx
  40499a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40499e:	89 50 1c             	mov    %edx,0x1c(%rax)
  4049a1:	b8 31 00 00 00       	mov    $0x31,%eax
  4049a6:	c9                   	leaveq 
  4049a7:	c3                   	retq   

00000000004049a8 <LexSkipComment>:
  4049a8:	55                   	push   %rbp
  4049a9:	48 89 e5             	mov    %rsp,%rbp
  4049ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4049b0:	89 f0                	mov    %esi,%eax
  4049b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4049b6:	88 45 f4             	mov    %al,-0xc(%rbp)
  4049b9:	80 7d f4 2a          	cmpb   $0x2a,-0xc(%rbp)
  4049bd:	0f 85 df 00 00 00    	jne    404aa2 <LexSkipComment+0xfa>
  4049c3:	eb 42                	jmp    404a07 <LexSkipComment+0x5f>
  4049c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049c9:	48 8b 00             	mov    (%rax),%rax
  4049cc:	0f b6 00             	movzbl (%rax),%eax
  4049cf:	3c 0a                	cmp    $0xa,%al
  4049d1:	75 11                	jne    4049e4 <LexSkipComment+0x3c>
  4049d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049d7:	8b 40 2c             	mov    0x2c(%rax),%eax
  4049da:	8d 50 01             	lea    0x1(%rax),%edx
  4049dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049e1:	89 50 2c             	mov    %edx,0x2c(%rax)
  4049e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049e8:	48 8b 00             	mov    (%rax),%rax
  4049eb:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4049ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049f3:	48 89 10             	mov    %rdx,(%rax)
  4049f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4049fa:	8b 40 1c             	mov    0x1c(%rax),%eax
  4049fd:	8d 50 01             	lea    0x1(%rax),%edx
  404a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a04:	89 50 1c             	mov    %edx,0x1c(%rax)
  404a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a0b:	48 8b 10             	mov    (%rax),%rdx
  404a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a12:	48 8b 40 08          	mov    0x8(%rax),%rax
  404a16:	48 39 c2             	cmp    %rax,%rdx
  404a19:	74 20                	je     404a3b <LexSkipComment+0x93>
  404a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a1f:	48 8b 00             	mov    (%rax),%rax
  404a22:	48 83 e8 01          	sub    $0x1,%rax
  404a26:	0f b6 00             	movzbl (%rax),%eax
  404a29:	3c 2a                	cmp    $0x2a,%al
  404a2b:	75 98                	jne    4049c5 <LexSkipComment+0x1d>
  404a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a31:	48 8b 00             	mov    (%rax),%rax
  404a34:	0f b6 00             	movzbl (%rax),%eax
  404a37:	3c 2f                	cmp    $0x2f,%al
  404a39:	75 8a                	jne    4049c5 <LexSkipComment+0x1d>
  404a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a3f:	48 8b 10             	mov    (%rax),%rdx
  404a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a46:	48 8b 40 08          	mov    0x8(%rax),%rax
  404a4a:	48 39 c2             	cmp    %rax,%rdx
  404a4d:	74 23                	je     404a72 <LexSkipComment+0xca>
  404a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a53:	48 8b 00             	mov    (%rax),%rax
  404a56:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a5e:	48 89 10             	mov    %rdx,(%rax)
  404a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a65:	8b 40 1c             	mov    0x1c(%rax),%eax
  404a68:	8d 50 01             	lea    0x1(%rax),%edx
  404a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a6f:	89 50 1c             	mov    %edx,0x1c(%rax)
  404a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a76:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  404a7d:	eb 45                	jmp    404ac4 <LexSkipComment+0x11c>
  404a7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a83:	48 8b 00             	mov    (%rax),%rax
  404a86:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a8e:	48 89 10             	mov    %rdx,(%rax)
  404a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a95:	8b 40 1c             	mov    0x1c(%rax),%eax
  404a98:	8d 50 01             	lea    0x1(%rax),%edx
  404a9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404a9f:	89 50 1c             	mov    %edx,0x1c(%rax)
  404aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404aa6:	48 8b 10             	mov    (%rax),%rdx
  404aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404aad:	48 8b 40 08          	mov    0x8(%rax),%rax
  404ab1:	48 39 c2             	cmp    %rax,%rdx
  404ab4:	74 0e                	je     404ac4 <LexSkipComment+0x11c>
  404ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404aba:	48 8b 00             	mov    (%rax),%rax
  404abd:	0f b6 00             	movzbl (%rax),%eax
  404ac0:	3c 0a                	cmp    $0xa,%al
  404ac2:	75 bb                	jne    404a7f <LexSkipComment+0xd7>
  404ac4:	90                   	nop
  404ac5:	5d                   	pop    %rbp
  404ac6:	c3                   	retq   

0000000000404ac7 <LexScanGetToken>:
  404ac7:	55                   	push   %rbp
  404ac8:	48 89 e5             	mov    %rsp,%rbp
  404acb:	48 83 ec 30          	sub    $0x30,%rsp
  404acf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404ad3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404ad7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  404adb:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  404ae2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ae6:	8b 40 2c             	mov    0x2c(%rax),%eax
  404ae9:	85 c0                	test   %eax,%eax
  404aeb:	7e 1b                	jle    404b08 <LexScanGetToken+0x41>
  404aed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404af1:	8b 40 2c             	mov    0x2c(%rax),%eax
  404af4:	8d 50 ff             	lea    -0x1(%rax),%edx
  404af7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404afb:	89 50 2c             	mov    %edx,0x2c(%rax)
  404afe:	b8 5e 00 00 00       	mov    $0x5e,%eax
  404b03:	e9 1b 09 00 00       	jmpq   405423 <LexScanGetToken+0x95c>
  404b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404b0c:	48 8d 90 b0 03 00 00 	lea    0x3b0(%rax),%rdx
  404b13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404b17:	48 89 10             	mov    %rdx,(%rax)
  404b1a:	e9 b0 00 00 00       	jmpq   404bcf <LexScanGetToken+0x108>
  404b1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b23:	48 8b 00             	mov    (%rax),%rax
  404b26:	0f b6 00             	movzbl (%rax),%eax
  404b29:	3c 0a                	cmp    $0xa,%al
  404b2b:	75 43                	jne    404b70 <LexScanGetToken+0xa9>
  404b2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b31:	8b 40 18             	mov    0x18(%rax),%eax
  404b34:	8d 50 01             	lea    0x1(%rax),%edx
  404b37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b3b:	89 50 18             	mov    %edx,0x18(%rax)
  404b3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b42:	48 8b 00             	mov    (%rax),%rax
  404b45:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404b49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b4d:	48 89 10             	mov    %rdx,(%rax)
  404b50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b54:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  404b5b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b5f:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  404b66:	b8 5e 00 00 00       	mov    $0x5e,%eax
  404b6b:	e9 b3 08 00 00       	jmpq   405423 <LexScanGetToken+0x95c>
  404b70:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b74:	8b 40 28             	mov    0x28(%rax),%eax
  404b77:	83 f8 02             	cmp    $0x2,%eax
  404b7a:	74 0c                	je     404b88 <LexScanGetToken+0xc1>
  404b7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b80:	8b 40 28             	mov    0x28(%rax),%eax
  404b83:	83 f8 03             	cmp    $0x3,%eax
  404b86:	75 0d                	jne    404b95 <LexScanGetToken+0xce>
  404b88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b8c:	c7 40 28 03 00 00 00 	movl   $0x3,0x28(%rax)
  404b93:	eb 17                	jmp    404bac <LexScanGetToken+0xe5>
  404b95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404b99:	8b 40 28             	mov    0x28(%rax),%eax
  404b9c:	83 f8 04             	cmp    $0x4,%eax
  404b9f:	75 0b                	jne    404bac <LexScanGetToken+0xe5>
  404ba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ba5:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  404bac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bb0:	48 8b 00             	mov    (%rax),%rax
  404bb3:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404bb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bbb:	48 89 10             	mov    %rdx,(%rax)
  404bbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bc2:	8b 40 1c             	mov    0x1c(%rax),%eax
  404bc5:	8d 50 01             	lea    0x1(%rax),%edx
  404bc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bcc:	89 50 1c             	mov    %edx,0x1c(%rax)
  404bcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bd3:	48 8b 10             	mov    (%rax),%rdx
  404bd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bda:	48 8b 40 08          	mov    0x8(%rax),%rax
  404bde:	48 39 c2             	cmp    %rax,%rdx
  404be1:	74 2f                	je     404c12 <LexScanGetToken+0x14b>
  404be3:	e8 38 e7 ff ff       	callq  403320 <__ctype_b_loc@plt>
  404be8:	48 8b 10             	mov    (%rax),%rdx
  404beb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bef:	48 8b 00             	mov    (%rax),%rax
  404bf2:	0f b6 00             	movzbl (%rax),%eax
  404bf5:	48 0f be c0          	movsbq %al,%rax
  404bf9:	48 01 c0             	add    %rax,%rax
  404bfc:	48 01 d0             	add    %rdx,%rax
  404bff:	0f b7 00             	movzwl (%rax),%eax
  404c02:	0f b7 c0             	movzwl %ax,%eax
  404c05:	25 00 20 00 00       	and    $0x2000,%eax
  404c0a:	85 c0                	test   %eax,%eax
  404c0c:	0f 85 0d ff ff ff    	jne    404b1f <LexScanGetToken+0x58>
  404c12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c16:	48 8b 10             	mov    (%rax),%rdx
  404c19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c1d:	48 8b 40 08          	mov    0x8(%rax),%rax
  404c21:	48 39 c2             	cmp    %rax,%rdx
  404c24:	74 0e                	je     404c34 <LexScanGetToken+0x16d>
  404c26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c2a:	48 8b 00             	mov    (%rax),%rax
  404c2d:	0f b6 00             	movzbl (%rax),%eax
  404c30:	84 c0                	test   %al,%al
  404c32:	75 0a                	jne    404c3e <LexScanGetToken+0x177>
  404c34:	b8 5d 00 00 00       	mov    $0x5d,%eax
  404c39:	e9 e5 07 00 00       	jmpq   405423 <LexScanGetToken+0x95c>
  404c3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404c42:	48 8b 00             	mov    (%rax),%rax
  404c45:	0f b6 00             	movzbl (%rax),%eax
  404c48:	88 45 ff             	mov    %al,-0x1(%rbp)
  404c4b:	e8 d0 e6 ff ff       	callq  403320 <__ctype_b_loc@plt>
  404c50:	48 8b 00             	mov    (%rax),%rax
  404c53:	48 0f be 55 ff       	movsbq -0x1(%rbp),%rdx
  404c58:	48 01 d2             	add    %rdx,%rdx
  404c5b:	48 01 d0             	add    %rdx,%rax
  404c5e:	0f b7 00             	movzwl (%rax),%eax
  404c61:	0f b7 c0             	movzwl %ax,%eax
  404c64:	25 00 04 00 00       	and    $0x400,%eax
  404c69:	85 c0                	test   %eax,%eax
  404c6b:	75 0c                	jne    404c79 <LexScanGetToken+0x1b2>
  404c6d:	80 7d ff 5f          	cmpb   $0x5f,-0x1(%rbp)
  404c71:	74 06                	je     404c79 <LexScanGetToken+0x1b2>
  404c73:	80 7d ff 23          	cmpb   $0x23,-0x1(%rbp)
  404c77:	75 1f                	jne    404c98 <LexScanGetToken+0x1d1>
  404c79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404c7d:	48 8b 10             	mov    (%rax),%rdx
  404c80:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  404c84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404c88:	48 89 ce             	mov    %rcx,%rsi
  404c8b:	48 89 c7             	mov    %rax,%rdi
  404c8e:	e8 f4 f4 ff ff       	callq  404187 <LexGetWord>
  404c93:	e9 8b 07 00 00       	jmpq   405423 <LexScanGetToken+0x95c>
  404c98:	e8 83 e6 ff ff       	callq  403320 <__ctype_b_loc@plt>
  404c9d:	48 8b 00             	mov    (%rax),%rax
  404ca0:	48 0f be 55 ff       	movsbq -0x1(%rbp),%rdx
  404ca5:	48 01 d2             	add    %rdx,%rdx
  404ca8:	48 01 d0             	add    %rdx,%rax
  404cab:	0f b7 00             	movzwl (%rax),%eax
  404cae:	0f b7 c0             	movzwl %ax,%eax
  404cb1:	25 00 08 00 00       	and    $0x800,%eax
  404cb6:	85 c0                	test   %eax,%eax
  404cb8:	74 1f                	je     404cd9 <LexScanGetToken+0x212>
  404cba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404cbe:	48 8b 10             	mov    (%rax),%rdx
  404cc1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  404cc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404cc9:	48 89 ce             	mov    %rcx,%rsi
  404ccc:	48 89 c7             	mov    %rax,%rdi
  404ccf:	e8 b2 f1 ff ff       	callq  403e86 <LexGetNumber>
  404cd4:	e9 4a 07 00 00       	jmpq   405423 <LexScanGetToken+0x95c>
  404cd9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404cdd:	48 8b 00             	mov    (%rax),%rax
  404ce0:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404ce4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ce8:	48 8b 40 08          	mov    0x8(%rax),%rax
  404cec:	48 39 c2             	cmp    %rax,%rdx
  404cef:	74 10                	je     404d01 <LexScanGetToken+0x23a>
  404cf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404cf5:	48 8b 00             	mov    (%rax),%rax
  404cf8:	48 83 c0 01          	add    $0x1,%rax
  404cfc:	0f b6 00             	movzbl (%rax),%eax
  404cff:	eb 05                	jmp    404d06 <LexScanGetToken+0x23f>
  404d01:	b8 00 00 00 00       	mov    $0x0,%eax
  404d06:	88 45 fe             	mov    %al,-0x2(%rbp)
  404d09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d0d:	48 8b 00             	mov    (%rax),%rax
  404d10:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404d14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d18:	48 89 10             	mov    %rdx,(%rax)
  404d1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d1f:	8b 40 1c             	mov    0x1c(%rax),%eax
  404d22:	8d 50 01             	lea    0x1(%rax),%edx
  404d25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d29:	89 50 1c             	mov    %edx,0x1c(%rax)
  404d2c:	0f be 45 ff          	movsbl -0x1(%rbp),%eax
  404d30:	83 e8 21             	sub    $0x21,%eax
  404d33:	83 f8 5d             	cmp    $0x5d,%eax
  404d36:	0f 87 b8 06 00 00    	ja     4053f4 <LexScanGetToken+0x92d>
  404d3c:	89 c0                	mov    %eax,%eax
  404d3e:	48 8b 04 c5 78 79 41 	mov    0x417978(,%rax,8),%rax
  404d45:	00 
  404d46:	ff e0                	jmpq   *%rax
  404d48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404d4c:	48 8b 10             	mov    (%rax),%rdx
  404d4f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  404d53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404d57:	b9 22 00 00 00       	mov    $0x22,%ecx
  404d5c:	48 89 c7             	mov    %rax,%rdi
  404d5f:	e8 8f f8 ff ff       	callq  4045f3 <LexGetStringConstant>
  404d64:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404d67:	e9 a9 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404d6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404d70:	48 8b 10             	mov    (%rax),%rdx
  404d73:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  404d77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404d7b:	48 89 ce             	mov    %rcx,%rsi
  404d7e:	48 89 c7             	mov    %rax,%rdi
  404d81:	e8 70 fb ff ff       	callq  4048f6 <LexGetCharacterConstant>
  404d86:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404d89:	e9 87 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404d8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404d92:	8b 40 28             	mov    0x28(%rax),%eax
  404d95:	83 f8 04             	cmp    $0x4,%eax
  404d98:	75 09                	jne    404da3 <LexScanGetToken+0x2dc>
  404d9a:	c7 45 f8 5c 00 00 00 	movl   $0x5c,-0x8(%rbp)
  404da1:	eb 07                	jmp    404daa <LexScanGetToken+0x2e3>
  404da3:	c7 45 f8 2b 00 00 00 	movl   $0x2b,-0x8(%rbp)
  404daa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404dae:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
  404db5:	e9 5b 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404dba:	c7 45 f8 2c 00 00 00 	movl   $0x2c,-0x8(%rbp)
  404dc1:	e9 4f 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404dc6:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404dca:	75 2f                	jne    404dfb <LexScanGetToken+0x334>
  404dcc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404dd0:	48 8b 00             	mov    (%rax),%rax
  404dd3:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404dd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ddb:	48 89 10             	mov    %rdx,(%rax)
  404dde:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404de2:	8b 40 1c             	mov    0x1c(%rax),%eax
  404de5:	8d 50 01             	lea    0x1(%rax),%edx
  404de8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404dec:	89 50 1c             	mov    %edx,0x1c(%rax)
  404def:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%rbp)
  404df6:	e9 1a 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404dfb:	c7 45 f8 02 00 00 00 	movl   $0x2,-0x8(%rbp)
  404e02:	e9 0e 06 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404e07:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404e0b:	75 2f                	jne    404e3c <LexScanGetToken+0x375>
  404e0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e11:	48 8b 00             	mov    (%rax),%rax
  404e14:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404e18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e1c:	48 89 10             	mov    %rdx,(%rax)
  404e1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e23:	8b 40 1c             	mov    0x1c(%rax),%eax
  404e26:	8d 50 01             	lea    0x1(%rax),%edx
  404e29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e2d:	89 50 1c             	mov    %edx,0x1c(%rax)
  404e30:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
  404e37:	e9 d9 05 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404e3c:	80 7d fe 2b          	cmpb   $0x2b,-0x2(%rbp)
  404e40:	75 2f                	jne    404e71 <LexScanGetToken+0x3aa>
  404e42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e46:	48 8b 00             	mov    (%rax),%rax
  404e49:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404e4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e51:	48 89 10             	mov    %rdx,(%rax)
  404e54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e58:	8b 40 1c             	mov    0x1c(%rax),%eax
  404e5b:	8d 50 01             	lea    0x1(%rax),%edx
  404e5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e62:	89 50 1c             	mov    %edx,0x1c(%rax)
  404e65:	c7 45 f8 21 00 00 00 	movl   $0x21,-0x8(%rbp)
  404e6c:	e9 a4 05 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404e71:	c7 45 f8 1c 00 00 00 	movl   $0x1c,-0x8(%rbp)
  404e78:	e9 98 05 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404e7d:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404e81:	75 2f                	jne    404eb2 <LexScanGetToken+0x3eb>
  404e83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e87:	48 8b 00             	mov    (%rax),%rax
  404e8a:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404e8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e92:	48 89 10             	mov    %rdx,(%rax)
  404e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404e99:	8b 40 1c             	mov    0x1c(%rax),%eax
  404e9c:	8d 50 01             	lea    0x1(%rax),%edx
  404e9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ea3:	89 50 1c             	mov    %edx,0x1c(%rax)
  404ea6:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)
  404ead:	e9 63 05 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404eb2:	80 7d fe 3e          	cmpb   $0x3e,-0x2(%rbp)
  404eb6:	75 2f                	jne    404ee7 <LexScanGetToken+0x420>
  404eb8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ebc:	48 8b 00             	mov    (%rax),%rax
  404ebf:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404ec3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ec7:	48 89 10             	mov    %rdx,(%rax)
  404eca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ece:	8b 40 1c             	mov    0x1c(%rax),%eax
  404ed1:	8d 50 01             	lea    0x1(%rax),%edx
  404ed4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ed8:	89 50 1c             	mov    %edx,0x1c(%rax)
  404edb:	c7 45 f8 2a 00 00 00 	movl   $0x2a,-0x8(%rbp)
  404ee2:	e9 2e 05 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404ee7:	80 7d fe 2d          	cmpb   $0x2d,-0x2(%rbp)
  404eeb:	75 2f                	jne    404f1c <LexScanGetToken+0x455>
  404eed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ef1:	48 8b 00             	mov    (%rax),%rax
  404ef4:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404ef8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404efc:	48 89 10             	mov    %rdx,(%rax)
  404eff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f03:	8b 40 1c             	mov    0x1c(%rax),%eax
  404f06:	8d 50 01             	lea    0x1(%rax),%edx
  404f09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f0d:	89 50 1c             	mov    %edx,0x1c(%rax)
  404f10:	c7 45 f8 22 00 00 00 	movl   $0x22,-0x8(%rbp)
  404f17:	e9 f9 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404f1c:	c7 45 f8 1d 00 00 00 	movl   $0x1d,-0x8(%rbp)
  404f23:	e9 ed 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404f28:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404f2c:	75 2f                	jne    404f5d <LexScanGetToken+0x496>
  404f2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f32:	48 8b 00             	mov    (%rax),%rax
  404f35:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404f39:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f3d:	48 89 10             	mov    %rdx,(%rax)
  404f40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f44:	8b 40 1c             	mov    0x1c(%rax),%eax
  404f47:	8d 50 01             	lea    0x1(%rax),%edx
  404f4a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f4e:	89 50 1c             	mov    %edx,0x1c(%rax)
  404f51:	c7 45 f8 05 00 00 00 	movl   $0x5,-0x8(%rbp)
  404f58:	e9 b8 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404f5d:	c7 45 f8 1e 00 00 00 	movl   $0x1e,-0x8(%rbp)
  404f64:	e9 ac 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404f69:	80 7d fe 2f          	cmpb   $0x2f,-0x2(%rbp)
  404f6d:	74 06                	je     404f75 <LexScanGetToken+0x4ae>
  404f6f:	80 7d fe 2a          	cmpb   $0x2a,-0x2(%rbp)
  404f73:	75 3e                	jne    404fb3 <LexScanGetToken+0x4ec>
  404f75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f79:	48 8b 00             	mov    (%rax),%rax
  404f7c:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404f80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f84:	48 89 10             	mov    %rdx,(%rax)
  404f87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f8b:	8b 40 1c             	mov    0x1c(%rax),%eax
  404f8e:	8d 50 01             	lea    0x1(%rax),%edx
  404f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404f95:	89 50 1c             	mov    %edx,0x1c(%rax)
  404f98:	0f be 4d fe          	movsbl -0x2(%rbp),%ecx
  404f9c:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  404fa0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404fa4:	89 ce                	mov    %ecx,%esi
  404fa6:	48 89 c7             	mov    %rax,%rdi
  404fa9:	e8 fa f9 ff ff       	callq  4049a8 <LexSkipComment>
  404fae:	e9 62 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404fb3:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404fb7:	75 2f                	jne    404fe8 <LexScanGetToken+0x521>
  404fb9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404fbd:	48 8b 00             	mov    (%rax),%rax
  404fc0:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404fc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404fc8:	48 89 10             	mov    %rdx,(%rax)
  404fcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404fcf:	8b 40 1c             	mov    0x1c(%rax),%eax
  404fd2:	8d 50 01             	lea    0x1(%rax),%edx
  404fd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404fd9:	89 50 1c             	mov    %edx,0x1c(%rax)
  404fdc:	c7 45 f8 06 00 00 00 	movl   $0x6,-0x8(%rbp)
  404fe3:	e9 2d 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404fe8:	c7 45 f8 1f 00 00 00 	movl   $0x1f,-0x8(%rbp)
  404fef:	e9 21 04 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  404ff4:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  404ff8:	75 2f                	jne    405029 <LexScanGetToken+0x562>
  404ffa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404ffe:	48 8b 00             	mov    (%rax),%rax
  405001:	48 8d 50 01          	lea    0x1(%rax),%rdx
  405005:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405009:	48 89 10             	mov    %rdx,(%rax)
  40500c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405010:	8b 40 1c             	mov    0x1c(%rax),%eax
  405013:	8d 50 01             	lea    0x1(%rax),%edx
  405016:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40501a:	89 50 1c             	mov    %edx,0x1c(%rax)
  40501d:	c7 45 f8 07 00 00 00 	movl   $0x7,-0x8(%rbp)
  405024:	e9 ec 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405029:	c7 45 f8 20 00 00 00 	movl   $0x20,-0x8(%rbp)
  405030:	e9 e0 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405039:	8b 40 28             	mov    0x28(%rax),%eax
  40503c:	83 f8 01             	cmp    $0x1,%eax
  40503f:	75 24                	jne    405065 <LexScanGetToken+0x59e>
  405041:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405045:	48 8b 10             	mov    (%rax),%rdx
  405048:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40504c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405050:	b9 3e 00 00 00       	mov    $0x3e,%ecx
  405055:	48 89 c7             	mov    %rax,%rdi
  405058:	e8 96 f5 ff ff       	callq  4045f3 <LexGetStringConstant>
  40505d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  405060:	e9 b0 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405065:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  405069:	75 2f                	jne    40509a <LexScanGetToken+0x5d3>
  40506b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40506f:	48 8b 00             	mov    (%rax),%rax
  405072:	48 8d 50 01          	lea    0x1(%rax),%rdx
  405076:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40507a:	48 89 10             	mov    %rdx,(%rax)
  40507d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405081:	8b 40 1c             	mov    0x1c(%rax),%eax
  405084:	8d 50 01             	lea    0x1(%rax),%edx
  405087:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40508b:	89 50 1c             	mov    %edx,0x1c(%rax)
  40508e:	c7 45 f8 18 00 00 00 	movl   $0x18,-0x8(%rbp)
  405095:	e9 7b 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  40509a:	80 7d fe 3c          	cmpb   $0x3c,-0x2(%rbp)
  40509e:	75 70                	jne    405110 <LexScanGetToken+0x649>
  4050a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050a4:	48 8b 00             	mov    (%rax),%rax
  4050a7:	48 83 c0 01          	add    $0x1,%rax
  4050ab:	0f b6 00             	movzbl (%rax),%eax
  4050ae:	3c 3d                	cmp    $0x3d,%al
  4050b0:	75 2f                	jne    4050e1 <LexScanGetToken+0x61a>
  4050b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050b6:	48 8b 00             	mov    (%rax),%rax
  4050b9:	48 8d 50 02          	lea    0x2(%rax),%rdx
  4050bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050c1:	48 89 10             	mov    %rdx,(%rax)
  4050c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050c8:	8b 40 1c             	mov    0x1c(%rax),%eax
  4050cb:	8d 50 02             	lea    0x2(%rax),%edx
  4050ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050d2:	89 50 1c             	mov    %edx,0x1c(%rax)
  4050d5:	c7 45 f8 08 00 00 00 	movl   $0x8,-0x8(%rbp)
  4050dc:	e9 34 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4050e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050e5:	48 8b 00             	mov    (%rax),%rax
  4050e8:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4050ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050f0:	48 89 10             	mov    %rdx,(%rax)
  4050f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4050f7:	8b 40 1c             	mov    0x1c(%rax),%eax
  4050fa:	8d 50 01             	lea    0x1(%rax),%edx
  4050fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405101:	89 50 1c             	mov    %edx,0x1c(%rax)
  405104:	c7 45 f8 1a 00 00 00 	movl   $0x1a,-0x8(%rbp)
  40510b:	e9 05 03 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405110:	c7 45 f8 16 00 00 00 	movl   $0x16,-0x8(%rbp)
  405117:	e9 f9 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  40511c:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  405120:	75 2f                	jne    405151 <LexScanGetToken+0x68a>
  405122:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405126:	48 8b 00             	mov    (%rax),%rax
  405129:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40512d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405131:	48 89 10             	mov    %rdx,(%rax)
  405134:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405138:	8b 40 1c             	mov    0x1c(%rax),%eax
  40513b:	8d 50 01             	lea    0x1(%rax),%edx
  40513e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405142:	89 50 1c             	mov    %edx,0x1c(%rax)
  405145:	c7 45 f8 19 00 00 00 	movl   $0x19,-0x8(%rbp)
  40514c:	e9 c4 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405151:	80 7d fe 3e          	cmpb   $0x3e,-0x2(%rbp)
  405155:	75 70                	jne    4051c7 <LexScanGetToken+0x700>
  405157:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40515b:	48 8b 00             	mov    (%rax),%rax
  40515e:	48 83 c0 01          	add    $0x1,%rax
  405162:	0f b6 00             	movzbl (%rax),%eax
  405165:	3c 3d                	cmp    $0x3d,%al
  405167:	75 2f                	jne    405198 <LexScanGetToken+0x6d1>
  405169:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40516d:	48 8b 00             	mov    (%rax),%rax
  405170:	48 8d 50 02          	lea    0x2(%rax),%rdx
  405174:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405178:	48 89 10             	mov    %rdx,(%rax)
  40517b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40517f:	8b 40 1c             	mov    0x1c(%rax),%eax
  405182:	8d 50 02             	lea    0x2(%rax),%edx
  405185:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405189:	89 50 1c             	mov    %edx,0x1c(%rax)
  40518c:	c7 45 f8 09 00 00 00 	movl   $0x9,-0x8(%rbp)
  405193:	e9 7d 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405198:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40519c:	48 8b 00             	mov    (%rax),%rax
  40519f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4051a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051a7:	48 89 10             	mov    %rdx,(%rax)
  4051aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051ae:	8b 40 1c             	mov    0x1c(%rax),%eax
  4051b1:	8d 50 01             	lea    0x1(%rax),%edx
  4051b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051b8:	89 50 1c             	mov    %edx,0x1c(%rax)
  4051bb:	c7 45 f8 1b 00 00 00 	movl   $0x1b,-0x8(%rbp)
  4051c2:	e9 4e 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4051c7:	c7 45 f8 17 00 00 00 	movl   $0x17,-0x8(%rbp)
  4051ce:	e9 42 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4051d3:	c7 45 f8 32 00 00 00 	movl   $0x32,-0x8(%rbp)
  4051da:	e9 36 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4051df:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  4051e3:	75 2f                	jne    405214 <LexScanGetToken+0x74d>
  4051e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051e9:	48 8b 00             	mov    (%rax),%rax
  4051ec:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4051f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051f4:	48 89 10             	mov    %rdx,(%rax)
  4051f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4051fb:	8b 40 1c             	mov    0x1c(%rax),%eax
  4051fe:	8d 50 01             	lea    0x1(%rax),%edx
  405201:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405205:	89 50 1c             	mov    %edx,0x1c(%rax)
  405208:	c7 45 f8 0a 00 00 00 	movl   $0xa,-0x8(%rbp)
  40520f:	e9 01 02 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405214:	80 7d fe 26          	cmpb   $0x26,-0x2(%rbp)
  405218:	75 2f                	jne    405249 <LexScanGetToken+0x782>
  40521a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40521e:	48 8b 00             	mov    (%rax),%rax
  405221:	48 8d 50 01          	lea    0x1(%rax),%rdx
  405225:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405229:	48 89 10             	mov    %rdx,(%rax)
  40522c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405230:	8b 40 1c             	mov    0x1c(%rax),%eax
  405233:	8d 50 01             	lea    0x1(%rax),%edx
  405236:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40523a:	89 50 1c             	mov    %edx,0x1c(%rax)
  40523d:	c7 45 f8 10 00 00 00 	movl   $0x10,-0x8(%rbp)
  405244:	e9 cc 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405249:	c7 45 f8 13 00 00 00 	movl   $0x13,-0x8(%rbp)
  405250:	e9 c0 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405255:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  405259:	75 2f                	jne    40528a <LexScanGetToken+0x7c3>
  40525b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40525f:	48 8b 00             	mov    (%rax),%rax
  405262:	48 8d 50 01          	lea    0x1(%rax),%rdx
  405266:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40526a:	48 89 10             	mov    %rdx,(%rax)
  40526d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405271:	8b 40 1c             	mov    0x1c(%rax),%eax
  405274:	8d 50 01             	lea    0x1(%rax),%edx
  405277:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40527b:	89 50 1c             	mov    %edx,0x1c(%rax)
  40527e:	c7 45 f8 0b 00 00 00 	movl   $0xb,-0x8(%rbp)
  405285:	e9 8b 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  40528a:	80 7d fe 7c          	cmpb   $0x7c,-0x2(%rbp)
  40528e:	75 2f                	jne    4052bf <LexScanGetToken+0x7f8>
  405290:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405294:	48 8b 00             	mov    (%rax),%rax
  405297:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40529b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40529f:	48 89 10             	mov    %rdx,(%rax)
  4052a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4052a6:	8b 40 1c             	mov    0x1c(%rax),%eax
  4052a9:	8d 50 01             	lea    0x1(%rax),%edx
  4052ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4052b0:	89 50 1c             	mov    %edx,0x1c(%rax)
  4052b3:	c7 45 f8 0f 00 00 00 	movl   $0xf,-0x8(%rbp)
  4052ba:	e9 56 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052bf:	c7 45 f8 11 00 00 00 	movl   $0x11,-0x8(%rbp)
  4052c6:	e9 4a 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052cb:	c7 45 f8 34 00 00 00 	movl   $0x34,-0x8(%rbp)
  4052d2:	e9 3e 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052d7:	c7 45 f8 35 00 00 00 	movl   $0x35,-0x8(%rbp)
  4052de:	e9 32 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052e3:	c7 45 f8 27 00 00 00 	movl   $0x27,-0x8(%rbp)
  4052ea:	e9 26 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052ef:	c7 45 f8 28 00 00 00 	movl   $0x28,-0x8(%rbp)
  4052f6:	e9 1a 01 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  4052fb:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  4052ff:	75 2f                	jne    405330 <LexScanGetToken+0x869>
  405301:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405305:	48 8b 00             	mov    (%rax),%rax
  405308:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40530c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405310:	48 89 10             	mov    %rdx,(%rax)
  405313:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405317:	8b 40 1c             	mov    0x1c(%rax),%eax
  40531a:	8d 50 01             	lea    0x1(%rax),%edx
  40531d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405321:	89 50 1c             	mov    %edx,0x1c(%rax)
  405324:	c7 45 f8 15 00 00 00 	movl   $0x15,-0x8(%rbp)
  40532b:	e9 e5 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405330:	c7 45 f8 23 00 00 00 	movl   $0x23,-0x8(%rbp)
  405337:	e9 d9 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  40533c:	80 7d fe 3d          	cmpb   $0x3d,-0x2(%rbp)
  405340:	75 2f                	jne    405371 <LexScanGetToken+0x8aa>
  405342:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405346:	48 8b 00             	mov    (%rax),%rax
  405349:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40534d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405351:	48 89 10             	mov    %rdx,(%rax)
  405354:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405358:	8b 40 1c             	mov    0x1c(%rax),%eax
  40535b:	8d 50 01             	lea    0x1(%rax),%edx
  40535e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  405362:	89 50 1c             	mov    %edx,0x1c(%rax)
  405365:	c7 45 f8 0c 00 00 00 	movl   $0xc,-0x8(%rbp)
  40536c:	e9 a4 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405371:	c7 45 f8 12 00 00 00 	movl   $0x12,-0x8(%rbp)
  405378:	e9 98 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  40537d:	c7 45 f8 24 00 00 00 	movl   $0x24,-0x8(%rbp)
  405384:	e9 8c 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405389:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  405390:	e9 80 00 00 00       	jmpq   405415 <LexScanGetToken+0x94e>
  405395:	80 7d fe 2e          	cmpb   $0x2e,-0x2(%rbp)
  405399:	75 3e                	jne    4053d9 <LexScanGetToken+0x912>
  40539b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40539f:	48 8b 00             	mov    (%rax),%rax
  4053a2:	48 83 c0 01          	add    $0x1,%rax
  4053a6:	0f b6 00             	movzbl (%rax),%eax
  4053a9:	3c 2e                	cmp    $0x2e,%al
  4053ab:	75 2c                	jne    4053d9 <LexScanGetToken+0x912>
  4053ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4053b1:	48 8b 00             	mov    (%rax),%rax
  4053b4:	48 8d 50 02          	lea    0x2(%rax),%rdx
  4053b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4053bc:	48 89 10             	mov    %rdx,(%rax)
  4053bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4053c3:	8b 40 1c             	mov    0x1c(%rax),%eax
  4053c6:	8d 50 02             	lea    0x2(%rax),%edx
  4053c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4053cd:	89 50 1c             	mov    %edx,0x1c(%rax)
  4053d0:	c7 45 f8 33 00 00 00 	movl   $0x33,-0x8(%rbp)
  4053d7:	eb 3c                	jmp    405415 <LexScanGetToken+0x94e>
  4053d9:	c7 45 f8 29 00 00 00 	movl   $0x29,-0x8(%rbp)
  4053e0:	eb 33                	jmp    405415 <LexScanGetToken+0x94e>
  4053e2:	c7 45 f8 0d 00 00 00 	movl   $0xd,-0x8(%rbp)
  4053e9:	eb 2a                	jmp    405415 <LexScanGetToken+0x94e>
  4053eb:	c7 45 f8 0e 00 00 00 	movl   $0xe,-0x8(%rbp)
  4053f2:	eb 21                	jmp    405415 <LexScanGetToken+0x94e>
  4053f4:	0f be 55 ff          	movsbl -0x1(%rbp),%edx
  4053f8:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4053fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405400:	89 d1                	mov    %edx,%ecx
  405402:	ba 5b 79 41 00       	mov    $0x41795b,%edx
  405407:	48 89 c7             	mov    %rax,%rdi
  40540a:	b8 00 00 00 00       	mov    $0x0,%eax
  40540f:	e8 15 b6 00 00       	callq  410a29 <LexFail>
  405414:	90                   	nop
  405415:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405418:	85 c0                	test   %eax,%eax
  40541a:	0f 84 e8 f6 ff ff    	je     404b08 <LexScanGetToken+0x41>
  405420:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405423:	c9                   	leaveq 
  405424:	c3                   	retq   

0000000000405425 <LexTokenSize>:
  405425:	55                   	push   %rbp
  405426:	48 89 e5             	mov    %rsp,%rbp
  405429:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40542c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40542f:	83 e8 2d             	sub    $0x2d,%eax
  405432:	83 f8 04             	cmp    $0x4,%eax
  405435:	77 28                	ja     40545f <LexTokenSize+0x3a>
  405437:	89 c0                	mov    %eax,%eax
  405439:	48 8b 04 c5 68 7c 41 	mov    0x417c68(,%rax,8),%rax
  405440:	00 
  405441:	ff e0                	jmpq   *%rax
  405443:	b8 08 00 00 00       	mov    $0x8,%eax
  405448:	eb 1a                	jmp    405464 <LexTokenSize+0x3f>
  40544a:	b8 08 00 00 00       	mov    $0x8,%eax
  40544f:	eb 13                	jmp    405464 <LexTokenSize+0x3f>
  405451:	b8 01 00 00 00       	mov    $0x1,%eax
  405456:	eb 0c                	jmp    405464 <LexTokenSize+0x3f>
  405458:	b8 08 00 00 00       	mov    $0x8,%eax
  40545d:	eb 05                	jmp    405464 <LexTokenSize+0x3f>
  40545f:	b8 00 00 00 00       	mov    $0x0,%eax
  405464:	5d                   	pop    %rbp
  405465:	c3                   	retq   

0000000000405466 <LexTokenise>:
  405466:	55                   	push   %rbp
  405467:	48 89 e5             	mov    %rsp,%rbp
  40546a:	48 83 ec 60          	sub    $0x60,%rsp
  40546e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  405472:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  405476:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
  40547a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  405481:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  405485:	48 8b 40 08          	mov    0x8(%rax),%rax
  405489:	48 89 c2             	mov    %rax,%rdx
  40548c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  405490:	48 8b 00             	mov    (%rax),%rax
  405493:	48 29 c2             	sub    %rax,%rdx
  405496:	48 89 d0             	mov    %rdx,%rax
  405499:	48 83 c0 04          	add    $0x4,%rax
  40549d:	c1 e0 02             	shl    $0x2,%eax
  4054a0:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4054a3:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4054a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4054aa:	89 d6                	mov    %edx,%esi
  4054ac:	48 89 c7             	mov    %rax,%rdi
  4054af:	e8 23 7a 00 00       	callq  40ced7 <HeapAllocStack>
  4054b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4054b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4054bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4054c0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4054c7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4054cc:	75 1d                	jne    4054eb <LexTokenise+0x85>
  4054ce:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4054d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4054d6:	ba 40 79 41 00       	mov    $0x417940,%edx
  4054db:	48 89 ce             	mov    %rcx,%rsi
  4054de:	48 89 c7             	mov    %rax,%rdi
  4054e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4054e6:	e8 3e b5 00 00       	callq  410a29 <LexFail>
  4054eb:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  4054ef:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4054f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4054f7:	48 89 ce             	mov    %rcx,%rsi
  4054fa:	48 89 c7             	mov    %rax,%rdi
  4054fd:	e8 c5 f5 ff ff       	callq  404ac7 <LexScanGetToken>
  405502:	89 45 dc             	mov    %eax,-0x24(%rbp)
  405505:	8b 45 dc             	mov    -0x24(%rbp),%eax
  405508:	89 c2                	mov    %eax,%edx
  40550a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40550e:	88 10                	mov    %dl,(%rax)
  405510:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  405515:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  405519:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40551c:	89 c2                	mov    %eax,%edx
  40551e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405522:	88 10                	mov    %dl,(%rax)
  405524:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  405529:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40552d:	8b 45 dc             	mov    -0x24(%rbp),%eax
  405530:	89 c7                	mov    %eax,%edi
  405532:	e8 ee fe ff ff       	callq  405425 <LexTokenSize>
  405537:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40553a:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
  40553e:	7e 2c                	jle    40556c <LexTokenise+0x106>
  405540:	8b 45 d8             	mov    -0x28(%rbp),%eax
  405543:	48 63 d0             	movslq %eax,%rdx
  405546:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40554a:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40554e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405552:	48 89 ce             	mov    %rcx,%rsi
  405555:	48 89 c7             	mov    %rax,%rdi
  405558:	e8 23 d9 ff ff       	callq  402e80 <memcpy@plt>
  40555d:	8b 45 d8             	mov    -0x28(%rbp),%eax
  405560:	48 98                	cltq   
  405562:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  405566:	8b 45 d8             	mov    -0x28(%rbp),%eax
  405569:	01 45 fc             	add    %eax,-0x4(%rbp)
  40556c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  405570:	8b 40 1c             	mov    0x1c(%rax),%eax
  405573:	89 45 ec             	mov    %eax,-0x14(%rbp)
  405576:	83 7d dc 5d          	cmpl   $0x5d,-0x24(%rbp)
  40557a:	0f 85 6b ff ff ff    	jne    4054eb <LexTokenise+0x85>
  405580:	8b 55 fc             	mov    -0x4(%rbp),%edx
  405583:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  405587:	89 d6                	mov    %edx,%esi
  405589:	48 89 c7             	mov    %rax,%rdi
  40558c:	e8 53 7b 00 00       	callq  40d0e4 <HeapAllocMem>
  405591:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  405595:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40559a:	75 1d                	jne    4055b9 <LexTokenise+0x153>
  40559c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  4055a0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4055a4:	ba 40 79 41 00       	mov    $0x417940,%edx
  4055a9:	48 89 ce             	mov    %rcx,%rsi
  4055ac:	48 89 c7             	mov    %rax,%rdi
  4055af:	b8 00 00 00 00       	mov    $0x0,%eax
  4055b4:	e8 70 b4 00 00       	callq  410a29 <LexFail>
  4055b9:	8b 45 e8             	mov    -0x18(%rbp),%eax
  4055bc:	3b 45 fc             	cmp    -0x4(%rbp),%eax
  4055bf:	7d 19                	jge    4055da <LexTokenise+0x174>
  4055c1:	b9 e0 7d 41 00       	mov    $0x417de0,%ecx
  4055c6:	ba 3e 02 00 00       	mov    $0x23e,%edx
  4055cb:	be 90 7c 41 00       	mov    $0x417c90,%esi
  4055d0:	bf 96 7c 41 00       	mov    $0x417c96,%edi
  4055d5:	e8 56 d6 ff ff       	callq  402c30 <__assert_fail@plt>
  4055da:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4055dd:	48 63 d0             	movslq %eax,%rdx
  4055e0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4055e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4055e8:	48 89 ce             	mov    %rcx,%rsi
  4055eb:	48 89 c7             	mov    %rax,%rdi
  4055ee:	e8 8d d8 ff ff       	callq  402e80 <memcpy@plt>
  4055f3:	8b 55 e8             	mov    -0x18(%rbp),%edx
  4055f6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4055fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4055fe:	48 89 ce             	mov    %rcx,%rsi
  405601:	48 89 c7             	mov    %rax,%rdi
  405604:	e8 85 79 00 00       	callq  40cf8e <HeapPopStack>
  405609:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
  40560e:	74 09                	je     405619 <LexTokenise+0x1b3>
  405610:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  405614:	8b 55 fc             	mov    -0x4(%rbp),%edx
  405617:	89 10                	mov    %edx,(%rax)
  405619:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40561d:	c9                   	leaveq 
  40561e:	c3                   	retq   

000000000040561f <LexAnalyse>:
  40561f:	55                   	push   %rbp
  405620:	48 89 e5             	mov    %rsp,%rbp
  405623:	48 83 ec 60          	sub    $0x60,%rsp
  405627:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40562b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40562f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  405633:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
  405636:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
  40563a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40563e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  405642:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  405645:	48 63 d0             	movslq %eax,%rdx
  405648:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40564c:	48 01 d0             	add    %rdx,%rax
  40564f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  405653:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
  40565a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40565e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  405662:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  405669:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  405670:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  405677:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40567b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40567f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  405683:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  405687:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40568b:	48 89 ce             	mov    %rcx,%rsi
  40568e:	48 89 c7             	mov    %rax,%rdi
  405691:	e8 d0 fd ff ff       	callq  405466 <LexTokenise>
  405696:	c9                   	leaveq 
  405697:	c3                   	retq   

0000000000405698 <LexInitParser>:
  405698:	55                   	push   %rbp
  405699:	48 89 e5             	mov    %rsp,%rbp
  40569c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4056a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4056a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4056a8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  4056ac:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  4056b0:	44 89 4d d4          	mov    %r9d,-0x2c(%rbp)
  4056b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4056bc:	48 89 10             	mov    %rdx,(%rax)
  4056bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4056c7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4056cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056cf:	66 c7 40 18 01 00    	movw   $0x1,0x18(%rax)
  4056d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4056dd:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4056e1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4056e5:	0f 94 c0             	sete   %al
  4056e8:	0f b6 d0             	movzbl %al,%edx
  4056eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056ef:	89 50 1c             	mov    %edx,0x1c(%rax)
  4056f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4056f6:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  4056fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405701:	66 c7 40 38 00 00    	movw   $0x0,0x38(%rax)
  405707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40570b:	66 c7 40 3a 00 00    	movw   $0x0,0x3a(%rax)
  405711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405715:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
  40571b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40571f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  405723:	48 89 50 30          	mov    %rdx,0x30(%rax)
  405727:	8b 45 10             	mov    0x10(%rbp),%eax
  40572a:	89 c2                	mov    %eax,%edx
  40572c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405730:	88 50 3c             	mov    %dl,0x3c(%rax)
  405733:	90                   	nop
  405734:	5d                   	pop    %rbp
  405735:	c3                   	retq   

0000000000405736 <LexGetRawToken>:
  405736:	55                   	push   %rbp
  405737:	48 89 e5             	mov    %rsp,%rbp
  40573a:	48 81 ec 50 01 00 00 	sub    $0x150,%rsp
  405741:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  405748:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  40574f:	89 95 bc fe ff ff    	mov    %edx,-0x144(%rbp)
  405755:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40575c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  405763:	00 
  405764:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40576b:	48 8b 00             	mov    (%rax),%rax
  40576e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  405772:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405779:	48 8b 40 08          	mov    0x8(%rax),%rax
  40577d:	48 85 c0             	test   %rax,%rax
  405780:	75 2a                	jne    4057ac <LexGetRawToken+0x76>
  405782:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405786:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40578d:	48 85 c0             	test   %rax,%rax
  405790:	74 1a                	je     4057ac <LexGetRawToken+0x76>
  405792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405796:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40579d:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4057a1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4057a8:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4057ac:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4057b3:	48 8b 50 10          	mov    0x10(%rax),%rdx
  4057b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4057bb:	48 8b 80 f8 13 00 00 	mov    0x13f8(%rax),%rax
  4057c2:	48 39 c2             	cmp    %rax,%rdx
  4057c5:	75 47                	jne    40580e <LexGetRawToken+0xd8>
  4057c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4057cb:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4057d2:	48 85 c0             	test   %rax,%rax
  4057d5:	74 51                	je     405828 <LexGetRawToken+0xf2>
  4057d7:	eb 35                	jmp    40580e <LexGetRawToken+0xd8>
  4057d9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4057e0:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  4057e4:	83 c0 01             	add    $0x1,%eax
  4057e7:	89 c2                	mov    %eax,%edx
  4057e9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4057f0:	66 89 50 18          	mov    %dx,0x18(%rax)
  4057f4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4057fb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4057ff:	48 8d 50 02          	lea    0x2(%rax),%rdx
  405803:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40580a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40580e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405815:	48 8b 40 08          	mov    0x8(%rax),%rax
  405819:	0f b6 00             	movzbl (%rax),%eax
  40581c:	0f b6 c0             	movzbl %al,%eax
  40581f:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405822:	83 7d fc 5e          	cmpl   $0x5e,-0x4(%rbp)
  405826:	74 b1                	je     4057d9 <LexGetRawToken+0xa3>
  405828:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40582f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  405833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405837:	48 8b 80 f8 13 00 00 	mov    0x13f8(%rax),%rax
  40583e:	48 39 c2             	cmp    %rax,%rdx
  405841:	0f 85 11 03 00 00    	jne    405b58 <LexGetRawToken+0x422>
  405847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40584b:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  405852:	48 85 c0             	test   %rax,%rax
  405855:	74 0a                	je     405861 <LexGetRawToken+0x12b>
  405857:	83 7d fc 5d          	cmpl   $0x5d,-0x4(%rbp)
  40585b:	0f 85 f7 02 00 00    	jne    405b58 <LexGetRawToken+0x422>
  405861:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405865:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40586c:	48 85 c0             	test   %rax,%rax
  40586f:	74 3a                	je     4058ab <LexGetRawToken+0x175>
  405871:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405878:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40587c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405880:	48 8b 80 28 03 00 00 	mov    0x328(%rax),%rax
  405887:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40588b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40588f:	48 8b 80 28 03 00 00 	mov    0x328(%rax),%rax
  405896:	8b 40 10             	mov    0x10(%rax),%eax
  405899:	48 98                	cltq   
  40589b:	48 83 e8 02          	sub    $0x2,%rax
  40589f:	48 01 c8             	add    %rcx,%rax
  4058a2:	48 39 c2             	cmp    %rax,%rdx
  4058a5:	0f 85 47 01 00 00    	jne    4059f2 <LexGetRawToken+0x2bc>
  4058ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4058af:	8b 80 38 03 00 00    	mov    0x338(%rax),%eax
  4058b5:	85 c0                	test   %eax,%eax
  4058b7:	74 18                	je     4058d1 <LexGetRawToken+0x19b>
  4058b9:	48 c7 45 f0 ae 7c 41 	movq   $0x417cae,-0x10(%rbp)
  4058c0:	00 
  4058c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4058c5:	c7 80 38 03 00 00 00 	movl   $0x0,0x338(%rax)
  4058cc:	00 00 00 
  4058cf:	eb 08                	jmp    4058d9 <LexGetRawToken+0x1a3>
  4058d1:	48 c7 45 f0 b6 7c 41 	movq   $0x417cb6,-0x10(%rbp)
  4058d8:	00 
  4058d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4058dd:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  4058e4:	be 00 01 00 00       	mov    $0x100,%esi
  4058e9:	48 89 c7             	mov    %rax,%rdi
  4058ec:	e8 3e be 00 00       	callq  41172f <PlatformGetLine>
  4058f1:	48 85 c0             	test   %rax,%rax
  4058f4:	75 0a                	jne    405900 <LexGetRawToken+0x1ca>
  4058f6:	b8 5d 00 00 00       	mov    $0x5d,%eax
  4058fb:	e9 2d 04 00 00       	jmpq   405d2d <LexGetRawToken+0x5f7>
  405900:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  405907:	48 89 c7             	mov    %rax,%rdi
  40590a:	e8 f1 d1 ff ff       	callq  402b00 <strlen@plt>
  40590f:	89 c7                	mov    %eax,%edi
  405911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405915:	48 8b b0 f8 13 00 00 	mov    0x13f8(%rax),%rsi
  40591c:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  405920:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  405927:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40592b:	49 89 c8             	mov    %rcx,%r8
  40592e:	89 f9                	mov    %edi,%ecx
  405930:	48 89 c7             	mov    %rax,%rdi
  405933:	e8 e7 fc ff ff       	callq  40561f <LexAnalyse>
  405938:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40593c:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  405943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405947:	b9 01 00 00 00       	mov    $0x1,%ecx
  40594c:	ba 18 00 00 00       	mov    $0x18,%edx
  405951:	48 89 c7             	mov    %rax,%rdi
  405954:	e8 a1 91 00 00       	callq  40eafa <VariableAlloc>
  405959:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40595d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405961:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  405965:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405969:	8b 55 d0             	mov    -0x30(%rbp),%edx
  40596c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405970:	89 50 10             	mov    %edx,0x10(%rax)
  405973:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405977:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40597e:	48 85 c0             	test   %rax,%rax
  405981:	75 2b                	jne    4059ae <LexGetRawToken+0x278>
  405983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405987:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40598b:	48 89 90 20 03 00 00 	mov    %rdx,0x320(%rax)
  405992:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405999:	66 c7 40 18 01 00    	movw   $0x1,0x18(%rax)
  40599f:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4059a6:	66 c7 40 1a 00 00    	movw   $0x0,0x1a(%rax)
  4059ac:	eb 12                	jmp    4059c0 <LexGetRawToken+0x28a>
  4059ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059b2:	48 8b 80 28 03 00 00 	mov    0x328(%rax),%rax
  4059b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4059bd:	48 89 10             	mov    %rdx,(%rax)
  4059c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4059c8:	48 89 90 28 03 00 00 	mov    %rdx,0x328(%rax)
  4059cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4059d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4059d7:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  4059de:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4059e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4059e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4059ed:	e9 52 01 00 00       	jmpq   405b44 <LexGetRawToken+0x40e>
  4059f2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  4059f9:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4059fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a01:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405a08:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a10:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405a17:	8b 40 10             	mov    0x10(%rax),%eax
  405a1a:	48 98                	cltq   
  405a1c:	48 83 e8 02          	sub    $0x2,%rax
  405a20:	48 01 c8             	add    %rcx,%rax
  405a23:	48 39 c2             	cmp    %rax,%rdx
  405a26:	0f 84 93 00 00 00    	je     405abf <LexGetRawToken+0x389>
  405a2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a30:	48 8b 90 20 03 00 00 	mov    0x320(%rax),%rdx
  405a37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a3b:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  405a42:	eb 45                	jmp    405a89 <LexGetRawToken+0x353>
  405a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a48:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405a4f:	48 8b 00             	mov    (%rax),%rax
  405a52:	48 85 c0             	test   %rax,%rax
  405a55:	75 19                	jne    405a70 <LexGetRawToken+0x33a>
  405a57:	b9 f0 7d 41 00       	mov    $0x417df0,%ecx
  405a5c:	ba b9 02 00 00       	mov    $0x2b9,%edx
  405a61:	be 90 7c 41 00       	mov    $0x417c90,%esi
  405a66:	bf c0 7c 41 00       	mov    $0x417cc0,%edi
  405a6b:	e8 c0 d1 ff ff       	callq  402c30 <__assert_fail@plt>
  405a70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a74:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405a7b:	48 8b 10             	mov    (%rax),%rdx
  405a7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a82:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  405a89:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405a90:	48 8b 50 08          	mov    0x8(%rax),%rdx
  405a94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405a98:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405a9f:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405aa7:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405aae:	8b 40 10             	mov    0x10(%rax),%eax
  405ab1:	48 98                	cltq   
  405ab3:	48 83 e8 02          	sub    $0x2,%rax
  405ab7:	48 01 c8             	add    %rcx,%rax
  405aba:	48 39 c2             	cmp    %rax,%rdx
  405abd:	75 85                	jne    405a44 <LexGetRawToken+0x30e>
  405abf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405ac3:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405aca:	48 85 c0             	test   %rax,%rax
  405acd:	75 19                	jne    405ae8 <LexGetRawToken+0x3b2>
  405acf:	b9 f0 7d 41 00       	mov    $0x417df0,%ecx
  405ad4:	ba bc 02 00 00       	mov    $0x2bc,%edx
  405ad9:	be 90 7c 41 00       	mov    $0x417c90,%esi
  405ade:	bf f0 7c 41 00       	mov    $0x417cf0,%edi
  405ae3:	e8 48 d1 ff ff       	callq  402c30 <__assert_fail@plt>
  405ae8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405aec:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405af3:	48 8b 10             	mov    (%rax),%rdx
  405af6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405afa:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  405b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405b05:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405b0c:	48 85 c0             	test   %rax,%rax
  405b0f:	75 19                	jne    405b2a <LexGetRawToken+0x3f4>
  405b11:	b9 f0 7d 41 00       	mov    $0x417df0,%ecx
  405b16:	ba be 02 00 00       	mov    $0x2be,%edx
  405b1b:	be 90 7c 41 00       	mov    $0x417c90,%esi
  405b20:	bf f0 7c 41 00       	mov    $0x417cf0,%edi
  405b25:	e8 06 d1 ff ff       	callq  402c30 <__assert_fail@plt>
  405b2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405b2e:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  405b35:	48 8b 50 08          	mov    0x8(%rax),%rdx
  405b39:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405b40:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405b44:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405b4b:	48 8b 40 08          	mov    0x8(%rax),%rax
  405b4f:	0f b6 00             	movzbl (%rax),%eax
  405b52:	0f b6 c0             	movzbl %al,%eax
  405b55:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405b58:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405b5f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  405b63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405b67:	48 8b 80 f8 13 00 00 	mov    0x13f8(%rax),%rax
  405b6e:	48 39 c2             	cmp    %rax,%rdx
  405b71:	75 0a                	jne    405b7d <LexGetRawToken+0x447>
  405b73:	83 7d fc 5d          	cmpl   $0x5d,-0x4(%rbp)
  405b77:	0f 84 f5 fb ff ff    	je     405772 <LexGetRawToken+0x3c>
  405b7d:	83 7d fc 5e          	cmpl   $0x5e,-0x4(%rbp)
  405b81:	0f 84 eb fb ff ff    	je     405772 <LexGetRawToken+0x3c>
  405b87:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405b8e:	48 8b 40 08          	mov    0x8(%rax),%rax
  405b92:	48 83 c0 01          	add    $0x1,%rax
  405b96:	0f b6 00             	movzbl (%rax),%eax
  405b99:	0f b6 d0             	movzbl %al,%edx
  405b9c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405ba3:	66 89 50 1a          	mov    %dx,0x1a(%rax)
  405ba7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405baa:	89 c7                	mov    %eax,%edi
  405bac:	e8 74 f8 ff ff       	callq  405425 <LexTokenSize>
  405bb1:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  405bb4:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  405bb8:	0f 8e 24 01 00 00    	jle    405ce2 <LexGetRawToken+0x5ac>
  405bbe:	48 83 bd c0 fe ff ff 	cmpq   $0x0,-0x140(%rbp)
  405bc5:	00 
  405bc6:	0f 84 e8 00 00 00    	je     405cb4 <LexGetRawToken+0x57e>
  405bcc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405bcf:	83 f8 2e             	cmp    $0x2e,%eax
  405bd2:	74 41                	je     405c15 <LexGetRawToken+0x4df>
  405bd4:	83 f8 2e             	cmp    $0x2e,%eax
  405bd7:	77 07                	ja     405be0 <LexGetRawToken+0x4aa>
  405bd9:	83 f8 2d             	cmp    $0x2d,%eax
  405bdc:	74 26                	je     405c04 <LexGetRawToken+0x4ce>
  405bde:	eb 64                	jmp    405c44 <LexGetRawToken+0x50e>
  405be0:	83 f8 30             	cmp    $0x30,%eax
  405be3:	74 07                	je     405bec <LexGetRawToken+0x4b6>
  405be5:	83 f8 31             	cmp    $0x31,%eax
  405be8:	74 43                	je     405c2d <LexGetRawToken+0x4f7>
  405bea:	eb 58                	jmp    405c44 <LexGetRawToken+0x50e>
  405bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405bf0:	48 8b 90 48 0e 00 00 	mov    0xe48(%rax),%rdx
  405bf7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405bfb:	48 89 90 b0 03 00 00 	mov    %rdx,0x3b0(%rax)
  405c02:	eb 40                	jmp    405c44 <LexGetRawToken+0x50e>
  405c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c08:	48 c7 80 b0 03 00 00 	movq   $0x0,0x3b0(%rax)
  405c0f:	00 00 00 00 
  405c13:	eb 2f                	jmp    405c44 <LexGetRawToken+0x50e>
  405c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c19:	48 8d 90 88 0b 00 00 	lea    0xb88(%rax),%rdx
  405c20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c24:	48 89 90 b0 03 00 00 	mov    %rdx,0x3b0(%rax)
  405c2b:	eb 17                	jmp    405c44 <LexGetRawToken+0x50e>
  405c2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c31:	48 8d 90 48 0b 00 00 	lea    0xb48(%rax),%rdx
  405c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c3c:	48 89 90 b0 03 00 00 	mov    %rdx,0x3b0(%rax)
  405c43:	90                   	nop
  405c44:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  405c47:	48 63 d0             	movslq %eax,%rdx
  405c4a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405c51:	48 8b 40 08          	mov    0x8(%rax),%rax
  405c55:	48 8d 48 02          	lea    0x2(%rax),%rcx
  405c59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c5d:	48 8b 80 b8 03 00 00 	mov    0x3b8(%rax),%rax
  405c64:	48 89 ce             	mov    %rcx,%rsi
  405c67:	48 89 c7             	mov    %rax,%rdi
  405c6a:	e8 11 d2 ff ff       	callq  402e80 <memcpy@plt>
  405c6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c73:	c6 80 c8 03 00 00 00 	movb   $0x0,0x3c8(%rax)
  405c7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c7e:	c6 80 c9 03 00 00 00 	movb   $0x0,0x3c9(%rax)
  405c85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c89:	c6 80 cb 03 00 00 00 	movb   $0x0,0x3cb(%rax)
  405c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405c94:	48 c7 80 c0 03 00 00 	movq   $0x0,0x3c0(%rax)
  405c9b:	00 00 00 00 
  405c9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405ca3:	48 8d 90 b0 03 00 00 	lea    0x3b0(%rax),%rdx
  405caa:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  405cb1:	48 89 10             	mov    %rdx,(%rax)
  405cb4:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
  405cbb:	74 4e                	je     405d0b <LexGetRawToken+0x5d5>
  405cbd:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405cc4:	48 8b 40 08          	mov    0x8(%rax),%rax
  405cc8:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  405ccb:	48 63 d2             	movslq %edx,%rdx
  405cce:	48 83 c2 02          	add    $0x2,%rdx
  405cd2:	48 01 c2             	add    %rax,%rdx
  405cd5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405cdc:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405ce0:	eb 29                	jmp    405d0b <LexGetRawToken+0x5d5>
  405ce2:	83 bd bc fe ff ff 00 	cmpl   $0x0,-0x144(%rbp)
  405ce9:	74 20                	je     405d0b <LexGetRawToken+0x5d5>
  405ceb:	83 7d fc 5d          	cmpl   $0x5d,-0x4(%rbp)
  405cef:	74 1a                	je     405d0b <LexGetRawToken+0x5d5>
  405cf1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405cf8:	48 8b 40 08          	mov    0x8(%rax),%rax
  405cfc:	48 8d 50 02          	lea    0x2(%rax),%rdx
  405d00:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  405d07:	48 89 50 08          	mov    %rdx,0x8(%rax)
  405d0b:	83 7d fc 5f          	cmpl   $0x5f,-0x4(%rbp)
  405d0f:	76 19                	jbe    405d2a <LexGetRawToken+0x5f4>
  405d11:	b9 f0 7d 41 00       	mov    $0x417df0,%ecx
  405d16:	ba ed 02 00 00       	mov    $0x2ed,%edx
  405d1b:	be 90 7c 41 00       	mov    $0x417c90,%esi
  405d20:	bf 18 7d 41 00       	mov    $0x417d18,%edi
  405d25:	e8 06 cf ff ff       	callq  402c30 <__assert_fail@plt>
  405d2a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405d2d:	c9                   	leaveq 
  405d2e:	c3                   	retq   

0000000000405d2f <LexHashIncPos>:
  405d2f:	55                   	push   %rbp
  405d30:	48 89 e5             	mov    %rsp,%rbp
  405d33:	48 83 ec 10          	sub    $0x10,%rsp
  405d37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  405d3b:	89 75 f4             	mov    %esi,-0xc(%rbp)
  405d3e:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  405d42:	75 16                	jne    405d5a <LexHashIncPos+0x2b>
  405d44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405d48:	ba 01 00 00 00       	mov    $0x1,%edx
  405d4d:	be 00 00 00 00       	mov    $0x0,%esi
  405d52:	48 89 c7             	mov    %rax,%rdi
  405d55:	e8 dc f9 ff ff       	callq  405736 <LexGetRawToken>
  405d5a:	90                   	nop
  405d5b:	c9                   	leaveq 
  405d5c:	c3                   	retq   

0000000000405d5d <LexHashIfdef>:
  405d5d:	55                   	push   %rbp
  405d5e:	48 89 e5             	mov    %rsp,%rbp
  405d61:	48 83 ec 30          	sub    $0x30,%rsp
  405d65:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405d69:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  405d6c:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  405d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405d74:	ba 01 00 00 00       	mov    $0x1,%edx
  405d79:	48 89 ce             	mov    %rcx,%rsi
  405d7c:	48 89 c7             	mov    %rax,%rdi
  405d7f:	e8 b2 f9 ff ff       	callq  405736 <LexGetRawToken>
  405d84:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405d87:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  405d8b:	74 16                	je     405da3 <LexHashIfdef+0x46>
  405d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405d91:	be 4a 7d 41 00       	mov    $0x417d4a,%esi
  405d96:	48 89 c7             	mov    %rax,%rdi
  405d99:	b8 00 00 00 00       	mov    $0x0,%eax
  405d9e:	e8 3b a9 00 00       	callq  4106de <ProgramFail>
  405da3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405da7:	48 8b 40 08          	mov    0x8(%rax),%rax
  405dab:	48 8b 00             	mov    (%rax),%rax
  405dae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  405db2:	48 8b 12             	mov    (%rdx),%rdx
  405db5:	48 89 d7             	mov    %rdx,%rdi
  405db8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  405dbc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  405dc2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  405dc8:	b9 00 00 00 00       	mov    $0x0,%ecx
  405dcd:	48 89 c6             	mov    %rax,%rsi
  405dd0:	e8 01 db ff ff       	callq  4038d6 <TableGet>
  405dd5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  405dd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405ddc:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  405de0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405de4:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405de8:	66 39 c2             	cmp    %ax,%dx
  405deb:	75 2d                	jne    405e1a <LexHashIfdef+0xbd>
  405ded:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  405df1:	74 06                	je     405df9 <LexHashIfdef+0x9c>
  405df3:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  405df7:	74 0c                	je     405e05 <LexHashIfdef+0xa8>
  405df9:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  405dfd:	75 1b                	jne    405e1a <LexHashIfdef+0xbd>
  405dff:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  405e03:	74 15                	je     405e1a <LexHashIfdef+0xbd>
  405e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405e09:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
  405e0d:	83 c0 01             	add    $0x1,%eax
  405e10:	89 c2                	mov    %eax,%edx
  405e12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405e16:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  405e1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405e1e:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405e22:	83 c0 01             	add    $0x1,%eax
  405e25:	89 c2                	mov    %eax,%edx
  405e27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405e2b:	66 89 50 38          	mov    %dx,0x38(%rax)
  405e2f:	90                   	nop
  405e30:	c9                   	leaveq 
  405e31:	c3                   	retq   

0000000000405e32 <LexHashIf>:
  405e32:	55                   	push   %rbp
  405e33:	48 89 e5             	mov    %rsp,%rbp
  405e36:	48 83 ec 70          	sub    $0x70,%rsp
  405e3a:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  405e3e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  405e45:	00 
  405e46:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  405e4a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405e4e:	ba 01 00 00 00       	mov    $0x1,%edx
  405e53:	48 89 ce             	mov    %rcx,%rsi
  405e56:	48 89 c7             	mov    %rax,%rdi
  405e59:	e8 d8 f8 ff ff       	callq  405736 <LexGetRawToken>
  405e5e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405e61:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  405e65:	0f 85 b1 00 00 00    	jne    405f1c <LexHashIf+0xea>
  405e6b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405e6f:	48 8b 40 08          	mov    0x8(%rax),%rax
  405e73:	48 8b 00             	mov    (%rax),%rax
  405e76:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  405e7a:	48 8b 12             	mov    (%rdx),%rdx
  405e7d:	48 89 d7             	mov    %rdx,%rdi
  405e80:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  405e84:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  405e8a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  405e90:	b9 00 00 00 00       	mov    $0x0,%ecx
  405e95:	48 89 c6             	mov    %rax,%rsi
  405e98:	e8 39 da ff ff       	callq  4038d6 <TableGet>
  405e9d:	85 c0                	test   %eax,%eax
  405e9f:	75 21                	jne    405ec2 <LexHashIf+0x90>
  405ea1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405ea5:	48 8b 40 08          	mov    0x8(%rax),%rax
  405ea9:	48 8b 10             	mov    (%rax),%rdx
  405eac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405eb0:	be 5e 7d 41 00       	mov    $0x417d5e,%esi
  405eb5:	48 89 c7             	mov    %rax,%rdi
  405eb8:	b8 00 00 00 00       	mov    $0x0,%eax
  405ebd:	e8 1c a8 00 00       	callq  4106de <ProgramFail>
  405ec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405ec6:	48 8b 00             	mov    (%rax),%rax
  405ec9:	8b 00                	mov    (%rax),%eax
  405ecb:	83 f8 0a             	cmp    $0xa,%eax
  405ece:	74 16                	je     405ee6 <LexHashIf+0xb4>
  405ed0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405ed4:	be 70 7d 41 00       	mov    $0x417d70,%esi
  405ed9:	48 89 c7             	mov    %rax,%rdi
  405edc:	b8 00 00 00 00       	mov    $0x0,%eax
  405ee1:	e8 f8 a7 00 00       	callq  4106de <ProgramFail>
  405ee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  405eea:	48 8b 40 08          	mov    0x8(%rax),%rax
  405eee:	48 8d 50 10          	lea    0x10(%rax),%rdx
  405ef2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  405ef6:	48 89 d6             	mov    %rdx,%rsi
  405ef9:	48 89 c7             	mov    %rax,%rdi
  405efc:	e8 f8 1b 00 00       	callq  407af9 <ParserCopy>
  405f01:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
  405f05:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  405f09:	ba 01 00 00 00       	mov    $0x1,%edx
  405f0e:	48 89 ce             	mov    %rcx,%rsi
  405f11:	48 89 c7             	mov    %rax,%rdi
  405f14:	e8 1d f8 ff ff       	callq  405736 <LexGetRawToken>
  405f19:	89 45 fc             	mov    %eax,-0x4(%rbp)
  405f1c:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)
  405f20:	74 1c                	je     405f3e <LexHashIf+0x10c>
  405f22:	83 7d fc 2e          	cmpl   $0x2e,-0x4(%rbp)
  405f26:	74 16                	je     405f3e <LexHashIf+0x10c>
  405f28:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f2c:	be 70 7d 41 00       	mov    $0x417d70,%esi
  405f31:	48 89 c7             	mov    %rax,%rdi
  405f34:	b8 00 00 00 00       	mov    $0x0,%eax
  405f39:	e8 a0 a7 00 00       	callq  4106de <ProgramFail>
  405f3e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f42:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  405f46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f4a:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405f4e:	66 39 c2             	cmp    %ax,%dx
  405f51:	75 24                	jne    405f77 <LexHashIf+0x145>
  405f53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  405f57:	48 8b 40 08          	mov    0x8(%rax),%rax
  405f5b:	0f b6 00             	movzbl (%rax),%eax
  405f5e:	84 c0                	test   %al,%al
  405f60:	74 15                	je     405f77 <LexHashIf+0x145>
  405f62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f66:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
  405f6a:	83 c0 01             	add    $0x1,%eax
  405f6d:	89 c2                	mov    %eax,%edx
  405f6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f73:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  405f77:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f7b:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405f7f:	83 c0 01             	add    $0x1,%eax
  405f82:	89 c2                	mov    %eax,%edx
  405f84:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  405f88:	66 89 50 38          	mov    %dx,0x38(%rax)
  405f8c:	90                   	nop
  405f8d:	c9                   	leaveq 
  405f8e:	c3                   	retq   

0000000000405f8f <LexHashElse>:
  405f8f:	55                   	push   %rbp
  405f90:	48 89 e5             	mov    %rsp,%rbp
  405f93:	48 83 ec 10          	sub    $0x10,%rsp
  405f97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  405f9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405f9f:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
  405fa3:	0f bf d0             	movswl %ax,%edx
  405fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405faa:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405fae:	98                   	cwtl   
  405faf:	83 e8 01             	sub    $0x1,%eax
  405fb2:	39 c2                	cmp    %eax,%edx
  405fb4:	75 17                	jne    405fcd <LexHashElse+0x3e>
  405fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405fba:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
  405fbe:	83 c0 01             	add    $0x1,%eax
  405fc1:	89 c2                	mov    %eax,%edx
  405fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405fc7:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  405fcb:	eb 4d                	jmp    40601a <LexHashElse+0x8b>
  405fcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405fd1:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  405fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405fd9:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405fdd:	66 39 c2             	cmp    %ax,%dx
  405fe0:	75 38                	jne    40601a <LexHashElse+0x8b>
  405fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405fe6:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  405fea:	66 85 c0             	test   %ax,%ax
  405fed:	75 16                	jne    406005 <LexHashElse+0x76>
  405fef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405ff3:	be 7f 7d 41 00       	mov    $0x417d7f,%esi
  405ff8:	48 89 c7             	mov    %rax,%rdi
  405ffb:	b8 00 00 00 00       	mov    $0x0,%eax
  406000:	e8 d9 a6 00 00       	callq  4106de <ProgramFail>
  406005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406009:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
  40600d:	83 e8 01             	sub    $0x1,%eax
  406010:	89 c2                	mov    %eax,%edx
  406012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406016:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  40601a:	90                   	nop
  40601b:	c9                   	leaveq 
  40601c:	c3                   	retq   

000000000040601d <LexHashEndif>:
  40601d:	55                   	push   %rbp
  40601e:	48 89 e5             	mov    %rsp,%rbp
  406021:	48 83 ec 10          	sub    $0x10,%rsp
  406025:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40602d:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  406031:	66 85 c0             	test   %ax,%ax
  406034:	75 16                	jne    40604c <LexHashEndif+0x2f>
  406036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40603a:	be 91 7d 41 00       	mov    $0x417d91,%esi
  40603f:	48 89 c7             	mov    %rax,%rdi
  406042:	b8 00 00 00 00       	mov    $0x0,%eax
  406047:	e8 92 a6 00 00       	callq  4106de <ProgramFail>
  40604c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406050:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  406054:	83 e8 01             	sub    $0x1,%eax
  406057:	89 c2                	mov    %eax,%edx
  406059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40605d:	66 89 50 38          	mov    %dx,0x38(%rax)
  406061:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406065:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  406069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40606d:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  406071:	66 39 c2             	cmp    %ax,%dx
  406074:	7e 10                	jle    406086 <LexHashEndif+0x69>
  406076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40607a:	0f b7 50 38          	movzwl 0x38(%rax),%edx
  40607e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406082:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  406086:	90                   	nop
  406087:	c9                   	leaveq 
  406088:	c3                   	retq   

0000000000406089 <LexGetToken>:
  406089:	55                   	push   %rbp
  40608a:	48 89 e5             	mov    %rsp,%rbp
  40608d:	48 83 ec 30          	sub    $0x30,%rsp
  406091:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406095:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  406099:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40609c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4060a3:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4060a6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4060aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060ae:	48 89 ce             	mov    %rcx,%rsi
  4060b1:	48 89 c7             	mov    %rax,%rdi
  4060b4:	e8 7d f6 ff ff       	callq  405736 <LexGetRawToken>
  4060b9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4060bc:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4060bf:	83 e8 55             	sub    $0x55,%eax
  4060c2:	83 f8 04             	cmp    $0x4,%eax
  4060c5:	0f 87 b4 00 00 00    	ja     40617f <LexGetToken+0xf6>
  4060cb:	89 c0                	mov    %eax,%eax
  4060cd:	48 8b 04 c5 a8 7d 41 	mov    0x417da8(,%rax,8),%rax
  4060d4:	00 
  4060d5:	ff e0                	jmpq   *%rax
  4060d7:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4060da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060de:	89 d6                	mov    %edx,%esi
  4060e0:	48 89 c7             	mov    %rax,%rdi
  4060e3:	e8 47 fc ff ff       	callq  405d2f <LexHashIncPos>
  4060e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4060ec:	be 00 00 00 00       	mov    $0x0,%esi
  4060f1:	48 89 c7             	mov    %rax,%rdi
  4060f4:	e8 64 fc ff ff       	callq  405d5d <LexHashIfdef>
  4060f9:	e9 89 00 00 00       	jmpq   406187 <LexGetToken+0xfe>
  4060fe:	8b 55 dc             	mov    -0x24(%rbp),%edx
  406101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406105:	89 d6                	mov    %edx,%esi
  406107:	48 89 c7             	mov    %rax,%rdi
  40610a:	e8 20 fc ff ff       	callq  405d2f <LexHashIncPos>
  40610f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406113:	be 01 00 00 00       	mov    $0x1,%esi
  406118:	48 89 c7             	mov    %rax,%rdi
  40611b:	e8 3d fc ff ff       	callq  405d5d <LexHashIfdef>
  406120:	eb 65                	jmp    406187 <LexGetToken+0xfe>
  406122:	8b 55 dc             	mov    -0x24(%rbp),%edx
  406125:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406129:	89 d6                	mov    %edx,%esi
  40612b:	48 89 c7             	mov    %rax,%rdi
  40612e:	e8 fc fb ff ff       	callq  405d2f <LexHashIncPos>
  406133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406137:	48 89 c7             	mov    %rax,%rdi
  40613a:	e8 f3 fc ff ff       	callq  405e32 <LexHashIf>
  40613f:	eb 46                	jmp    406187 <LexGetToken+0xfe>
  406141:	8b 55 dc             	mov    -0x24(%rbp),%edx
  406144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406148:	89 d6                	mov    %edx,%esi
  40614a:	48 89 c7             	mov    %rax,%rdi
  40614d:	e8 dd fb ff ff       	callq  405d2f <LexHashIncPos>
  406152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406156:	48 89 c7             	mov    %rax,%rdi
  406159:	e8 31 fe ff ff       	callq  405f8f <LexHashElse>
  40615e:	eb 27                	jmp    406187 <LexGetToken+0xfe>
  406160:	8b 55 dc             	mov    -0x24(%rbp),%edx
  406163:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406167:	89 d6                	mov    %edx,%esi
  406169:	48 89 c7             	mov    %rax,%rdi
  40616c:	e8 be fb ff ff       	callq  405d2f <LexHashIncPos>
  406171:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406175:	48 89 c7             	mov    %rax,%rdi
  406178:	e8 a0 fe ff ff       	callq  40601d <LexHashEndif>
  40617d:	eb 08                	jmp    406187 <LexGetToken+0xfe>
  40617f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  406186:	90                   	nop
  406187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40618b:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  40618f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406193:	0f b7 40 38          	movzwl 0x38(%rax),%eax
  406197:	66 39 c2             	cmp    %ax,%dx
  40619a:	7d 06                	jge    4061a2 <LexGetToken+0x119>
  40619c:	83 7d f8 5d          	cmpl   $0x5d,-0x8(%rbp)
  4061a0:	75 06                	jne    4061a8 <LexGetToken+0x11f>
  4061a2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4061a6:	74 07                	je     4061af <LexGetToken+0x126>
  4061a8:	b8 01 00 00 00       	mov    $0x1,%eax
  4061ad:	eb 05                	jmp    4061b4 <LexGetToken+0x12b>
  4061af:	b8 00 00 00 00       	mov    $0x0,%eax
  4061b4:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4061b7:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  4061bb:	75 1c                	jne    4061d9 <LexGetToken+0x150>
  4061bd:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4061c1:	74 16                	je     4061d9 <LexGetToken+0x150>
  4061c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4061c7:	ba 01 00 00 00       	mov    $0x1,%edx
  4061cc:	be 00 00 00 00       	mov    $0x0,%esi
  4061d1:	48 89 c7             	mov    %rax,%rdi
  4061d4:	e8 5d f5 ff ff       	callq  405736 <LexGetRawToken>
  4061d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4061dd:	0f 85 b9 fe ff ff    	jne    40609c <LexGetToken+0x13>
  4061e3:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4061e6:	c9                   	leaveq 
  4061e7:	c3                   	retq   

00000000004061e8 <LexRawPeekToken>:
  4061e8:	55                   	push   %rbp
  4061e9:	48 89 e5             	mov    %rsp,%rbp
  4061ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4061f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4061f4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4061f8:	0f b6 00             	movzbl (%rax),%eax
  4061fb:	0f b6 c0             	movzbl %al,%eax
  4061fe:	5d                   	pop    %rbp
  4061ff:	c3                   	retq   

0000000000406200 <LexToEndOfLine>:
  406200:	55                   	push   %rbp
  406201:	48 89 e5             	mov    %rsp,%rbp
  406204:	48 83 ec 20          	sub    $0x20,%rsp
  406208:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40620c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406210:	48 8b 40 08          	mov    0x8(%rax),%rax
  406214:	0f b6 00             	movzbl (%rax),%eax
  406217:	0f b6 c0             	movzbl %al,%eax
  40621a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40621d:	83 7d fc 5e          	cmpl   $0x5e,-0x4(%rbp)
  406221:	74 1e                	je     406241 <LexToEndOfLine+0x41>
  406223:	83 7d fc 5d          	cmpl   $0x5d,-0x4(%rbp)
  406227:	74 18                	je     406241 <LexToEndOfLine+0x41>
  406229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40622d:	ba 01 00 00 00       	mov    $0x1,%edx
  406232:	be 00 00 00 00       	mov    $0x0,%esi
  406237:	48 89 c7             	mov    %rax,%rdi
  40623a:	e8 f7 f4 ff ff       	callq  405736 <LexGetRawToken>
  40623f:	eb cb                	jmp    40620c <LexToEndOfLine+0xc>
  406241:	90                   	nop
  406242:	c9                   	leaveq 
  406243:	c3                   	retq   

0000000000406244 <LexCopyTokens>:
  406244:	55                   	push   %rbp
  406245:	48 89 e5             	mov    %rsp,%rbp
  406248:	48 83 ec 50          	sub    $0x50,%rsp
  40624c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  406250:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  406254:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40625b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40625f:	48 8b 40 08          	mov    0x8(%rax),%rax
  406263:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  406267:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40626b:	48 8b 00             	mov    (%rax),%rax
  40626e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  406272:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406276:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40627d:	48 85 c0             	test   %rax,%rax
  406280:	75 5d                	jne    4062df <LexCopyTokens+0x9b>
  406282:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  406286:	48 8b 40 08          	mov    0x8(%rax),%rax
  40628a:	48 89 c2             	mov    %rax,%rdx
  40628d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  406291:	48 8b 40 08          	mov    0x8(%rax),%rax
  406295:	48 29 c2             	sub    %rax,%rdx
  406298:	48 89 d0             	mov    %rdx,%rax
  40629b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40629e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4062a1:	8d 50 02             	lea    0x2(%rax),%edx
  4062a4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4062a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4062ac:	b9 01 00 00 00       	mov    $0x1,%ecx
  4062b1:	48 89 c7             	mov    %rax,%rdi
  4062b4:	e8 41 88 00 00       	callq  40eafa <VariableAlloc>
  4062b9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4062bd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4062c0:	48 63 d0             	movslq %eax,%rdx
  4062c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4062c7:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4062cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4062cf:	48 89 ce             	mov    %rcx,%rsi
  4062d2:	48 89 c7             	mov    %rax,%rdi
  4062d5:	e8 a6 cb ff ff       	callq  402e80 <memcpy@plt>
  4062da:	e9 68 03 00 00       	jmpq   406647 <LexCopyTokens+0x403>
  4062df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4062e3:	48 8b 90 20 03 00 00 	mov    0x320(%rax),%rdx
  4062ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4062ee:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  4062f5:	eb 19                	jmp    406310 <LexCopyTokens+0xcc>
  4062f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4062fb:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  406302:	48 8b 10             	mov    (%rax),%rdx
  406305:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406309:	48 89 90 30 03 00 00 	mov    %rdx,0x330(%rax)
  406310:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406314:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40631b:	48 85 c0             	test   %rax,%rax
  40631e:	74 3d                	je     40635d <LexCopyTokens+0x119>
  406320:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406324:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40632b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40632f:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  406333:	72 c2                	jb     4062f7 <LexCopyTokens+0xb3>
  406335:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406339:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  406340:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406344:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406348:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40634f:	8b 40 10             	mov    0x10(%rax),%eax
  406352:	48 98                	cltq   
  406354:	48 01 d0             	add    %rdx,%rax
  406357:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  40635b:	73 9a                	jae    4062f7 <LexCopyTokens+0xb3>
  40635d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  406361:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406365:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  406369:	48 8b 40 08          	mov    0x8(%rax),%rax
  40636d:	48 39 c2             	cmp    %rax,%rdx
  406370:	0f 82 8c 00 00 00    	jb     406402 <LexCopyTokens+0x1be>
  406376:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40637a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40637e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406382:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  406389:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40638d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406391:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  406398:	8b 40 10             	mov    0x10(%rax),%eax
  40639b:	48 98                	cltq   
  40639d:	48 01 c8             	add    %rcx,%rax
  4063a0:	48 39 c2             	cmp    %rax,%rdx
  4063a3:	73 5d                	jae    406402 <LexCopyTokens+0x1be>
  4063a5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4063a9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4063ad:	48 89 c2             	mov    %rax,%rdx
  4063b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4063b4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4063b8:	48 29 c2             	sub    %rax,%rdx
  4063bb:	48 89 d0             	mov    %rdx,%rax
  4063be:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4063c1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4063c4:	8d 50 02             	lea    0x2(%rax),%edx
  4063c7:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4063cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4063cf:	b9 01 00 00 00       	mov    $0x1,%ecx
  4063d4:	48 89 c7             	mov    %rax,%rdi
  4063d7:	e8 1e 87 00 00       	callq  40eafa <VariableAlloc>
  4063dc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4063e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4063e3:	48 63 d0             	movslq %eax,%rdx
  4063e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4063ea:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4063ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4063f2:	48 89 ce             	mov    %rcx,%rsi
  4063f5:	48 89 c7             	mov    %rax,%rdi
  4063f8:	e8 83 ca ff ff       	callq  402e80 <memcpy@plt>
  4063fd:	e9 45 02 00 00       	jmpq   406647 <LexCopyTokens+0x403>
  406402:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406406:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40640d:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406411:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406415:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40641c:	8b 40 10             	mov    0x10(%rax),%eax
  40641f:	48 98                	cltq   
  406421:	48 83 e8 02          	sub    $0x2,%rax
  406425:	48 01 d0             	add    %rdx,%rax
  406428:	48 89 c2             	mov    %rax,%rdx
  40642b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40642f:	48 29 c2             	sub    %rax,%rdx
  406432:	48 89 d0             	mov    %rdx,%rax
  406435:	89 45 fc             	mov    %eax,-0x4(%rbp)
  406438:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40643c:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  406443:	48 8b 00             	mov    (%rax),%rax
  406446:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40644a:	eb 18                	jmp    406464 <LexCopyTokens+0x220>
  40644c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406450:	8b 40 10             	mov    0x10(%rax),%eax
  406453:	83 e8 02             	sub    $0x2,%eax
  406456:	01 45 fc             	add    %eax,-0x4(%rbp)
  406459:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40645d:	48 8b 00             	mov    (%rax),%rax
  406460:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  406464:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  406469:	74 36                	je     4064a1 <LexCopyTokens+0x25d>
  40646b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40646f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406473:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406477:	48 8b 40 08          	mov    0x8(%rax),%rax
  40647b:	48 39 c2             	cmp    %rax,%rdx
  40647e:	72 cc                	jb     40644c <LexCopyTokens+0x208>
  406480:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  406484:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406488:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40648c:	48 8b 48 08          	mov    0x8(%rax),%rcx
  406490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406494:	8b 40 10             	mov    0x10(%rax),%eax
  406497:	48 98                	cltq   
  406499:	48 01 c8             	add    %rcx,%rax
  40649c:	48 39 c2             	cmp    %rax,%rdx
  40649f:	73 ab                	jae    40644c <LexCopyTokens+0x208>
  4064a1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4064a6:	75 19                	jne    4064c1 <LexCopyTokens+0x27d>
  4064a8:	b9 00 7e 41 00       	mov    $0x417e00,%ecx
  4064ad:	ba cc 03 00 00       	mov    $0x3cc,%edx
  4064b2:	be 90 7c 41 00       	mov    $0x417c90,%esi
  4064b7:	bf d0 7d 41 00       	mov    $0x417dd0,%edi
  4064bc:	e8 6f c7 ff ff       	callq  402c30 <__assert_fail@plt>
  4064c1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4064c5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4064c9:	48 89 c2             	mov    %rax,%rdx
  4064cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4064d0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4064d4:	48 29 c2             	sub    %rax,%rdx
  4064d7:	48 89 d0             	mov    %rdx,%rax
  4064da:	89 c2                	mov    %eax,%edx
  4064dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4064df:	01 d0                	add    %edx,%eax
  4064e1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4064e4:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4064e7:	8d 50 02             	lea    0x2(%rax),%edx
  4064ea:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4064ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4064f2:	b9 01 00 00 00       	mov    $0x1,%ecx
  4064f7:	48 89 c7             	mov    %rax,%rdi
  4064fa:	e8 fb 85 00 00       	callq  40eafa <VariableAlloc>
  4064ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  406503:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406507:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40650e:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406512:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406516:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40651d:	8b 40 10             	mov    0x10(%rax),%eax
  406520:	48 98                	cltq   
  406522:	48 83 e8 02          	sub    $0x2,%rax
  406526:	48 01 d0             	add    %rdx,%rax
  406529:	48 89 c2             	mov    %rax,%rdx
  40652c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406530:	48 29 c2             	sub    %rax,%rdx
  406533:	48 89 d0             	mov    %rdx,%rax
  406536:	89 45 cc             	mov    %eax,-0x34(%rbp)
  406539:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40653c:	48 63 d0             	movslq %eax,%rdx
  40653f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  406543:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406547:	48 89 ce             	mov    %rcx,%rsi
  40654a:	48 89 c7             	mov    %rax,%rdi
  40654d:	e8 2e c9 ff ff       	callq  402e80 <memcpy@plt>
  406552:	8b 45 cc             	mov    -0x34(%rbp),%eax
  406555:	48 63 d0             	movslq %eax,%rdx
  406558:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40655c:	48 01 d0             	add    %rdx,%rax
  40655f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  406563:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406567:	48 8b 80 30 03 00 00 	mov    0x330(%rax),%rax
  40656e:	48 8b 00             	mov    (%rax),%rax
  406571:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  406575:	eb 40                	jmp    4065b7 <LexCopyTokens+0x373>
  406577:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40657b:	8b 40 10             	mov    0x10(%rax),%eax
  40657e:	83 e8 02             	sub    $0x2,%eax
  406581:	48 63 d0             	movslq %eax,%rdx
  406584:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406588:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40658c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406590:	48 89 ce             	mov    %rcx,%rsi
  406593:	48 89 c7             	mov    %rax,%rdi
  406596:	e8 e5 c8 ff ff       	callq  402e80 <memcpy@plt>
  40659b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40659f:	8b 40 10             	mov    0x10(%rax),%eax
  4065a2:	48 98                	cltq   
  4065a4:	48 83 e8 02          	sub    $0x2,%rax
  4065a8:	48 01 45 e8          	add    %rax,-0x18(%rbp)
  4065ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4065b0:	48 8b 00             	mov    (%rax),%rax
  4065b3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4065b7:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4065bc:	74 36                	je     4065f4 <LexCopyTokens+0x3b0>
  4065be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4065c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4065c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4065ca:	48 8b 40 08          	mov    0x8(%rax),%rax
  4065ce:	48 39 c2             	cmp    %rax,%rdx
  4065d1:	72 a4                	jb     406577 <LexCopyTokens+0x333>
  4065d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  4065d7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4065db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4065df:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4065e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4065e7:	8b 40 10             	mov    0x10(%rax),%eax
  4065ea:	48 98                	cltq   
  4065ec:	48 01 c8             	add    %rcx,%rax
  4065ef:	48 39 c2             	cmp    %rax,%rdx
  4065f2:	73 83                	jae    406577 <LexCopyTokens+0x333>
  4065f4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4065f9:	75 19                	jne    406614 <LexCopyTokens+0x3d0>
  4065fb:	b9 00 7e 41 00       	mov    $0x417e00,%ecx
  406600:	ba d8 03 00 00       	mov    $0x3d8,%edx
  406605:	be 90 7c 41 00       	mov    $0x417c90,%esi
  40660a:	bf d0 7d 41 00       	mov    $0x417dd0,%edi
  40660f:	e8 1c c6 ff ff       	callq  402c30 <__assert_fail@plt>
  406614:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  406618:	48 8b 40 08          	mov    0x8(%rax),%rax
  40661c:	48 89 c2             	mov    %rax,%rdx
  40661f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406623:	48 8b 40 08          	mov    0x8(%rax),%rax
  406627:	48 29 c2             	sub    %rax,%rdx
  40662a:	48 89 d0             	mov    %rdx,%rax
  40662d:	48 89 c2             	mov    %rax,%rdx
  406630:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406634:	48 8b 48 08          	mov    0x8(%rax),%rcx
  406638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40663c:	48 89 ce             	mov    %rcx,%rsi
  40663f:	48 89 c7             	mov    %rax,%rdi
  406642:	e8 39 c8 ff ff       	callq  402e80 <memcpy@plt>
  406647:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40664a:	48 63 d0             	movslq %eax,%rdx
  40664d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  406651:	48 01 d0             	add    %rdx,%rax
  406654:	c6 00 5f             	movb   $0x5f,(%rax)
  406657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40665b:	c9                   	leaveq 
  40665c:	c3                   	retq   

000000000040665d <LexInteractiveClear>:
  40665d:	55                   	push   %rbp
  40665e:	48 89 e5             	mov    %rsp,%rbp
  406661:	48 83 ec 20          	sub    $0x20,%rsp
  406665:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406669:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40666d:	eb 59                	jmp    4066c8 <LexInteractiveClear+0x6b>
  40666f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406673:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40667a:	48 8b 00             	mov    (%rax),%rax
  40667d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406685:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40668c:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406690:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406694:	48 89 d6             	mov    %rdx,%rsi
  406697:	48 89 c7             	mov    %rax,%rdi
  40669a:	e8 68 6a 00 00       	callq  40d107 <HeapFreeMem>
  40669f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066a3:	48 8b 90 20 03 00 00 	mov    0x320(%rax),%rdx
  4066aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066ae:	48 89 d6             	mov    %rdx,%rsi
  4066b1:	48 89 c7             	mov    %rax,%rdi
  4066b4:	e8 4e 6a 00 00       	callq  40d107 <HeapFreeMem>
  4066b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4066c1:	48 89 90 20 03 00 00 	mov    %rdx,0x320(%rax)
  4066c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066cc:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4066d3:	48 85 c0             	test   %rax,%rax
  4066d6:	75 97                	jne    40666f <LexInteractiveClear+0x12>
  4066d8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4066dd:	74 0c                	je     4066eb <LexInteractiveClear+0x8e>
  4066df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4066e3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4066ea:	00 
  4066eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4066ef:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
  4066f6:	00 00 00 00 
  4066fa:	90                   	nop
  4066fb:	c9                   	leaveq 
  4066fc:	c3                   	retq   

00000000004066fd <LexInteractiveCompleted>:
  4066fd:	55                   	push   %rbp
  4066fe:	48 89 e5             	mov    %rsp,%rbp
  406701:	48 83 ec 20          	sub    $0x20,%rsp
  406705:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406709:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40670d:	e9 84 00 00 00       	jmpq   406796 <LexInteractiveCompleted+0x99>
  406712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406716:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40671d:	48 8b 00             	mov    (%rax),%rax
  406720:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406728:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  40672f:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406737:	48 89 d6             	mov    %rdx,%rsi
  40673a:	48 89 c7             	mov    %rax,%rdi
  40673d:	e8 c5 69 00 00       	callq  40d107 <HeapFreeMem>
  406742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406746:	48 8b 90 20 03 00 00 	mov    0x320(%rax),%rdx
  40674d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406751:	48 89 d6             	mov    %rdx,%rsi
  406754:	48 89 c7             	mov    %rax,%rdi
  406757:	e8 ab 69 00 00       	callq  40d107 <HeapFreeMem>
  40675c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406760:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  406764:	48 89 90 20 03 00 00 	mov    %rdx,0x320(%rax)
  40676b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40676f:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  406776:	48 85 c0             	test   %rax,%rax
  406779:	75 1b                	jne    406796 <LexInteractiveCompleted+0x99>
  40677b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40677f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  406786:	00 
  406787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40678b:	48 c7 80 28 03 00 00 	movq   $0x0,0x328(%rax)
  406792:	00 00 00 00 
  406796:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40679a:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4067a1:	48 85 c0             	test   %rax,%rax
  4067a4:	74 53                	je     4067f9 <LexInteractiveCompleted+0xfc>
  4067a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4067aa:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4067ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4067b2:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4067b9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4067bd:	48 39 c2             	cmp    %rax,%rdx
  4067c0:	0f 82 4c ff ff ff    	jb     406712 <LexInteractiveCompleted+0x15>
  4067c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4067ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4067ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4067d2:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4067d9:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4067dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4067e1:	48 8b 80 20 03 00 00 	mov    0x320(%rax),%rax
  4067e8:	8b 40 10             	mov    0x10(%rax),%eax
  4067eb:	48 98                	cltq   
  4067ed:	48 01 c8             	add    %rcx,%rax
  4067f0:	48 39 c2             	cmp    %rax,%rdx
  4067f3:	0f 83 19 ff ff ff    	jae    406712 <LexInteractiveCompleted+0x15>
  4067f9:	90                   	nop
  4067fa:	c9                   	leaveq 
  4067fb:	c3                   	retq   

00000000004067fc <LexInteractiveStatementPrompt>:
  4067fc:	55                   	push   %rbp
  4067fd:	48 89 e5             	mov    %rsp,%rbp
  406800:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  406804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  406808:	c7 80 38 03 00 00 01 	movl   $0x1,0x338(%rax)
  40680f:	00 00 00 
  406812:	90                   	nop
  406813:	5d                   	pop    %rbp
  406814:	c3                   	retq   

0000000000406815 <ParseCleanup>:
  406815:	55                   	push   %rbp
  406816:	48 89 e5             	mov    %rsp,%rbp
  406819:	48 83 ec 20          	sub    $0x20,%rsp
  40681d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  406821:	eb 79                	jmp    40689c <ParseCleanup+0x87>
  406823:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406827:	48 8b 40 10          	mov    0x10(%rax),%rax
  40682b:	48 8b 40 10          	mov    0x10(%rax),%rax
  40682f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  406833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406837:	48 8b 40 10          	mov    0x10(%rax),%rax
  40683b:	48 8b 10             	mov    (%rax),%rdx
  40683e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406842:	48 89 d6             	mov    %rdx,%rsi
  406845:	48 89 c7             	mov    %rax,%rdi
  406848:	e8 ba 68 00 00       	callq  40d107 <HeapFreeMem>
  40684d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406851:	48 8b 40 10          	mov    0x10(%rax),%rax
  406855:	48 8b 40 08          	mov    0x8(%rax),%rax
  406859:	48 85 c0             	test   %rax,%rax
  40685c:	74 1b                	je     406879 <ParseCleanup+0x64>
  40685e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406862:	48 8b 40 10          	mov    0x10(%rax),%rax
  406866:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40686a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40686e:	48 89 d6             	mov    %rdx,%rsi
  406871:	48 89 c7             	mov    %rax,%rdi
  406874:	e8 8e 68 00 00       	callq  40d107 <HeapFreeMem>
  406879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40687d:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406881:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406885:	48 89 d6             	mov    %rdx,%rsi
  406888:	48 89 c7             	mov    %rax,%rdi
  40688b:	e8 77 68 00 00       	callq  40d107 <HeapFreeMem>
  406890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406894:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  406898:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40689c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068a0:	48 8b 40 10          	mov    0x10(%rax),%rax
  4068a4:	48 85 c0             	test   %rax,%rax
  4068a7:	0f 85 76 ff ff ff    	jne    406823 <ParseCleanup+0xe>
  4068ad:	90                   	nop
  4068ae:	c9                   	leaveq 
  4068af:	c3                   	retq   

00000000004068b0 <ParseStatementMaybeRun>:
  4068b0:	55                   	push   %rbp
  4068b1:	48 89 e5             	mov    %rsp,%rbp
  4068b4:	48 83 ec 20          	sub    $0x20,%rsp
  4068b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4068bc:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4068bf:	89 55 e0             	mov    %edx,-0x20(%rbp)
  4068c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068c6:	8b 40 1c             	mov    0x1c(%rax),%eax
  4068c9:	83 f8 01             	cmp    $0x1,%eax
  4068cc:	74 3e                	je     40690c <ParseStatementMaybeRun+0x5c>
  4068ce:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4068d2:	75 38                	jne    40690c <ParseStatementMaybeRun+0x5c>
  4068d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068d8:	8b 40 1c             	mov    0x1c(%rax),%eax
  4068db:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4068de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068e2:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%rax)
  4068e9:	8b 55 e0             	mov    -0x20(%rbp),%edx
  4068ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4068f0:	89 d6                	mov    %edx,%esi
  4068f2:	48 89 c7             	mov    %rax,%rdi
  4068f5:	e8 84 17 00 00       	callq  40807e <ParseStatement>
  4068fa:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4068fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406901:	8b 55 fc             	mov    -0x4(%rbp),%edx
  406904:	89 50 1c             	mov    %edx,0x1c(%rax)
  406907:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40690a:	eb 11                	jmp    40691d <ParseStatementMaybeRun+0x6d>
  40690c:	8b 55 e0             	mov    -0x20(%rbp),%edx
  40690f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406913:	89 d6                	mov    %edx,%esi
  406915:	48 89 c7             	mov    %rax,%rdi
  406918:	e8 61 17 00 00       	callq  40807e <ParseStatement>
  40691d:	c9                   	leaveq 
  40691e:	c3                   	retq   

000000000040691f <ParseCountParams>:
  40691f:	55                   	push   %rbp
  406920:	48 89 e5             	mov    %rsp,%rbp
  406923:	48 83 ec 20          	sub    $0x20,%rsp
  406927:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40692b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  406932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  406936:	ba 01 00 00 00       	mov    $0x1,%edx
  40693b:	be 00 00 00 00       	mov    $0x0,%esi
  406940:	48 89 c7             	mov    %rax,%rdi
  406943:	e8 41 f7 ff ff       	callq  406089 <LexGetToken>
  406948:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40694b:	83 7d f8 2c          	cmpl   $0x2c,-0x8(%rbp)
  40694f:	74 3b                	je     40698c <ParseCountParams+0x6d>
  406951:	83 7d f8 5d          	cmpl   $0x5d,-0x8(%rbp)
  406955:	74 35                	je     40698c <ParseCountParams+0x6d>
  406957:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40695b:	eb 0a                	jmp    406967 <ParseCountParams+0x48>
  40695d:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  406961:	75 04                	jne    406967 <ParseCountParams+0x48>
  406963:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  406967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40696b:	ba 01 00 00 00       	mov    $0x1,%edx
  406970:	be 00 00 00 00       	mov    $0x0,%esi
  406975:	48 89 c7             	mov    %rax,%rdi
  406978:	e8 0c f7 ff ff       	callq  406089 <LexGetToken>
  40697d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  406980:	83 7d f8 2c          	cmpl   $0x2c,-0x8(%rbp)
  406984:	74 06                	je     40698c <ParseCountParams+0x6d>
  406986:	83 7d f8 5d          	cmpl   $0x5d,-0x8(%rbp)
  40698a:	75 d1                	jne    40695d <ParseCountParams+0x3e>
  40698c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40698f:	c9                   	leaveq 
  406990:	c3                   	retq   

0000000000406991 <ParseFunctionDefinition>:
  406991:	55                   	push   %rbp
  406992:	48 89 e5             	mov    %rsp,%rbp
  406995:	53                   	push   %rbx
  406996:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
  40699d:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  4069a4:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  4069ab:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
  4069b2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4069b9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  4069c0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4069c7:	48 8b 00             	mov    (%rax),%rax
  4069ca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4069ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4069d2:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  4069d9:	48 85 c0             	test   %rax,%rax
  4069dc:	74 19                	je     4069f7 <ParseFunctionDefinition+0x66>
  4069de:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4069e5:	be 10 7e 41 00       	mov    $0x417e10,%esi
  4069ea:	48 89 c7             	mov    %rax,%rdi
  4069ed:	b8 00 00 00 00       	mov    $0x0,%eax
  4069f2:	e8 e7 9c 00 00       	callq  4106de <ProgramFail>
  4069f7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4069fe:	ba 01 00 00 00       	mov    $0x1,%edx
  406a03:	be 00 00 00 00       	mov    $0x0,%esi
  406a08:	48 89 c7             	mov    %rax,%rdi
  406a0b:	e8 79 f6 ff ff       	callq  406089 <LexGetToken>
  406a10:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  406a17:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406a1b:	48 89 d6             	mov    %rdx,%rsi
  406a1e:	48 89 c7             	mov    %rax,%rdi
  406a21:	e8 d3 10 00 00       	callq  407af9 <ParserCopy>
  406a26:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406a2d:	48 89 c7             	mov    %rax,%rdi
  406a30:	e8 ea fe ff ff       	callq  40691f <ParseCountParams>
  406a35:	89 45 e8             	mov    %eax,-0x18(%rbp)
  406a38:	83 7d e8 10          	cmpl   $0x10,-0x18(%rbp)
  406a3c:	7e 1e                	jle    406a5c <ParseFunctionDefinition+0xcb>
  406a3e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406a45:	ba 10 00 00 00       	mov    $0x10,%edx
  406a4a:	be 40 7e 41 00       	mov    $0x417e40,%esi
  406a4f:	48 89 c7             	mov    %rax,%rdi
  406a52:	b8 00 00 00 00       	mov    $0x0,%eax
  406a57:	e8 82 9c 00 00       	callq  4106de <ProgramFail>
  406a5c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  406a5f:	48 98                	cltq   
  406a61:	48 83 c0 07          	add    $0x7,%rax
  406a65:	c1 e0 04             	shl    $0x4,%eax
  406a68:	89 c2                	mov    %eax,%edx
  406a6a:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  406a71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406a75:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  406a7b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  406a81:	b9 00 00 00 00       	mov    $0x0,%ecx
  406a86:	48 89 c7             	mov    %rax,%rdi
  406a89:	e8 d7 80 00 00       	callq  40eb65 <VariableAllocValueAndData>
  406a8e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  406a92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406a96:	48 8d 90 48 0d 00 00 	lea    0xd48(%rax),%rdx
  406a9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406aa1:	48 89 10             	mov    %rdx,(%rax)
  406aa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406aa8:	48 8b 40 08          	mov    0x8(%rax),%rax
  406aac:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  406ab3:	48 89 10             	mov    %rdx,(%rax)
  406ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406aba:	48 8b 40 08          	mov    0x8(%rax),%rax
  406abe:	8b 55 e8             	mov    -0x18(%rbp),%edx
  406ac1:	89 50 08             	mov    %edx,0x8(%rax)
  406ac4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406ac8:	48 8b 40 08          	mov    0x8(%rax),%rax
  406acc:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
  406ad3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406ad7:	48 8b 50 08          	mov    0x8(%rax),%rdx
  406adb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406adf:	48 8b 40 08          	mov    0x8(%rax),%rax
  406ae3:	48 83 c2 70          	add    $0x70,%rdx
  406ae7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  406aeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406aef:	48 8b 40 08          	mov    0x8(%rax),%rax
  406af3:	48 8b 50 10          	mov    0x10(%rax),%rdx
  406af7:	8b 45 e8             	mov    -0x18(%rbp),%eax
  406afa:	48 98                	cltq   
  406afc:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  406b03:	00 
  406b04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406b08:	48 8b 40 08          	mov    0x8(%rax),%rax
  406b0c:	48 01 ca             	add    %rcx,%rdx
  406b0f:	48 89 50 18          	mov    %rdx,0x18(%rax)
  406b13:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  406b1a:	e9 19 01 00 00       	jmpq   406c38 <ParseFunctionDefinition+0x2a7>
  406b1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406b23:	48 8b 40 08          	mov    0x8(%rax),%rax
  406b27:	8b 40 08             	mov    0x8(%rax),%eax
  406b2a:	83 e8 01             	sub    $0x1,%eax
  406b2d:	39 45 e8             	cmp    %eax,-0x18(%rbp)
  406b30:	75 40                	jne    406b72 <ParseFunctionDefinition+0x1e1>
  406b32:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406b36:	ba 00 00 00 00       	mov    $0x0,%edx
  406b3b:	be 00 00 00 00       	mov    $0x0,%esi
  406b40:	48 89 c7             	mov    %rax,%rdi
  406b43:	e8 41 f5 ff ff       	callq  406089 <LexGetToken>
  406b48:	83 f8 33             	cmp    $0x33,%eax
  406b4b:	75 25                	jne    406b72 <ParseFunctionDefinition+0x1e1>
  406b4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406b51:	48 8b 40 08          	mov    0x8(%rax),%rax
  406b55:	8b 50 08             	mov    0x8(%rax),%edx
  406b58:	83 ea 01             	sub    $0x1,%edx
  406b5b:	89 50 08             	mov    %edx,0x8(%rax)
  406b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406b62:	48 8b 40 08          	mov    0x8(%rax),%rax
  406b66:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
  406b6d:	e9 da 00 00 00       	jmpq   406c4c <ParseFunctionDefinition+0x2bb>
  406b72:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  406b76:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
  406b7a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406b7e:	b9 00 00 00 00       	mov    $0x0,%ecx
  406b83:	48 89 c7             	mov    %rax,%rdi
  406b86:	e8 9b 7c 00 00       	callq  40e826 <TypeParse>
  406b8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406b8f:	8b 00                	mov    (%rax),%eax
  406b91:	85 c0                	test   %eax,%eax
  406b93:	75 17                	jne    406bac <ParseFunctionDefinition+0x21b>
  406b95:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
  406b99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406b9d:	48 8b 40 08          	mov    0x8(%rax),%rax
  406ba1:	8b 50 08             	mov    0x8(%rax),%edx
  406ba4:	83 ea 01             	sub    $0x1,%edx
  406ba7:	89 50 08             	mov    %edx,0x8(%rax)
  406baa:	eb 40                	jmp    406bec <ParseFunctionDefinition+0x25b>
  406bac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406bb0:	48 8b 40 08          	mov    0x8(%rax),%rax
  406bb4:	48 8b 40 10          	mov    0x10(%rax),%rax
  406bb8:	8b 55 e8             	mov    -0x18(%rbp),%edx
  406bbb:	48 63 d2             	movslq %edx,%rdx
  406bbe:	48 c1 e2 03          	shl    $0x3,%rdx
  406bc2:	48 01 c2             	add    %rax,%rdx
  406bc5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  406bc9:	48 89 02             	mov    %rax,(%rdx)
  406bcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406bd0:	48 8b 40 08          	mov    0x8(%rax),%rax
  406bd4:	48 8b 40 18          	mov    0x18(%rax),%rax
  406bd8:	8b 55 e8             	mov    -0x18(%rbp),%edx
  406bdb:	48 63 d2             	movslq %edx,%rdx
  406bde:	48 c1 e2 03          	shl    $0x3,%rdx
  406be2:	48 01 c2             	add    %rax,%rdx
  406be5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  406be9:	48 89 02             	mov    %rax,(%rdx)
  406bec:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406bf0:	ba 01 00 00 00       	mov    $0x1,%edx
  406bf5:	be 00 00 00 00       	mov    $0x0,%esi
  406bfa:	48 89 c7             	mov    %rax,%rdi
  406bfd:	e8 87 f4 ff ff       	callq  406089 <LexGetToken>
  406c02:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406c05:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  406c09:	74 29                	je     406c34 <ParseFunctionDefinition+0x2a3>
  406c0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c0f:	48 8b 40 08          	mov    0x8(%rax),%rax
  406c13:	8b 40 08             	mov    0x8(%rax),%eax
  406c16:	83 e8 01             	sub    $0x1,%eax
  406c19:	39 45 e8             	cmp    %eax,-0x18(%rbp)
  406c1c:	7d 16                	jge    406c34 <ParseFunctionDefinition+0x2a3>
  406c1e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406c22:	be 61 7e 41 00       	mov    $0x417e61,%esi
  406c27:	48 89 c7             	mov    %rax,%rdi
  406c2a:	b8 00 00 00 00       	mov    $0x0,%eax
  406c2f:	e8 aa 9a 00 00       	callq  4106de <ProgramFail>
  406c34:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  406c38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c3c:	48 8b 40 08          	mov    0x8(%rax),%rax
  406c40:	8b 40 08             	mov    0x8(%rax),%eax
  406c43:	39 45 e8             	cmp    %eax,-0x18(%rbp)
  406c46:	0f 8c d3 fe ff ff    	jl     406b1f <ParseFunctionDefinition+0x18e>
  406c4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406c50:	48 8b 40 08          	mov    0x8(%rax),%rax
  406c54:	8b 40 08             	mov    0x8(%rax),%eax
  406c57:	85 c0                	test   %eax,%eax
  406c59:	74 28                	je     406c83 <ParseFunctionDefinition+0x2f2>
  406c5b:	83 7d ec 2c          	cmpl   $0x2c,-0x14(%rbp)
  406c5f:	74 22                	je     406c83 <ParseFunctionDefinition+0x2f2>
  406c61:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
  406c65:	74 1c                	je     406c83 <ParseFunctionDefinition+0x2f2>
  406c67:	83 7d ec 33          	cmpl   $0x33,-0x14(%rbp)
  406c6b:	74 16                	je     406c83 <ParseFunctionDefinition+0x2f2>
  406c6d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406c71:	be 70 7e 41 00       	mov    $0x417e70,%esi
  406c76:	48 89 c7             	mov    %rax,%rdi
  406c79:	b8 00 00 00 00       	mov    $0x0,%eax
  406c7e:	e8 5b 9a 00 00       	callq  4106de <ProgramFail>
  406c83:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  406c8a:	be 7e 7e 41 00       	mov    $0x417e7e,%esi
  406c8f:	48 89 c7             	mov    %rax,%rdi
  406c92:	e8 59 c1 ff ff       	callq  402df0 <strcmp@plt>
  406c97:	85 c0                	test   %eax,%eax
  406c99:	0f 85 a6 00 00 00    	jne    406d45 <ParseFunctionDefinition+0x3b4>
  406c9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406ca3:	48 8b 40 08          	mov    0x8(%rax),%rax
  406ca7:	48 8b 00             	mov    (%rax),%rax
  406caa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  406cae:	48 81 c2 c8 0a 00 00 	add    $0xac8,%rdx
  406cb5:	48 39 d0             	cmp    %rdx,%rax
  406cb8:	74 34                	je     406cee <ParseFunctionDefinition+0x35d>
  406cba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406cbe:	48 8b 40 08          	mov    0x8(%rax),%rax
  406cc2:	48 8b 00             	mov    (%rax),%rax
  406cc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  406cc9:	48 81 c2 c8 0c 00 00 	add    $0xcc8,%rdx
  406cd0:	48 39 d0             	cmp    %rdx,%rax
  406cd3:	74 19                	je     406cee <ParseFunctionDefinition+0x35d>
  406cd5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406cdc:	be 88 7e 41 00       	mov    $0x417e88,%esi
  406ce1:	48 89 c7             	mov    %rax,%rdi
  406ce4:	b8 00 00 00 00       	mov    $0x0,%eax
  406ce9:	e8 f0 99 00 00       	callq  4106de <ProgramFail>
  406cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406cf2:	48 8b 40 08          	mov    0x8(%rax),%rax
  406cf6:	8b 40 08             	mov    0x8(%rax),%eax
  406cf9:	85 c0                	test   %eax,%eax
  406cfb:	74 48                	je     406d45 <ParseFunctionDefinition+0x3b4>
  406cfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d01:	48 8b 40 08          	mov    0x8(%rax),%rax
  406d05:	8b 40 08             	mov    0x8(%rax),%eax
  406d08:	83 f8 02             	cmp    $0x2,%eax
  406d0b:	75 1f                	jne    406d2c <ParseFunctionDefinition+0x39b>
  406d0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406d11:	48 8b 40 08          	mov    0x8(%rax),%rax
  406d15:	48 8b 40 10          	mov    0x10(%rax),%rax
  406d19:	48 8b 00             	mov    (%rax),%rax
  406d1c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  406d20:	48 81 c2 c8 0a 00 00 	add    $0xac8,%rdx
  406d27:	48 39 d0             	cmp    %rdx,%rax
  406d2a:	74 19                	je     406d45 <ParseFunctionDefinition+0x3b4>
  406d2c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406d33:	be ac 7e 41 00       	mov    $0x417eac,%esi
  406d38:	48 89 c7             	mov    %rax,%rdi
  406d3b:	b8 00 00 00 00       	mov    $0x0,%eax
  406d40:	e8 99 99 00 00       	callq  4106de <ProgramFail>
  406d45:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406d4c:	ba 00 00 00 00       	mov    $0x0,%edx
  406d51:	be 00 00 00 00       	mov    $0x0,%esi
  406d56:	48 89 c7             	mov    %rax,%rdi
  406d59:	e8 2b f3 ff ff       	callq  406089 <LexGetToken>
  406d5e:	89 45 ec             	mov    %eax,-0x14(%rbp)
  406d61:	83 7d ec 32          	cmpl   $0x32,-0x14(%rbp)
  406d65:	75 1e                	jne    406d85 <ParseFunctionDefinition+0x3f4>
  406d67:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406d6e:	ba 01 00 00 00       	mov    $0x1,%edx
  406d73:	be 00 00 00 00       	mov    $0x0,%esi
  406d78:	48 89 c7             	mov    %rax,%rdi
  406d7b:	e8 09 f3 ff ff       	callq  406089 <LexGetToken>
  406d80:	e9 90 01 00 00       	jmpq   406f15 <ParseFunctionDefinition+0x584>
  406d85:	83 7d ec 34          	cmpl   $0x34,-0x14(%rbp)
  406d89:	74 19                	je     406da4 <ParseFunctionDefinition+0x413>
  406d8b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406d92:	be c5 7e 41 00       	mov    $0x417ec5,%esi
  406d97:	48 89 c7             	mov    %rax,%rdi
  406d9a:	b8 00 00 00 00       	mov    $0x0,%eax
  406d9f:	e8 3a 99 00 00       	callq  4106de <ProgramFail>
  406da4:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  406dab:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  406db2:	48 89 d6             	mov    %rdx,%rsi
  406db5:	48 89 c7             	mov    %rax,%rdi
  406db8:	e8 3c 0d 00 00       	callq  407af9 <ParserCopy>
  406dbd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406dc4:	ba 01 00 00 00       	mov    $0x1,%edx
  406dc9:	be 00 00 00 00       	mov    $0x0,%esi
  406dce:	48 89 c7             	mov    %rax,%rdi
  406dd1:	e8 da fa ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  406dd6:	83 f8 02             	cmp    $0x2,%eax
  406dd9:	74 19                	je     406df4 <ParseFunctionDefinition+0x463>
  406ddb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406de2:	be dd 7e 41 00       	mov    $0x417edd,%esi
  406de7:	48 89 c7             	mov    %rax,%rdi
  406dea:	b8 00 00 00 00       	mov    $0x0,%eax
  406def:	e8 ea 98 00 00       	callq  4106de <ProgramFail>
  406df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406df8:	48 8b 40 08          	mov    0x8(%rax),%rax
  406dfc:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
  406e03:	48 8b 8d 38 ff ff ff 	mov    -0xc8(%rbp),%rcx
  406e0a:	48 89 50 28          	mov    %rdx,0x28(%rax)
  406e0e:	48 89 48 30          	mov    %rcx,0x30(%rax)
  406e12:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  406e19:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
  406e20:	48 89 50 38          	mov    %rdx,0x38(%rax)
  406e24:	48 89 48 40          	mov    %rcx,0x40(%rax)
  406e28:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
  406e2f:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  406e36:	48 89 50 48          	mov    %rdx,0x48(%rax)
  406e3a:	48 89 48 50          	mov    %rcx,0x50(%rax)
  406e3e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  406e45:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  406e4c:	48 89 50 58          	mov    %rdx,0x58(%rax)
  406e50:	48 89 48 60          	mov    %rcx,0x60(%rax)
  406e54:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  406e5b:	48 89 50 68          	mov    %rdx,0x68(%rax)
  406e5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406e63:	48 8b 58 08          	mov    0x8(%rax),%rbx
  406e67:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  406e6e:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  406e75:	48 89 d6             	mov    %rdx,%rsi
  406e78:	48 89 c7             	mov    %rax,%rdi
  406e7b:	e8 c4 f3 ff ff       	callq  406244 <LexCopyTokens>
  406e80:	48 89 43 30          	mov    %rax,0x30(%rbx)
  406e84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406e88:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
  406e8f:	48 8b b5 18 ff ff ff 	mov    -0xe8(%rbp),%rsi
  406e96:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  406e9c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  406ea2:	b9 00 00 00 00       	mov    $0x0,%ecx
  406ea7:	48 89 c7             	mov    %rax,%rdi
  406eaa:	e8 27 ca ff ff       	callq  4038d6 <TableGet>
  406eaf:	85 c0                	test   %eax,%eax
  406eb1:	74 62                	je     406f15 <ParseFunctionDefinition+0x584>
  406eb3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  406eba:	48 8b 40 08          	mov    0x8(%rax),%rax
  406ebe:	48 8b 40 30          	mov    0x30(%rax),%rax
  406ec2:	48 85 c0             	test   %rax,%rax
  406ec5:	75 2e                	jne    406ef5 <ParseFunctionDefinition+0x564>
  406ec7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  406ecb:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  406ed2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406ed6:	48 89 ce             	mov    %rcx,%rsi
  406ed9:	48 89 c7             	mov    %rax,%rdi
  406edc:	e8 8c ca ff ff       	callq  40396d <TableDelete>
  406ee1:	48 89 c2             	mov    %rax,%rdx
  406ee4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406ee8:	48 89 d6             	mov    %rdx,%rsi
  406eeb:	48 89 c7             	mov    %rax,%rdi
  406eee:	e8 45 7a 00 00       	callq  40e938 <VariableFree>
  406ef3:	eb 20                	jmp    406f15 <ParseFunctionDefinition+0x584>
  406ef5:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  406efc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406f03:	be fa 7e 41 00       	mov    $0x417efa,%esi
  406f08:	48 89 c7             	mov    %rax,%rdi
  406f0b:	b8 00 00 00 00       	mov    $0x0,%eax
  406f10:	e8 c9 97 00 00       	callq  4106de <ProgramFail>
  406f15:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406f1c:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  406f20:	0f bf f8             	movswl %ax,%edi
  406f23:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406f2a:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  406f2e:	44 0f bf c8          	movswl %ax,%r9d
  406f32:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406f39:	4c 8b 40 10          	mov    0x10(%rax),%r8
  406f3d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  406f41:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  406f45:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  406f4c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  406f50:	48 83 ec 08          	sub    $0x8,%rsp
  406f54:	57                   	push   %rdi
  406f55:	48 89 c7             	mov    %rax,%rdi
  406f58:	e8 85 c8 ff ff       	callq  4037e2 <TableSet>
  406f5d:	48 83 c4 10          	add    $0x10,%rsp
  406f61:	85 c0                	test   %eax,%eax
  406f63:	75 20                	jne    406f85 <ParseFunctionDefinition+0x5f4>
  406f65:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
  406f6c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  406f73:	be fa 7e 41 00       	mov    $0x417efa,%esi
  406f78:	48 89 c7             	mov    %rax,%rdi
  406f7b:	b8 00 00 00 00       	mov    $0x0,%eax
  406f80:	e8 59 97 00 00       	callq  4106de <ProgramFail>
  406f85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  406f89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  406f8d:	c9                   	leaveq 
  406f8e:	c3                   	retq   

0000000000406f8f <ParseArrayInitialiser>:
  406f8f:	55                   	push   %rbp
  406f90:	48 89 e5             	mov    %rsp,%rbp
  406f93:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  406f9a:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  406fa1:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  406fa8:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  406fae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  406fb5:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  406fbc:	0f 84 33 01 00 00    	je     4070f5 <ParseArrayInitialiser+0x166>
  406fc2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  406fc9:	8b 40 1c             	mov    0x1c(%rax),%eax
  406fcc:	85 c0                	test   %eax,%eax
  406fce:	0f 85 21 01 00 00    	jne    4070f5 <ParseArrayInitialiser+0x166>
  406fd4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  406fdb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406fdf:	48 89 d6             	mov    %rdx,%rsi
  406fe2:	48 89 c7             	mov    %rax,%rdi
  406fe5:	e8 0f 0b 00 00       	callq  407af9 <ParserCopy>
  406fea:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  406ff1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  406ff5:	ba 00 00 00 00       	mov    $0x0,%edx
  406ffa:	48 89 ce             	mov    %rcx,%rsi
  406ffd:	48 89 c7             	mov    %rax,%rdi
  407000:	e8 8a ff ff ff       	callq  406f8f <ParseArrayInitialiser>
  407005:	89 45 d8             	mov    %eax,-0x28(%rbp)
  407008:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40700f:	48 8b 00             	mov    (%rax),%rax
  407012:	8b 00                	mov    (%rax),%eax
  407014:	83 f8 0c             	cmp    $0xc,%eax
  407017:	74 37                	je     407050 <ParseArrayInitialiser+0xc1>
  407019:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407020:	48 8b 10             	mov    (%rax),%rdx
  407023:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40702a:	6a 00                	pushq  $0x0
  40702c:	6a 00                	pushq  $0x0
  40702e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  407034:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40703a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40703f:	be 12 7f 41 00       	mov    $0x417f12,%esi
  407044:	48 89 c7             	mov    %rax,%rdi
  407047:	e8 b1 98 00 00       	callq  4108fd <AssignFail>
  40704c:	48 83 c4 10          	add    $0x10,%rsp
  407050:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407057:	48 8b 00             	mov    (%rax),%rax
  40705a:	8b 40 04             	mov    0x4(%rax),%eax
  40705d:	85 c0                	test   %eax,%eax
  40705f:	0f 85 90 00 00 00    	jne    4070f5 <ParseArrayInitialiser+0x166>
  407065:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40706c:	48 8b 00             	mov    (%rax),%rax
  40706f:	4c 8b 40 10          	mov    0x10(%rax),%r8
  407073:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40707a:	48 8b 00             	mov    (%rax),%rax
  40707d:	8b 08                	mov    (%rax),%ecx
  40707f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407086:	48 8b 00             	mov    (%rax),%rax
  407089:	48 8b 50 18          	mov    0x18(%rax),%rdx
  40708d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407094:	48 8b 00             	mov    (%rax),%rax
  407097:	8b 7d d8             	mov    -0x28(%rbp),%edi
  40709a:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  4070a1:	48 83 ec 08          	sub    $0x8,%rsp
  4070a5:	6a 01                	pushq  $0x1
  4070a7:	4d 89 c1             	mov    %r8,%r9
  4070aa:	41 89 f8             	mov    %edi,%r8d
  4070ad:	48 89 c7             	mov    %rax,%rdi
  4070b0:	e8 32 61 00 00       	callq  40d1e7 <TypeGetMatching>
  4070b5:	48 83 c4 10          	add    $0x10,%rsp
  4070b9:	48 89 c2             	mov    %rax,%rdx
  4070bc:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4070c3:	48 89 10             	mov    %rdx,(%rax)
  4070c6:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4070cd:	be 00 00 00 00       	mov    $0x0,%esi
  4070d2:	48 89 c7             	mov    %rax,%rdi
  4070d5:	e8 69 62 00 00       	callq  40d343 <TypeSizeValue>
  4070da:	89 c2                	mov    %eax,%edx
  4070dc:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  4070e3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4070ea:	48 89 ce             	mov    %rcx,%rsi
  4070ed:	48 89 c7             	mov    %rax,%rdi
  4070f0:	e8 a3 7d 00 00       	callq  40ee98 <VariableRealloc>
  4070f5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4070fc:	ba 00 00 00 00       	mov    $0x0,%edx
  407101:	be 00 00 00 00       	mov    $0x0,%esi
  407106:	48 89 c7             	mov    %rax,%rdi
  407109:	e8 7b ef ff ff       	callq  406089 <LexGetToken>
  40710e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  407111:	e9 71 03 00 00       	jmpq   407487 <ParseArrayInitialiser+0x4f8>
  407116:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40711d:	ba 00 00 00 00       	mov    $0x0,%edx
  407122:	be 00 00 00 00       	mov    $0x0,%esi
  407127:	48 89 c7             	mov    %rax,%rdi
  40712a:	e8 5a ef ff ff       	callq  406089 <LexGetToken>
  40712f:	83 f8 34             	cmp    $0x34,%eax
  407132:	0f 85 11 01 00 00    	jne    407249 <ParseArrayInitialiser+0x2ba>
  407138:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  40713f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407146:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40714a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407151:	8b 40 1c             	mov    0x1c(%rax),%eax
  407154:	85 c0                	test   %eax,%eax
  407156:	0f 85 b3 00 00 00    	jne    40720f <ParseArrayInitialiser+0x280>
  40715c:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  407163:	0f 84 a6 00 00 00    	je     40720f <ParseArrayInitialiser+0x280>
  407169:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407170:	48 8b 00             	mov    (%rax),%rax
  407173:	48 8b 40 18          	mov    0x18(%rax),%rax
  407177:	8b 48 04             	mov    0x4(%rax),%ecx
  40717a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407181:	48 8b 00             	mov    (%rax),%rax
  407184:	48 8b 40 18          	mov    0x18(%rax),%rax
  407188:	ba 01 00 00 00       	mov    $0x1,%edx
  40718d:	89 ce                	mov    %ecx,%esi
  40718f:	48 89 c7             	mov    %rax,%rdi
  407192:	e8 16 62 00 00       	callq  40d3ad <TypeSize>
  407197:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40719a:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4071a1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4071a5:	48 89 c2             	mov    %rax,%rdx
  4071a8:	8b 45 d0             	mov    -0x30(%rbp),%eax
  4071ab:	0f af 45 fc          	imul   -0x4(%rbp),%eax
  4071af:	48 98                	cltq   
  4071b1:	48 01 c2             	add    %rax,%rdx
  4071b4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4071bb:	48 8b 00             	mov    (%rax),%rax
  4071be:	48 8b 70 18          	mov    0x18(%rax),%rsi
  4071c2:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  4071c9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4071d0:	49 89 c8             	mov    %rcx,%r8
  4071d3:	b9 01 00 00 00       	mov    $0x1,%ecx
  4071d8:	48 89 c7             	mov    %rax,%rdi
  4071db:	e8 dd 7b 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  4071e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4071e4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  4071eb:	48 8b 00             	mov    (%rax),%rax
  4071ee:	8b 40 04             	mov    0x4(%rax),%eax
  4071f1:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  4071f4:	7c 19                	jl     40720f <ParseArrayInitialiser+0x280>
  4071f6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4071fd:	be 2c 7f 41 00       	mov    $0x417f2c,%esi
  407202:	48 89 c7             	mov    %rax,%rdi
  407205:	b8 00 00 00 00       	mov    $0x0,%eax
  40720a:	e8 cf 94 00 00       	callq  4106de <ProgramFail>
  40720f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407216:	ba 01 00 00 00       	mov    $0x1,%edx
  40721b:	be 00 00 00 00       	mov    $0x0,%esi
  407220:	48 89 c7             	mov    %rax,%rdi
  407223:	e8 61 ee ff ff       	callq  406089 <LexGetToken>
  407228:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
  40722e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  407232:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407239:	48 89 ce             	mov    %rcx,%rsi
  40723c:	48 89 c7             	mov    %rax,%rdi
  40723f:	e8 4b fd ff ff       	callq  406f8f <ParseArrayInitialiser>
  407244:	e9 c2 01 00 00       	jmpq   40740b <ParseArrayInitialiser+0x47c>
  407249:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  407250:	00 
  407251:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407258:	8b 40 1c             	mov    0x1c(%rax),%eax
  40725b:	85 c0                	test   %eax,%eax
  40725d:	0f 85 00 01 00 00    	jne    407363 <ParseArrayInitialiser+0x3d4>
  407263:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  40726a:	0f 84 f3 00 00 00    	je     407363 <ParseArrayInitialiser+0x3d4>
  407270:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  407277:	48 8b 00             	mov    (%rax),%rax
  40727a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40727e:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
  407285:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  40728c:	eb 49                	jmp    4072d7 <ParseArrayInitialiser+0x348>
  40728e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  407292:	8b 40 04             	mov    0x4(%rax),%eax
  407295:	8b 55 dc             	mov    -0x24(%rbp),%edx
  407298:	0f af c2             	imul   %edx,%eax
  40729b:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40729e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072a2:	48 8b 40 18          	mov    0x18(%rax),%rax
  4072a6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4072aa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4072b1:	ba 00 00 00 00       	mov    $0x0,%edx
  4072b6:	be 00 00 00 00       	mov    $0x0,%esi
  4072bb:	48 89 c7             	mov    %rax,%rdi
  4072be:	e8 c6 ed ff ff       	callq  406089 <LexGetToken>
  4072c3:	83 f8 30             	cmp    $0x30,%eax
  4072c6:	75 0f                	jne    4072d7 <ParseArrayInitialiser+0x348>
  4072c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072cc:	48 8b 40 18          	mov    0x18(%rax),%rax
  4072d0:	8b 00                	mov    (%rax),%eax
  4072d2:	83 f8 03             	cmp    $0x3,%eax
  4072d5:	74 0d                	je     4072e4 <ParseArrayInitialiser+0x355>
  4072d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072db:	8b 00                	mov    (%rax),%eax
  4072dd:	83 f8 0c             	cmp    $0xc,%eax
  4072e0:	74 ac                	je     40728e <ParseArrayInitialiser+0x2ff>
  4072e2:	eb 01                	jmp    4072e5 <ParseArrayInitialiser+0x356>
  4072e4:	90                   	nop
  4072e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072e9:	8b 48 04             	mov    0x4(%rax),%ecx
  4072ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4072f0:	ba 01 00 00 00       	mov    $0x1,%edx
  4072f5:	89 ce                	mov    %ecx,%esi
  4072f7:	48 89 c7             	mov    %rax,%rdi
  4072fa:	e8 ae 60 00 00       	callq  40d3ad <TypeSize>
  4072ff:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  407302:	8b 45 fc             	mov    -0x4(%rbp),%eax
  407305:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  407308:	7c 19                	jl     407323 <ParseArrayInitialiser+0x394>
  40730a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407311:	be 2c 7f 41 00       	mov    $0x417f2c,%esi
  407316:	48 89 c7             	mov    %rax,%rdi
  407319:	b8 00 00 00 00       	mov    $0x0,%eax
  40731e:	e8 bb 93 00 00       	callq  4106de <ProgramFail>
  407323:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40732a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40732e:	48 89 c2             	mov    %rax,%rdx
  407331:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  407334:	0f af 45 fc          	imul   -0x4(%rbp),%eax
  407338:	48 98                	cltq   
  40733a:	48 01 c2             	add    %rax,%rdx
  40733d:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  407344:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  407348:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40734f:	49 89 c8             	mov    %rcx,%r8
  407352:	b9 01 00 00 00       	mov    $0x1,%ecx
  407357:	48 89 c7             	mov    %rax,%rdi
  40735a:	e8 5e 7a 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  40735f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  407363:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  407367:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40736e:	48 89 d6             	mov    %rdx,%rsi
  407371:	48 89 c7             	mov    %rax,%rdi
  407374:	e8 e7 44 00 00       	callq  40b860 <ExpressionParse>
  407379:	85 c0                	test   %eax,%eax
  40737b:	75 19                	jne    407396 <ParseArrayInitialiser+0x407>
  40737d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407384:	be 44 7f 41 00       	mov    $0x417f44,%esi
  407389:	48 89 c7             	mov    %rax,%rdi
  40738c:	b8 00 00 00 00       	mov    $0x0,%eax
  407391:	e8 48 93 00 00       	callq  4106de <ProgramFail>
  407396:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40739d:	8b 40 1c             	mov    0x1c(%rax),%eax
  4073a0:	85 c0                	test   %eax,%eax
  4073a2:	75 67                	jne    40740b <ParseArrayInitialiser+0x47c>
  4073a4:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  4073ab:	74 5e                	je     40740b <ParseArrayInitialiser+0x47c>
  4073ad:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4073b1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4073b5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4073bc:	48 83 ec 08          	sub    $0x8,%rsp
  4073c0:	6a 00                	pushq  $0x0
  4073c2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4073c8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4073ce:	b9 00 00 00 00       	mov    $0x0,%ecx
  4073d3:	48 89 c7             	mov    %rax,%rdi
  4073d6:	e8 5a 25 00 00       	callq  409935 <ExpressionAssign>
  4073db:	48 83 c4 10          	add    $0x10,%rsp
  4073df:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4073e3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4073ea:	48 89 d6             	mov    %rdx,%rsi
  4073ed:	48 89 c7             	mov    %rax,%rdi
  4073f0:	e8 a6 85 00 00       	callq  40f99b <VariableStackPop>
  4073f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4073f9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407400:	48 89 d6             	mov    %rdx,%rsi
  407403:	48 89 c7             	mov    %rax,%rdi
  407406:	e8 90 85 00 00       	callq  40f99b <VariableStackPop>
  40740b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40740f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407416:	ba 00 00 00 00       	mov    $0x0,%edx
  40741b:	be 00 00 00 00       	mov    $0x0,%esi
  407420:	48 89 c7             	mov    %rax,%rdi
  407423:	e8 61 ec ff ff       	callq  406089 <LexGetToken>
  407428:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40742b:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
  40742f:	75 37                	jne    407468 <ParseArrayInitialiser+0x4d9>
  407431:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407438:	ba 01 00 00 00       	mov    $0x1,%edx
  40743d:	be 00 00 00 00       	mov    $0x0,%esi
  407442:	48 89 c7             	mov    %rax,%rdi
  407445:	e8 3f ec ff ff       	callq  406089 <LexGetToken>
  40744a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407451:	ba 00 00 00 00       	mov    $0x0,%edx
  407456:	be 00 00 00 00       	mov    $0x0,%esi
  40745b:	48 89 c7             	mov    %rax,%rdi
  40745e:	e8 26 ec ff ff       	callq  406089 <LexGetToken>
  407463:	89 45 f8             	mov    %eax,-0x8(%rbp)
  407466:	eb 1f                	jmp    407487 <ParseArrayInitialiser+0x4f8>
  407468:	83 7d f8 35          	cmpl   $0x35,-0x8(%rbp)
  40746c:	74 19                	je     407487 <ParseArrayInitialiser+0x4f8>
  40746e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  407475:	be 61 7e 41 00       	mov    $0x417e61,%esi
  40747a:	48 89 c7             	mov    %rax,%rdi
  40747d:	b8 00 00 00 00       	mov    $0x0,%eax
  407482:	e8 57 92 00 00       	callq  4106de <ProgramFail>
  407487:	83 7d f8 35          	cmpl   $0x35,-0x8(%rbp)
  40748b:	0f 85 85 fc ff ff    	jne    407116 <ParseArrayInitialiser+0x187>
  407491:	83 7d f8 35          	cmpl   $0x35,-0x8(%rbp)
  407495:	75 1b                	jne    4074b2 <ParseArrayInitialiser+0x523>
  407497:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40749e:	ba 01 00 00 00       	mov    $0x1,%edx
  4074a3:	be 00 00 00 00       	mov    $0x0,%esi
  4074a8:	48 89 c7             	mov    %rax,%rdi
  4074ab:	e8 d9 eb ff ff       	callq  406089 <LexGetToken>
  4074b0:	eb 19                	jmp    4074cb <ParseArrayInitialiser+0x53c>
  4074b2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4074b9:	be 58 7f 41 00       	mov    $0x417f58,%esi
  4074be:	48 89 c7             	mov    %rax,%rdi
  4074c1:	b8 00 00 00 00       	mov    $0x0,%eax
  4074c6:	e8 13 92 00 00       	callq  4106de <ProgramFail>
  4074cb:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4074ce:	c9                   	leaveq 
  4074cf:	c3                   	retq   

00000000004074d0 <ParseDeclarationAssignment>:
  4074d0:	55                   	push   %rbp
  4074d1:	48 89 e5             	mov    %rsp,%rbp
  4074d4:	48 83 ec 30          	sub    $0x30,%rsp
  4074d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4074dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4074e0:	89 55 dc             	mov    %edx,-0x24(%rbp)
  4074e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4074e7:	ba 00 00 00 00       	mov    $0x0,%edx
  4074ec:	be 00 00 00 00       	mov    $0x0,%esi
  4074f1:	48 89 c7             	mov    %rax,%rdi
  4074f4:	e8 90 eb ff ff       	callq  406089 <LexGetToken>
  4074f9:	83 f8 34             	cmp    $0x34,%eax
  4074fc:	75 31                	jne    40752f <ParseDeclarationAssignment+0x5f>
  4074fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407502:	ba 01 00 00 00       	mov    $0x1,%edx
  407507:	be 00 00 00 00       	mov    $0x0,%esi
  40750c:	48 89 c7             	mov    %rax,%rdi
  40750f:	e8 75 eb ff ff       	callq  406089 <LexGetToken>
  407514:	8b 55 dc             	mov    -0x24(%rbp),%edx
  407517:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40751b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40751f:	48 89 ce             	mov    %rcx,%rsi
  407522:	48 89 c7             	mov    %rax,%rdi
  407525:	e8 65 fa ff ff       	callq  406f8f <ParseArrayInitialiser>
  40752a:	e9 80 00 00 00       	jmpq   4075af <ParseDeclarationAssignment+0xdf>
  40752f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  407533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407537:	48 89 d6             	mov    %rdx,%rsi
  40753a:	48 89 c7             	mov    %rax,%rdi
  40753d:	e8 1e 43 00 00       	callq  40b860 <ExpressionParse>
  407542:	85 c0                	test   %eax,%eax
  407544:	75 16                	jne    40755c <ParseDeclarationAssignment+0x8c>
  407546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40754a:	be 44 7f 41 00       	mov    $0x417f44,%esi
  40754f:	48 89 c7             	mov    %rax,%rdi
  407552:	b8 00 00 00 00       	mov    $0x0,%eax
  407557:	e8 82 91 00 00       	callq  4106de <ProgramFail>
  40755c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407560:	8b 40 1c             	mov    0x1c(%rax),%eax
  407563:	85 c0                	test   %eax,%eax
  407565:	75 48                	jne    4075af <ParseDeclarationAssignment+0xdf>
  407567:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  40756b:	74 42                	je     4075af <ParseDeclarationAssignment+0xdf>
  40756d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  407571:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  407575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407579:	48 83 ec 08          	sub    $0x8,%rsp
  40757d:	6a 00                	pushq  $0x0
  40757f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  407585:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40758b:	b9 00 00 00 00       	mov    $0x0,%ecx
  407590:	48 89 c7             	mov    %rax,%rdi
  407593:	e8 9d 23 00 00       	callq  409935 <ExpressionAssign>
  407598:	48 83 c4 10          	add    $0x10,%rsp
  40759c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4075a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4075a4:	48 89 d6             	mov    %rdx,%rsi
  4075a7:	48 89 c7             	mov    %rax,%rdi
  4075aa:	e8 ec 83 00 00       	callq  40f99b <VariableStackPop>
  4075af:	90                   	nop
  4075b0:	c9                   	leaveq 
  4075b1:	c3                   	retq   

00000000004075b2 <ParseDeclaration>:
  4075b2:	55                   	push   %rbp
  4075b3:	48 89 e5             	mov    %rsp,%rbp
  4075b6:	48 83 ec 40          	sub    $0x40,%rsp
  4075ba:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4075be:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  4075c1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  4075c8:	00 
  4075c9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  4075d0:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  4075d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4075db:	48 8b 00             	mov    (%rax),%rax
  4075de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4075e2:	48 8d 55 d4          	lea    -0x2c(%rbp),%rdx
  4075e6:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  4075ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4075ee:	48 89 ce             	mov    %rcx,%rsi
  4075f1:	48 89 c7             	mov    %rax,%rdi
  4075f4:	e8 ef 6a 00 00       	callq  40e0e8 <TypeParseFront>
  4075f9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4075fd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
  407601:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  407605:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407609:	48 89 c7             	mov    %rax,%rdi
  40760c:	e8 ca 6f 00 00       	callq  40e5db <TypeParseIdentPart>
  407611:	83 7d c4 3a          	cmpl   $0x3a,-0x3c(%rbp)
  407615:	74 3c                	je     407653 <ParseDeclaration+0xa1>
  407617:	83 7d c4 43          	cmpl   $0x43,-0x3c(%rbp)
  40761b:	74 36                	je     407653 <ParseDeclaration+0xa1>
  40761d:	83 7d c4 44          	cmpl   $0x44,-0x3c(%rbp)
  407621:	74 30                	je     407653 <ParseDeclaration+0xa1>
  407623:	83 7d c4 3b          	cmpl   $0x3b,-0x3c(%rbp)
  407627:	74 2a                	je     407653 <ParseDeclaration+0xa1>
  407629:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40762d:	48 8b 90 f8 13 00 00 	mov    0x13f8(%rax),%rdx
  407634:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407638:	48 39 c2             	cmp    %rax,%rdx
  40763b:	75 16                	jne    407653 <ParseDeclaration+0xa1>
  40763d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407641:	be 65 7f 41 00       	mov    $0x417f65,%esi
  407646:	48 89 c7             	mov    %rax,%rdi
  407649:	b8 00 00 00 00       	mov    $0x0,%eax
  40764e:	e8 8b 90 00 00       	callq  4106de <ProgramFail>
  407653:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407657:	48 8b 90 f8 13 00 00 	mov    0x13f8(%rax),%rdx
  40765e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407662:	48 39 c2             	cmp    %rax,%rdx
  407665:	0f 84 11 01 00 00    	je     40777c <ParseDeclaration+0x1ca>
  40766b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40766f:	ba 00 00 00 00       	mov    $0x0,%edx
  407674:	be 00 00 00 00       	mov    $0x0,%esi
  407679:	48 89 c7             	mov    %rax,%rdi
  40767c:	e8 08 ea ff ff       	callq  406089 <LexGetToken>
  407681:	83 f8 2b             	cmp    $0x2b,%eax
  407684:	75 21                	jne    4076a7 <ParseDeclaration+0xf5>
  407686:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40768a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40768e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407692:	48 89 ce             	mov    %rcx,%rsi
  407695:	48 89 c7             	mov    %rax,%rdi
  407698:	e8 f4 f2 ff ff       	callq  406991 <ParseFunctionDefinition>
  40769d:	b8 00 00 00 00       	mov    $0x0,%eax
  4076a2:	e9 19 01 00 00       	jmpq   4077c0 <ParseDeclaration+0x20e>
  4076a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4076ab:	48 8d 90 c8 0c 00 00 	lea    0xcc8(%rax),%rdx
  4076b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4076b6:	48 39 c2             	cmp    %rax,%rdx
  4076b9:	75 2a                	jne    4076e5 <ParseDeclaration+0x133>
  4076bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4076bf:	48 8b 90 f8 13 00 00 	mov    0x13f8(%rax),%rdx
  4076c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4076ca:	48 39 c2             	cmp    %rax,%rdx
  4076cd:	74 16                	je     4076e5 <ParseDeclaration+0x133>
  4076cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4076d3:	be 79 7f 41 00       	mov    $0x417f79,%esi
  4076d8:	48 89 c7             	mov    %rax,%rdi
  4076db:	b8 00 00 00 00       	mov    $0x0,%eax
  4076e0:	e8 f9 8f 00 00       	callq  4106de <ProgramFail>
  4076e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4076e9:	8b 40 1c             	mov    0x1c(%rax),%eax
  4076ec:	85 c0                	test   %eax,%eax
  4076ee:	74 0c                	je     4076fc <ParseDeclaration+0x14a>
  4076f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4076f4:	8b 40 1c             	mov    0x1c(%rax),%eax
  4076f7:	83 f8 06             	cmp    $0x6,%eax
  4076fa:	75 22                	jne    40771e <ParseDeclaration+0x16c>
  4076fc:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  4076ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407703:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  407707:	48 8d 7d d0          	lea    -0x30(%rbp),%rdi
  40770b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40770f:	49 89 f8             	mov    %rdi,%r8
  407712:	48 89 c7             	mov    %rax,%rdi
  407715:	e8 36 7c 00 00       	callq  40f350 <VariableDefineButIgnoreIdentical>
  40771a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40771e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407722:	ba 00 00 00 00       	mov    $0x0,%edx
  407727:	be 00 00 00 00       	mov    $0x0,%esi
  40772c:	48 89 c7             	mov    %rax,%rdi
  40772f:	e8 55 e9 ff ff       	callq  406089 <LexGetToken>
  407734:	83 f8 02             	cmp    $0x2,%eax
  407737:	75 43                	jne    40777c <ParseDeclaration+0x1ca>
  407739:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40773d:	ba 01 00 00 00       	mov    $0x1,%edx
  407742:	be 00 00 00 00       	mov    $0x0,%esi
  407747:	48 89 c7             	mov    %rax,%rdi
  40774a:	e8 3a e9 ff ff       	callq  406089 <LexGetToken>
  40774f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  407752:	85 c0                	test   %eax,%eax
  407754:	74 07                	je     40775d <ParseDeclaration+0x1ab>
  407756:	8b 45 d0             	mov    -0x30(%rbp),%eax
  407759:	85 c0                	test   %eax,%eax
  40775b:	74 07                	je     407764 <ParseDeclaration+0x1b2>
  40775d:	ba 01 00 00 00       	mov    $0x1,%edx
  407762:	eb 05                	jmp    407769 <ParseDeclaration+0x1b7>
  407764:	ba 00 00 00 00       	mov    $0x0,%edx
  407769:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40776d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407771:	48 89 ce             	mov    %rcx,%rsi
  407774:	48 89 c7             	mov    %rax,%rdi
  407777:	e8 54 fd ff ff       	callq  4074d0 <ParseDeclarationAssignment>
  40777c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407780:	ba 00 00 00 00       	mov    $0x0,%edx
  407785:	be 00 00 00 00       	mov    $0x0,%esi
  40778a:	48 89 c7             	mov    %rax,%rdi
  40778d:	e8 f7 e8 ff ff       	callq  406089 <LexGetToken>
  407792:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  407795:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
  407799:	75 16                	jne    4077b1 <ParseDeclaration+0x1ff>
  40779b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40779f:	ba 01 00 00 00       	mov    $0x1,%edx
  4077a4:	be 00 00 00 00       	mov    $0x0,%esi
  4077a9:	48 89 c7             	mov    %rax,%rdi
  4077ac:	e8 d8 e8 ff ff       	callq  406089 <LexGetToken>
  4077b1:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
  4077b5:	0f 84 3e fe ff ff    	je     4075f9 <ParseDeclaration+0x47>
  4077bb:	b8 01 00 00 00       	mov    $0x1,%eax
  4077c0:	c9                   	leaveq 
  4077c1:	c3                   	retq   

00000000004077c2 <ParseMacroDefinition>:
  4077c2:	55                   	push   %rbp
  4077c3:	48 89 e5             	mov    %rsp,%rbp
  4077c6:	53                   	push   %rbx
  4077c7:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  4077ce:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  4077d5:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
  4077d9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4077e0:	ba 01 00 00 00       	mov    $0x1,%edx
  4077e5:	48 89 ce             	mov    %rcx,%rsi
  4077e8:	48 89 c7             	mov    %rax,%rdi
  4077eb:	e8 99 e8 ff ff       	callq  406089 <LexGetToken>
  4077f0:	83 f8 2d             	cmp    $0x2d,%eax
  4077f3:	74 19                	je     40780e <ParseMacroDefinition+0x4c>
  4077f5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4077fc:	be 65 7f 41 00       	mov    $0x417f65,%esi
  407801:	48 89 c7             	mov    %rax,%rdi
  407804:	b8 00 00 00 00       	mov    $0x0,%eax
  407809:	e8 d0 8e 00 00       	callq  4106de <ProgramFail>
  40780e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  407812:	48 8b 40 08          	mov    0x8(%rax),%rax
  407816:	48 8b 00             	mov    (%rax),%rax
  407819:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40781d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407824:	48 89 c7             	mov    %rax,%rdi
  407827:	e8 bc e9 ff ff       	callq  4061e8 <LexRawPeekToken>
  40782c:	83 f8 5c             	cmp    $0x5c,%eax
  40782f:	0f 85 8b 01 00 00    	jne    4079c0 <ParseMacroDefinition+0x1fe>
  407835:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40783c:	ba 01 00 00 00       	mov    $0x1,%edx
  407841:	be 00 00 00 00       	mov    $0x0,%esi
  407846:	48 89 c7             	mov    %rax,%rdi
  407849:	e8 3b e8 ff ff       	callq  406089 <LexGetToken>
  40784e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  407851:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  407858:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  40785f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  407866:	48 89 d6             	mov    %rdx,%rsi
  407869:	48 89 c7             	mov    %rax,%rdi
  40786c:	e8 88 02 00 00       	callq  407af9 <ParserCopy>
  407871:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  407878:	48 89 c7             	mov    %rax,%rdi
  40787b:	e8 9f f0 ff ff       	callq  40691f <ParseCountParams>
  407880:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  407883:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  407886:	48 98                	cltq   
  407888:	48 83 c0 0b          	add    $0xb,%rax
  40788c:	c1 e0 03             	shl    $0x3,%eax
  40788f:	89 c2                	mov    %eax,%edx
  407891:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407898:	48 8b 00             	mov    (%rax),%rax
  40789b:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  4078a2:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  4078a8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4078ae:	b9 00 00 00 00       	mov    $0x0,%ecx
  4078b3:	48 89 c7             	mov    %rax,%rdi
  4078b6:	e8 aa 72 00 00       	callq  40eb65 <VariableAllocValueAndData>
  4078bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4078bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4078c7:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  4078ca:	89 10                	mov    %edx,(%rax)
  4078cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078d0:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4078d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4078d8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4078dc:	48 83 c2 58          	add    $0x58,%rdx
  4078e0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4078e4:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  4078e8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4078ef:	ba 01 00 00 00       	mov    $0x1,%edx
  4078f4:	48 89 ce             	mov    %rcx,%rsi
  4078f7:	48 89 c7             	mov    %rax,%rdi
  4078fa:	e8 8a e7 ff ff       	callq  406089 <LexGetToken>
  4078ff:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  407902:	e9 8e 00 00 00       	jmpq   407995 <ParseMacroDefinition+0x1d3>
  407907:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40790b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40790f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407913:	48 8b 40 08          	mov    0x8(%rax),%rax
  407917:	48 8b 70 08          	mov    0x8(%rax),%rsi
  40791b:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40791e:	8d 48 01             	lea    0x1(%rax),%ecx
  407921:	89 4d e0             	mov    %ecx,-0x20(%rbp)
  407924:	48 98                	cltq   
  407926:	48 c1 e0 03          	shl    $0x3,%rax
  40792a:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
  40792e:	48 8b 02             	mov    (%rdx),%rax
  407931:	48 89 01             	mov    %rax,(%rcx)
  407934:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40793b:	ba 01 00 00 00       	mov    $0x1,%edx
  407940:	be 00 00 00 00       	mov    $0x0,%esi
  407945:	48 89 c7             	mov    %rax,%rdi
  407948:	e8 3c e7 ff ff       	callq  406089 <LexGetToken>
  40794d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  407950:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  407954:	75 20                	jne    407976 <ParseMacroDefinition+0x1b4>
  407956:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40795a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407961:	ba 01 00 00 00       	mov    $0x1,%edx
  407966:	48 89 ce             	mov    %rcx,%rsi
  407969:	48 89 c7             	mov    %rax,%rdi
  40796c:	e8 18 e7 ff ff       	callq  406089 <LexGetToken>
  407971:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  407974:	eb 1f                	jmp    407995 <ParseMacroDefinition+0x1d3>
  407976:	83 7d e4 2c          	cmpl   $0x2c,-0x1c(%rbp)
  40797a:	74 19                	je     407995 <ParseMacroDefinition+0x1d3>
  40797c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407983:	be 61 7e 41 00       	mov    $0x417e61,%esi
  407988:	48 89 c7             	mov    %rax,%rdi
  40798b:	b8 00 00 00 00       	mov    $0x0,%eax
  407990:	e8 49 8d 00 00       	callq  4106de <ProgramFail>
  407995:	83 7d e4 2d          	cmpl   $0x2d,-0x1c(%rbp)
  407999:	0f 84 68 ff ff ff    	je     407907 <ParseMacroDefinition+0x145>
  40799f:	83 7d e4 2c          	cmpl   $0x2c,-0x1c(%rbp)
  4079a3:	74 5c                	je     407a01 <ParseMacroDefinition+0x23f>
  4079a5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4079ac:	be 96 7f 41 00       	mov    $0x417f96,%esi
  4079b1:	48 89 c7             	mov    %rax,%rdi
  4079b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4079b9:	e8 20 8d 00 00       	callq  4106de <ProgramFail>
  4079be:	eb 41                	jmp    407a01 <ParseMacroDefinition+0x23f>
  4079c0:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4079c7:	48 8b 00             	mov    (%rax),%rax
  4079ca:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  4079d1:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  4079d7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4079dd:	b9 00 00 00 00       	mov    $0x0,%ecx
  4079e2:	ba 58 00 00 00       	mov    $0x58,%edx
  4079e7:	48 89 c7             	mov    %rax,%rdi
  4079ea:	e8 76 71 00 00       	callq  40eb65 <VariableAllocValueAndData>
  4079ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4079f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4079f7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4079fb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  407a01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a05:	48 8b 40 08          	mov    0x8(%rax),%rax
  407a09:	48 8d 50 10          	lea    0x10(%rax),%rdx
  407a0d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a14:	48 89 c6             	mov    %rax,%rsi
  407a17:	48 89 d7             	mov    %rdx,%rdi
  407a1a:	e8 da 00 00 00       	callq  407af9 <ParserCopy>
  407a1f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a26:	48 8b 00             	mov    (%rax),%rax
  407a29:	48 8d 90 88 0d 00 00 	lea    0xd88(%rax),%rdx
  407a30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a34:	48 89 10             	mov    %rdx,(%rax)
  407a37:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a3e:	48 89 c7             	mov    %rax,%rdi
  407a41:	e8 ba e7 ff ff       	callq  406200 <LexToEndOfLine>
  407a46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a4a:	48 8b 40 08          	mov    0x8(%rax),%rax
  407a4e:	48 8d 50 10          	lea    0x10(%rax),%rdx
  407a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407a56:	48 8b 58 08          	mov    0x8(%rax),%rbx
  407a5a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a61:	48 89 c6             	mov    %rax,%rsi
  407a64:	48 89 d7             	mov    %rdx,%rdi
  407a67:	e8 d8 e7 ff ff       	callq  406244 <LexCopyTokens>
  407a6c:	48 89 43 18          	mov    %rax,0x18(%rbx)
  407a70:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a77:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  407a7b:	0f bf f0             	movswl %ax,%esi
  407a7e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a85:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  407a89:	44 0f bf c0          	movswl %ax,%r8d
  407a8d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a94:	48 8b 78 10          	mov    0x10(%rax),%rdi
  407a98:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407a9f:	48 8b 00             	mov    (%rax),%rax
  407aa2:	49 89 c2             	mov    %rax,%r10
  407aa5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407aac:	48 8b 00             	mov    (%rax),%rax
  407aaf:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  407ab3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407ab7:	48 83 ec 08          	sub    $0x8,%rsp
  407abb:	56                   	push   %rsi
  407abc:	45 89 c1             	mov    %r8d,%r9d
  407abf:	49 89 f8             	mov    %rdi,%r8
  407ac2:	4c 89 d6             	mov    %r10,%rsi
  407ac5:	48 89 c7             	mov    %rax,%rdi
  407ac8:	e8 15 bd ff ff       	callq  4037e2 <TableSet>
  407acd:	48 83 c4 10          	add    $0x10,%rsp
  407ad1:	85 c0                	test   %eax,%eax
  407ad3:	75 1d                	jne    407af2 <ParseMacroDefinition+0x330>
  407ad5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  407ad9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  407ae0:	be fa 7e 41 00       	mov    $0x417efa,%esi
  407ae5:	48 89 c7             	mov    %rax,%rdi
  407ae8:	b8 00 00 00 00       	mov    $0x0,%eax
  407aed:	e8 ec 8b 00 00       	callq  4106de <ProgramFail>
  407af2:	90                   	nop
  407af3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  407af7:	c9                   	leaveq 
  407af8:	c3                   	retq   

0000000000407af9 <ParserCopy>:
  407af9:	55                   	push   %rbp
  407afa:	48 89 e5             	mov    %rsp,%rbp
  407afd:	48 83 ec 10          	sub    $0x10,%rsp
  407b01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407b05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407b09:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  407b0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b11:	ba 48 00 00 00       	mov    $0x48,%edx
  407b16:	48 89 ce             	mov    %rcx,%rsi
  407b19:	48 89 c7             	mov    %rax,%rdi
  407b1c:	e8 5f b3 ff ff       	callq  402e80 <memcpy@plt>
  407b21:	90                   	nop
  407b22:	c9                   	leaveq 
  407b23:	c3                   	retq   

0000000000407b24 <ParserCopyPos>:
  407b24:	55                   	push   %rbp
  407b25:	48 89 e5             	mov    %rsp,%rbp
  407b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  407b2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  407b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407b34:	48 8b 50 08          	mov    0x8(%rax),%rdx
  407b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b3c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  407b40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407b44:	0f b7 50 18          	movzwl 0x18(%rax),%edx
  407b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b4c:	66 89 50 18          	mov    %dx,0x18(%rax)
  407b50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407b54:	0f b7 50 38          	movzwl 0x38(%rax),%edx
  407b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b5c:	66 89 50 38          	mov    %dx,0x38(%rax)
  407b60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407b64:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
  407b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b6c:	66 89 50 3a          	mov    %dx,0x3a(%rax)
  407b70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  407b74:	0f b7 50 1a          	movzwl 0x1a(%rax),%edx
  407b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  407b7c:	66 89 50 1a          	mov    %dx,0x1a(%rax)
  407b80:	90                   	nop
  407b81:	5d                   	pop    %rbp
  407b82:	c3                   	retq   

0000000000407b83 <ParseFor>:
  407b83:	55                   	push   %rbp
  407b84:	48 89 e5             	mov    %rsp,%rbp
  407b87:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  407b8e:	48 89 bd 98 fe ff ff 	mov    %rdi,-0x168(%rbp)
  407b95:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407b9c:	8b 40 1c             	mov    0x1c(%rax),%eax
  407b9f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  407ba2:	c7 85 ac fe ff ff 00 	movl   $0x0,-0x154(%rbp)
  407ba9:	00 00 00 
  407bac:	48 8d 95 ac fe ff ff 	lea    -0x154(%rbp),%rdx
  407bb3:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407bba:	48 89 d6             	mov    %rdx,%rsi
  407bbd:	48 89 c7             	mov    %rax,%rdi
  407bc0:	e8 3d 73 00 00       	callq  40ef02 <VariableScopeBegin>
  407bc5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  407bc8:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407bcf:	ba 01 00 00 00       	mov    $0x1,%edx
  407bd4:	be 00 00 00 00       	mov    $0x0,%esi
  407bd9:	48 89 c7             	mov    %rax,%rdi
  407bdc:	e8 a8 e4 ff ff       	callq  406089 <LexGetToken>
  407be1:	83 f8 2b             	cmp    $0x2b,%eax
  407be4:	74 19                	je     407bff <ParseFor+0x7c>
  407be6:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407bed:	be ad 7f 41 00       	mov    $0x417fad,%esi
  407bf2:	48 89 c7             	mov    %rax,%rdi
  407bf5:	b8 00 00 00 00       	mov    $0x0,%eax
  407bfa:	e8 df 8a 00 00       	callq  4106de <ProgramFail>
  407bff:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407c06:	be 01 00 00 00       	mov    $0x1,%esi
  407c0b:	48 89 c7             	mov    %rax,%rdi
  407c0e:	e8 6b 04 00 00       	callq  40807e <ParseStatement>
  407c13:	83 f8 02             	cmp    $0x2,%eax
  407c16:	74 19                	je     407c31 <ParseFor+0xae>
  407c18:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407c1f:	be ba 7f 41 00       	mov    $0x417fba,%esi
  407c24:	48 89 c7             	mov    %rax,%rdi
  407c27:	b8 00 00 00 00       	mov    $0x0,%eax
  407c2c:	e8 ad 8a 00 00       	callq  4106de <ProgramFail>
  407c31:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  407c38:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
  407c3c:	48 89 d6             	mov    %rdx,%rsi
  407c3f:	48 89 c7             	mov    %rax,%rdi
  407c42:	e8 dd fe ff ff       	callq  407b24 <ParserCopyPos>
  407c47:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407c4e:	ba 00 00 00 00       	mov    $0x0,%edx
  407c53:	be 00 00 00 00       	mov    $0x0,%esi
  407c58:	48 89 c7             	mov    %rax,%rdi
  407c5b:	e8 29 e4 ff ff       	callq  406089 <LexGetToken>
  407c60:	83 f8 32             	cmp    $0x32,%eax
  407c63:	75 09                	jne    407c6e <ParseFor+0xeb>
  407c65:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  407c6c:	eb 12                	jmp    407c80 <ParseFor+0xfd>
  407c6e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407c75:	48 89 c7             	mov    %rax,%rdi
  407c78:	e8 54 50 00 00       	callq  40ccd1 <ExpressionParseInt>
  407c7d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407c80:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407c87:	ba 01 00 00 00       	mov    $0x1,%edx
  407c8c:	be 00 00 00 00       	mov    $0x0,%esi
  407c91:	48 89 c7             	mov    %rax,%rdi
  407c94:	e8 f0 e3 ff ff       	callq  406089 <LexGetToken>
  407c99:	83 f8 32             	cmp    $0x32,%eax
  407c9c:	74 19                	je     407cb7 <ParseFor+0x134>
  407c9e:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407ca5:	be cd 7f 41 00       	mov    $0x417fcd,%esi
  407caa:	48 89 c7             	mov    %rax,%rdi
  407cad:	b8 00 00 00 00       	mov    $0x0,%eax
  407cb2:	e8 27 8a 00 00       	callq  4106de <ProgramFail>
  407cb7:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  407cbe:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  407cc5:	48 89 d6             	mov    %rdx,%rsi
  407cc8:	48 89 c7             	mov    %rax,%rdi
  407ccb:	e8 54 fe ff ff       	callq  407b24 <ParserCopyPos>
  407cd0:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407cd7:	ba 00 00 00 00       	mov    $0x0,%edx
  407cdc:	be 00 00 00 00       	mov    $0x0,%esi
  407ce1:	48 89 c7             	mov    %rax,%rdi
  407ce4:	e8 c7 eb ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  407ce9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407cf0:	ba 01 00 00 00       	mov    $0x1,%edx
  407cf5:	be 00 00 00 00       	mov    $0x0,%esi
  407cfa:	48 89 c7             	mov    %rax,%rdi
  407cfd:	e8 87 e3 ff ff       	callq  406089 <LexGetToken>
  407d02:	83 f8 2c             	cmp    $0x2c,%eax
  407d05:	74 19                	je     407d20 <ParseFor+0x19d>
  407d07:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407d0e:	be da 7f 41 00       	mov    $0x417fda,%esi
  407d13:	48 89 c7             	mov    %rax,%rdi
  407d16:	b8 00 00 00 00       	mov    $0x0,%eax
  407d1b:	e8 be 89 00 00       	callq  4106de <ProgramFail>
  407d20:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  407d27:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
  407d2e:	48 89 d6             	mov    %rdx,%rsi
  407d31:	48 89 c7             	mov    %rax,%rdi
  407d34:	e8 eb fd ff ff       	callq  407b24 <ParserCopyPos>
  407d39:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  407d3c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407d43:	ba 01 00 00 00       	mov    $0x1,%edx
  407d48:	89 ce                	mov    %ecx,%esi
  407d4a:	48 89 c7             	mov    %rax,%rdi
  407d4d:	e8 5e eb ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  407d52:	83 f8 02             	cmp    $0x2,%eax
  407d55:	74 19                	je     407d70 <ParseFor+0x1ed>
  407d57:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407d5e:	be ba 7f 41 00       	mov    $0x417fba,%esi
  407d63:	48 89 c7             	mov    %rax,%rdi
  407d66:	b8 00 00 00 00       	mov    $0x0,%eax
  407d6b:	e8 6e 89 00 00       	callq  4106de <ProgramFail>
  407d70:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407d77:	8b 40 1c             	mov    0x1c(%rax),%eax
  407d7a:	83 f8 05             	cmp    $0x5,%eax
  407d7d:	75 14                	jne    407d93 <ParseFor+0x210>
  407d7f:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  407d83:	75 0e                	jne    407d93 <ParseFor+0x210>
  407d85:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407d8c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  407d93:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
  407d9a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
  407da1:	48 89 d6             	mov    %rdx,%rsi
  407da4:	48 89 c7             	mov    %rax,%rdi
  407da7:	e8 78 fd ff ff       	callq  407b24 <ParserCopyPos>
  407dac:	e9 cc 00 00 00       	jmpq   407e7d <ParseFor+0x2fa>
  407db1:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  407db8:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407dbf:	48 89 d6             	mov    %rdx,%rsi
  407dc2:	48 89 c7             	mov    %rax,%rdi
  407dc5:	e8 5a fd ff ff       	callq  407b24 <ParserCopyPos>
  407dca:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407dd1:	be 00 00 00 00       	mov    $0x0,%esi
  407dd6:	48 89 c7             	mov    %rax,%rdi
  407dd9:	e8 a0 02 00 00       	callq  40807e <ParseStatement>
  407dde:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
  407de2:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407de9:	48 89 d6             	mov    %rdx,%rsi
  407dec:	48 89 c7             	mov    %rax,%rdi
  407def:	e8 30 fd ff ff       	callq  407b24 <ParserCopyPos>
  407df4:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407dfb:	ba 00 00 00 00       	mov    $0x0,%edx
  407e00:	be 00 00 00 00       	mov    $0x0,%esi
  407e05:	48 89 c7             	mov    %rax,%rdi
  407e08:	e8 7c e2 ff ff       	callq  406089 <LexGetToken>
  407e0d:	83 f8 32             	cmp    $0x32,%eax
  407e10:	75 09                	jne    407e1b <ParseFor+0x298>
  407e12:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  407e19:	eb 12                	jmp    407e2d <ParseFor+0x2aa>
  407e1b:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e22:	48 89 c7             	mov    %rax,%rdi
  407e25:	e8 a7 4e 00 00       	callq  40ccd1 <ExpressionParseInt>
  407e2a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407e2d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  407e31:	74 4a                	je     407e7d <ParseFor+0x2fa>
  407e33:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
  407e3a:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e41:	48 89 d6             	mov    %rdx,%rsi
  407e44:	48 89 c7             	mov    %rax,%rdi
  407e47:	e8 d8 fc ff ff       	callq  407b24 <ParserCopyPos>
  407e4c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e53:	be 01 00 00 00       	mov    $0x1,%esi
  407e58:	48 89 c7             	mov    %rax,%rdi
  407e5b:	e8 1e 02 00 00       	callq  40807e <ParseStatement>
  407e60:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e67:	8b 40 1c             	mov    0x1c(%rax),%eax
  407e6a:	83 f8 05             	cmp    $0x5,%eax
  407e6d:	75 0e                	jne    407e7d <ParseFor+0x2fa>
  407e6f:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e76:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  407e7d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  407e81:	74 12                	je     407e95 <ParseFor+0x312>
  407e83:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e8a:	8b 40 1c             	mov    0x1c(%rax),%eax
  407e8d:	85 c0                	test   %eax,%eax
  407e8f:	0f 84 1c ff ff ff    	je     407db1 <ParseFor+0x22e>
  407e95:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407e9c:	8b 40 1c             	mov    0x1c(%rax),%eax
  407e9f:	83 f8 04             	cmp    $0x4,%eax
  407ea2:	75 14                	jne    407eb8 <ParseFor+0x335>
  407ea4:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  407ea8:	75 0e                	jne    407eb8 <ParseFor+0x335>
  407eaa:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407eb1:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  407eb8:	8b 95 ac fe ff ff    	mov    -0x154(%rbp),%edx
  407ebe:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  407ec1:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407ec8:	89 ce                	mov    %ecx,%esi
  407eca:	48 89 c7             	mov    %rax,%rdi
  407ecd:	e8 64 71 00 00       	callq  40f036 <VariableScopeEnd>
  407ed2:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
  407ed9:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  407ee0:	48 89 d6             	mov    %rdx,%rsi
  407ee3:	48 89 c7             	mov    %rax,%rdi
  407ee6:	e8 39 fc ff ff       	callq  407b24 <ParserCopyPos>
  407eeb:	90                   	nop
  407eec:	c9                   	leaveq 
  407eed:	c3                   	retq   

0000000000407eee <ParseBlock>:
  407eee:	55                   	push   %rbp
  407eef:	48 89 e5             	mov    %rsp,%rbp
  407ef2:	48 83 ec 20          	sub    $0x20,%rsp
  407ef6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  407efa:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  407efd:	89 55 e0             	mov    %edx,-0x20(%rbp)
  407f00:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  407f07:	48 8d 55 f4          	lea    -0xc(%rbp),%rdx
  407f0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f0f:	48 89 d6             	mov    %rdx,%rsi
  407f12:	48 89 c7             	mov    %rax,%rdi
  407f15:	e8 e8 6f 00 00       	callq  40ef02 <VariableScopeBegin>
  407f1a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  407f1d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  407f21:	74 31                	je     407f54 <ParseBlock+0x66>
  407f23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f27:	ba 01 00 00 00       	mov    $0x1,%edx
  407f2c:	be 00 00 00 00       	mov    $0x0,%esi
  407f31:	48 89 c7             	mov    %rax,%rdi
  407f34:	e8 50 e1 ff ff       	callq  406089 <LexGetToken>
  407f39:	83 f8 34             	cmp    $0x34,%eax
  407f3c:	74 16                	je     407f54 <ParseBlock+0x66>
  407f3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f42:	be e7 7f 41 00       	mov    $0x417fe7,%esi
  407f47:	48 89 c7             	mov    %rax,%rdi
  407f4a:	b8 00 00 00 00       	mov    $0x0,%eax
  407f4f:	e8 8a 87 00 00       	callq  4106de <ProgramFail>
  407f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f58:	8b 40 1c             	mov    0x1c(%rax),%eax
  407f5b:	83 f8 01             	cmp    $0x1,%eax
  407f5e:	74 06                	je     407f66 <ParseBlock+0x78>
  407f60:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  407f64:	75 38                	jne    407f9e <ParseBlock+0xb0>
  407f66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f6a:	8b 40 1c             	mov    0x1c(%rax),%eax
  407f6d:	89 45 f8             	mov    %eax,-0x8(%rbp)
  407f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f74:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%rax)
  407f7b:	90                   	nop
  407f7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f80:	be 01 00 00 00       	mov    $0x1,%esi
  407f85:	48 89 c7             	mov    %rax,%rdi
  407f88:	e8 f1 00 00 00       	callq  40807e <ParseStatement>
  407f8d:	83 f8 02             	cmp    $0x2,%eax
  407f90:	74 ea                	je     407f7c <ParseBlock+0x8e>
  407f92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407f96:	8b 55 f8             	mov    -0x8(%rbp),%edx
  407f99:	89 50 1c             	mov    %edx,0x1c(%rax)
  407f9c:	eb 17                	jmp    407fb5 <ParseBlock+0xc7>
  407f9e:	90                   	nop
  407f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407fa3:	be 01 00 00 00       	mov    $0x1,%esi
  407fa8:	48 89 c7             	mov    %rax,%rdi
  407fab:	e8 ce 00 00 00       	callq  40807e <ParseStatement>
  407fb0:	83 f8 02             	cmp    $0x2,%eax
  407fb3:	74 ea                	je     407f9f <ParseBlock+0xb1>
  407fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407fb9:	ba 01 00 00 00       	mov    $0x1,%edx
  407fbe:	be 00 00 00 00       	mov    $0x0,%esi
  407fc3:	48 89 c7             	mov    %rax,%rdi
  407fc6:	e8 be e0 ff ff       	callq  406089 <LexGetToken>
  407fcb:	83 f8 35             	cmp    $0x35,%eax
  407fce:	74 16                	je     407fe6 <ParseBlock+0xf8>
  407fd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407fd4:	be 58 7f 41 00       	mov    $0x417f58,%esi
  407fd9:	48 89 c7             	mov    %rax,%rdi
  407fdc:	b8 00 00 00 00       	mov    $0x0,%eax
  407fe1:	e8 f8 86 00 00       	callq  4106de <ProgramFail>
  407fe6:	8b 55 f4             	mov    -0xc(%rbp),%edx
  407fe9:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  407fec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407ff0:	89 ce                	mov    %ecx,%esi
  407ff2:	48 89 c7             	mov    %rax,%rdi
  407ff5:	e8 3c 70 00 00       	callq  40f036 <VariableScopeEnd>
  407ffa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  407ffe:	8b 40 1c             	mov    0x1c(%rax),%eax
  408001:	c9                   	leaveq 
  408002:	c3                   	retq   

0000000000408003 <ParseTypedef>:
  408003:	55                   	push   %rbp
  408004:	48 89 e5             	mov    %rsp,%rbp
  408007:	48 83 ec 50          	sub    $0x50,%rsp
  40800b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  40800f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  408013:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
  408017:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40801b:	b9 00 00 00 00       	mov    $0x0,%ecx
  408020:	48 89 c7             	mov    %rax,%rdi
  408023:	e8 fe 67 00 00       	callq  40e826 <TypeParse>
  408028:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40802c:	8b 40 1c             	mov    0x1c(%rax),%eax
  40802f:	85 c0                	test   %eax,%eax
  408031:	75 48                	jne    40807b <ParseTypedef+0x78>
  408033:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  408037:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40803b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40803f:	48 8b 00             	mov    (%rax),%rax
  408042:	48 05 08 0d 00 00    	add    $0xd08,%rax
  408048:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40804c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  408050:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  408054:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  408058:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40805c:	48 8b 00             	mov    (%rax),%rax
  40805f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  408063:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  408067:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40806d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  408073:	48 89 c7             	mov    %rax,%rdi
  408076:	e8 5e 71 00 00       	callq  40f1d9 <VariableDefine>
  40807b:	90                   	nop
  40807c:	c9                   	leaveq 
  40807d:	c3                   	retq   

000000000040807e <ParseStatement>:
  40807e:	55                   	push   %rbp
  40807f:	48 89 e5             	mov    %rsp,%rbp
  408082:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  408089:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  408090:	89 b5 24 ff ff ff    	mov    %esi,-0xdc(%rbp)
  408096:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40809d:	0f b6 40 3c          	movzbl 0x3c(%rax),%eax
  4080a1:	84 c0                	test   %al,%al
  4080a3:	74 1d                	je     4080c2 <ParseStatement+0x44>
  4080a5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4080ac:	8b 40 1c             	mov    0x1c(%rax),%eax
  4080af:	85 c0                	test   %eax,%eax
  4080b1:	75 0f                	jne    4080c2 <ParseStatement+0x44>
  4080b3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4080ba:	48 89 c7             	mov    %rax,%rdi
  4080bd:	e8 52 95 00 00       	callq  411614 <DebugCheckStatement>
  4080c2:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  4080c9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  4080cd:	48 89 d6             	mov    %rdx,%rsi
  4080d0:	48 89 c7             	mov    %rax,%rdi
  4080d3:	e8 21 fa ff ff       	callq  407af9 <ParserCopy>
  4080d8:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4080dc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4080e3:	ba 01 00 00 00       	mov    $0x1,%edx
  4080e8:	48 89 ce             	mov    %rcx,%rsi
  4080eb:	48 89 c7             	mov    %rax,%rdi
  4080ee:	e8 96 df ff ff       	callq  406089 <LexGetToken>
  4080f3:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4080f6:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4080f9:	83 e8 13             	sub    $0x13,%eax
  4080fc:	83 f8 4a             	cmp    $0x4a,%eax
  4080ff:	0f 87 ca 0c 00 00    	ja     408dcf <ParseStatement+0xd51>
  408105:	89 c0                	mov    %eax,%eax
  408107:	48 8b 04 c5 88 80 41 	mov    0x418088(,%rax,8),%rax
  40810e:	00 
  40810f:	ff e0                	jmpq   *%rax
  408111:	b8 00 00 00 00       	mov    $0x0,%eax
  408116:	e9 5e 0d 00 00       	jmpq   408e79 <ParseStatement+0xdfb>
  40811b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40811f:	48 8b 40 08          	mov    0x8(%rax),%rax
  408123:	48 8b 10             	mov    (%rax),%rdx
  408126:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40812d:	48 8b 00             	mov    (%rax),%rax
  408130:	48 89 d6             	mov    %rdx,%rsi
  408133:	48 89 c7             	mov    %rax,%rdi
  408136:	e8 c4 75 00 00       	callq  40f6ff <VariableDefined>
  40813b:	85 c0                	test   %eax,%eax
  40813d:	0f 84 a1 00 00 00    	je     4081e4 <ParseStatement+0x166>
  408143:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408147:	48 8b 40 08          	mov    0x8(%rax),%rax
  40814b:	48 8b 10             	mov    (%rax),%rdx
  40814e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408155:	48 8b 00             	mov    (%rax),%rax
  408158:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
  40815c:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
  408163:	48 89 c7             	mov    %rax,%rdi
  408166:	e8 1f 76 00 00       	callq  40f78a <VariableGet>
  40816b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40816f:	48 8b 00             	mov    (%rax),%rax
  408172:	8b 00                	mov    (%rax),%eax
  408174:	83 f8 11             	cmp    $0x11,%eax
  408177:	0f 85 e9 00 00 00    	jne    408266 <ParseStatement+0x1e8>
  40817d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408184:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  408188:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  40818c:	48 89 10             	mov    %rdx,(%rax)
  40818f:	48 89 48 08          	mov    %rcx,0x8(%rax)
  408193:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  408197:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  40819b:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40819f:	48 89 48 18          	mov    %rcx,0x18(%rax)
  4081a3:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  4081a7:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  4081ab:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4081af:	48 89 48 28          	mov    %rcx,0x28(%rax)
  4081b3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4081b7:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4081bb:	48 89 50 30          	mov    %rdx,0x30(%rax)
  4081bf:	48 89 48 38          	mov    %rcx,0x38(%rax)
  4081c3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4081c7:	48 89 50 40          	mov    %rdx,0x40(%rax)
  4081cb:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4081ce:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4081d5:	89 d6                	mov    %edx,%esi
  4081d7:	48 89 c7             	mov    %rax,%rdi
  4081da:	e8 d3 f3 ff ff       	callq  4075b2 <ParseDeclaration>
  4081df:	e9 50 0c 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  4081e4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4081eb:	ba 00 00 00 00       	mov    $0x0,%edx
  4081f0:	be 00 00 00 00       	mov    $0x0,%esi
  4081f5:	48 89 c7             	mov    %rax,%rdi
  4081f8:	e8 8c de ff ff       	callq  406089 <LexGetToken>
  4081fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  408200:	83 7d e4 0e          	cmpl   $0xe,-0x1c(%rbp)
  408204:	75 60                	jne    408266 <ParseStatement+0x1e8>
  408206:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40820d:	ba 01 00 00 00       	mov    $0x1,%edx
  408212:	be 00 00 00 00       	mov    $0x0,%esi
  408217:	48 89 c7             	mov    %rax,%rdi
  40821a:	e8 6a de ff ff       	callq  406089 <LexGetToken>
  40821f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408226:	8b 40 1c             	mov    0x1c(%rax),%eax
  408229:	83 f8 06             	cmp    $0x6,%eax
  40822c:	75 29                	jne    408257 <ParseStatement+0x1d9>
  40822e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408232:	48 8b 40 08          	mov    0x8(%rax),%rax
  408236:	48 8b 10             	mov    (%rax),%rdx
  408239:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408240:	48 8b 40 28          	mov    0x28(%rax),%rax
  408244:	48 39 c2             	cmp    %rax,%rdx
  408247:	75 0e                	jne    408257 <ParseStatement+0x1d9>
  408249:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408250:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  408257:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  40825e:	00 00 00 
  408261:	e9 ce 0b 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408266:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40826d:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  408271:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  408275:	48 89 10             	mov    %rdx,(%rax)
  408278:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40827c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  408280:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  408284:	48 89 50 10          	mov    %rdx,0x10(%rax)
  408288:	48 89 48 18          	mov    %rcx,0x18(%rax)
  40828c:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  408290:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  408294:	48 89 50 20          	mov    %rdx,0x20(%rax)
  408298:	48 89 48 28          	mov    %rcx,0x28(%rax)
  40829c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  4082a0:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  4082a4:	48 89 50 30          	mov    %rdx,0x30(%rax)
  4082a8:	48 89 48 38          	mov    %rcx,0x38(%rax)
  4082ac:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4082b0:	48 89 50 40          	mov    %rdx,0x40(%rax)
  4082b4:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  4082b8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4082bf:	48 89 d6             	mov    %rdx,%rsi
  4082c2:	48 89 c7             	mov    %rax,%rdi
  4082c5:	e8 96 35 00 00       	callq  40b860 <ExpressionParse>
  4082ca:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4082d1:	8b 40 1c             	mov    0x1c(%rax),%eax
  4082d4:	85 c0                	test   %eax,%eax
  4082d6:	0f 85 48 0b 00 00    	jne    408e24 <ParseStatement+0xda6>
  4082dc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4082e0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4082e7:	48 89 d6             	mov    %rdx,%rsi
  4082ea:	48 89 c7             	mov    %rax,%rdi
  4082ed:	e8 a9 76 00 00       	callq  40f99b <VariableStackPop>
  4082f2:	e9 2d 0b 00 00       	jmpq   408e24 <ParseStatement+0xda6>
  4082f7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4082fe:	ba 01 00 00 00       	mov    $0x1,%edx
  408303:	be 00 00 00 00       	mov    $0x0,%esi
  408308:	48 89 c7             	mov    %rax,%rdi
  40830b:	e8 de fb ff ff       	callq  407eee <ParseBlock>
  408310:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408317:	00 00 00 
  40831a:	e9 15 0b 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  40831f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408326:	ba 01 00 00 00       	mov    $0x1,%edx
  40832b:	be 00 00 00 00       	mov    $0x0,%esi
  408330:	48 89 c7             	mov    %rax,%rdi
  408333:	e8 51 dd ff ff       	callq  406089 <LexGetToken>
  408338:	83 f8 2b             	cmp    $0x2b,%eax
  40833b:	74 19                	je     408356 <ParseStatement+0x2d8>
  40833d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408344:	be ad 7f 41 00       	mov    $0x417fad,%esi
  408349:	48 89 c7             	mov    %rax,%rdi
  40834c:	b8 00 00 00 00       	mov    $0x0,%eax
  408351:	e8 88 83 00 00       	callq  4106de <ProgramFail>
  408356:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40835d:	48 89 c7             	mov    %rax,%rdi
  408360:	e8 6c 49 00 00       	callq  40ccd1 <ExpressionParseInt>
  408365:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408368:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40836f:	ba 01 00 00 00       	mov    $0x1,%edx
  408374:	be 00 00 00 00       	mov    $0x0,%esi
  408379:	48 89 c7             	mov    %rax,%rdi
  40837c:	e8 08 dd ff ff       	callq  406089 <LexGetToken>
  408381:	83 f8 2c             	cmp    $0x2c,%eax
  408384:	74 19                	je     40839f <ParseStatement+0x321>
  408386:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40838d:	be da 7f 41 00       	mov    $0x417fda,%esi
  408392:	48 89 c7             	mov    %rax,%rdi
  408395:	b8 00 00 00 00       	mov    $0x0,%eax
  40839a:	e8 3f 83 00 00       	callq  4106de <ProgramFail>
  40839f:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  4083a2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4083a9:	ba 01 00 00 00       	mov    $0x1,%edx
  4083ae:	89 ce                	mov    %ecx,%esi
  4083b0:	48 89 c7             	mov    %rax,%rdi
  4083b3:	e8 f8 e4 ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  4083b8:	83 f8 02             	cmp    $0x2,%eax
  4083bb:	74 19                	je     4083d6 <ParseStatement+0x358>
  4083bd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4083c4:	be ba 7f 41 00       	mov    $0x417fba,%esi
  4083c9:	48 89 c7             	mov    %rax,%rdi
  4083cc:	b8 00 00 00 00       	mov    $0x0,%eax
  4083d1:	e8 08 83 00 00       	callq  4106de <ProgramFail>
  4083d6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4083dd:	ba 00 00 00 00       	mov    $0x0,%edx
  4083e2:	be 00 00 00 00       	mov    $0x0,%esi
  4083e7:	48 89 c7             	mov    %rax,%rdi
  4083ea:	e8 9a dc ff ff       	callq  406089 <LexGetToken>
  4083ef:	83 f8 49             	cmp    $0x49,%eax
  4083f2:	75 57                	jne    40844b <ParseStatement+0x3cd>
  4083f4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4083fb:	ba 01 00 00 00       	mov    $0x1,%edx
  408400:	be 00 00 00 00       	mov    $0x0,%esi
  408405:	48 89 c7             	mov    %rax,%rdi
  408408:	e8 7c dc ff ff       	callq  406089 <LexGetToken>
  40840d:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  408411:	0f 94 c0             	sete   %al
  408414:	0f b6 c8             	movzbl %al,%ecx
  408417:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40841e:	ba 01 00 00 00       	mov    $0x1,%edx
  408423:	89 ce                	mov    %ecx,%esi
  408425:	48 89 c7             	mov    %rax,%rdi
  408428:	e8 83 e4 ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  40842d:	83 f8 02             	cmp    $0x2,%eax
  408430:	74 19                	je     40844b <ParseStatement+0x3cd>
  408432:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408439:	be ba 7f 41 00       	mov    $0x417fba,%esi
  40843e:	48 89 c7             	mov    %rax,%rdi
  408441:	b8 00 00 00 00       	mov    $0x0,%eax
  408446:	e8 93 82 00 00       	callq  4106de <ProgramFail>
  40844b:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408452:	00 00 00 
  408455:	e9 da 09 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  40845a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408461:	8b 40 1c             	mov    0x1c(%rax),%eax
  408464:	89 45 ec             	mov    %eax,-0x14(%rbp)
  408467:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40846e:	ba 01 00 00 00       	mov    $0x1,%edx
  408473:	be 00 00 00 00       	mov    $0x0,%esi
  408478:	48 89 c7             	mov    %rax,%rdi
  40847b:	e8 09 dc ff ff       	callq  406089 <LexGetToken>
  408480:	83 f8 2b             	cmp    $0x2b,%eax
  408483:	74 19                	je     40849e <ParseStatement+0x420>
  408485:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40848c:	be ad 7f 41 00       	mov    $0x417fad,%esi
  408491:	48 89 c7             	mov    %rax,%rdi
  408494:	b8 00 00 00 00       	mov    $0x0,%eax
  408499:	e8 40 82 00 00       	callq  4106de <ProgramFail>
  40849e:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  4084a5:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4084ac:	48 89 d6             	mov    %rdx,%rsi
  4084af:	48 89 c7             	mov    %rax,%rdi
  4084b2:	e8 6d f6 ff ff       	callq  407b24 <ParserCopyPos>
  4084b7:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  4084be:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4084c5:	48 89 d6             	mov    %rdx,%rsi
  4084c8:	48 89 c7             	mov    %rax,%rdi
  4084cb:	e8 54 f6 ff ff       	callq  407b24 <ParserCopyPos>
  4084d0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4084d7:	48 89 c7             	mov    %rax,%rdi
  4084da:	e8 f2 47 00 00       	callq  40ccd1 <ExpressionParseInt>
  4084df:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4084e2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4084e9:	ba 01 00 00 00       	mov    $0x1,%edx
  4084ee:	be 00 00 00 00       	mov    $0x0,%esi
  4084f3:	48 89 c7             	mov    %rax,%rdi
  4084f6:	e8 8e db ff ff       	callq  406089 <LexGetToken>
  4084fb:	83 f8 2c             	cmp    $0x2c,%eax
  4084fe:	74 19                	je     408519 <ParseStatement+0x49b>
  408500:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408507:	be da 7f 41 00       	mov    $0x417fda,%esi
  40850c:	48 89 c7             	mov    %rax,%rdi
  40850f:	b8 00 00 00 00       	mov    $0x0,%eax
  408514:	e8 c5 81 00 00       	callq  4106de <ProgramFail>
  408519:	8b 4d fc             	mov    -0x4(%rbp),%ecx
  40851c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408523:	ba 01 00 00 00       	mov    $0x1,%edx
  408528:	89 ce                	mov    %ecx,%esi
  40852a:	48 89 c7             	mov    %rax,%rdi
  40852d:	e8 7e e3 ff ff       	callq  4068b0 <ParseStatementMaybeRun>
  408532:	83 f8 02             	cmp    $0x2,%eax
  408535:	74 19                	je     408550 <ParseStatement+0x4d2>
  408537:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40853e:	be ba 7f 41 00       	mov    $0x417fba,%esi
  408543:	48 89 c7             	mov    %rax,%rdi
  408546:	b8 00 00 00 00       	mov    $0x0,%eax
  40854b:	e8 8e 81 00 00       	callq  4106de <ProgramFail>
  408550:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408557:	8b 40 1c             	mov    0x1c(%rax),%eax
  40855a:	83 f8 05             	cmp    $0x5,%eax
  40855d:	75 0d                	jne    40856c <ParseStatement+0x4ee>
  40855f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408566:	8b 55 ec             	mov    -0x14(%rbp),%edx
  408569:	89 50 1c             	mov    %edx,0x1c(%rax)
  40856c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408573:	8b 40 1c             	mov    0x1c(%rax),%eax
  408576:	85 c0                	test   %eax,%eax
  408578:	75 0a                	jne    408584 <ParseStatement+0x506>
  40857a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40857e:	0f 85 33 ff ff ff    	jne    4084b7 <ParseStatement+0x439>
  408584:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40858b:	8b 40 1c             	mov    0x1c(%rax),%eax
  40858e:	83 f8 04             	cmp    $0x4,%eax
  408591:	75 0d                	jne    4085a0 <ParseStatement+0x522>
  408593:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40859a:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40859d:	89 50 1c             	mov    %edx,0x1c(%rax)
  4085a0:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  4085a7:	00 00 00 
  4085aa:	e9 85 08 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  4085af:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4085b6:	8b 40 1c             	mov    0x1c(%rax),%eax
  4085b9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4085bc:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  4085c3:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4085ca:	48 89 d6             	mov    %rdx,%rsi
  4085cd:	48 89 c7             	mov    %rax,%rdi
  4085d0:	e8 4f f5 ff ff       	callq  407b24 <ParserCopyPos>
  4085d5:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  4085dc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4085e3:	48 89 d6             	mov    %rdx,%rsi
  4085e6:	48 89 c7             	mov    %rax,%rdi
  4085e9:	e8 36 f5 ff ff       	callq  407b24 <ParserCopyPos>
  4085ee:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4085f5:	be 01 00 00 00       	mov    $0x1,%esi
  4085fa:	48 89 c7             	mov    %rax,%rdi
  4085fd:	e8 7c fa ff ff       	callq  40807e <ParseStatement>
  408602:	83 f8 02             	cmp    $0x2,%eax
  408605:	74 19                	je     408620 <ParseStatement+0x5a2>
  408607:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40860e:	be ba 7f 41 00       	mov    $0x417fba,%esi
  408613:	48 89 c7             	mov    %rax,%rdi
  408616:	b8 00 00 00 00       	mov    $0x0,%eax
  40861b:	e8 be 80 00 00       	callq  4106de <ProgramFail>
  408620:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408627:	8b 40 1c             	mov    0x1c(%rax),%eax
  40862a:	83 f8 05             	cmp    $0x5,%eax
  40862d:	75 0d                	jne    40863c <ParseStatement+0x5be>
  40862f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408636:	8b 55 e8             	mov    -0x18(%rbp),%edx
  408639:	89 50 1c             	mov    %edx,0x1c(%rax)
  40863c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408643:	ba 01 00 00 00       	mov    $0x1,%edx
  408648:	be 00 00 00 00       	mov    $0x0,%esi
  40864d:	48 89 c7             	mov    %rax,%rdi
  408650:	e8 34 da ff ff       	callq  406089 <LexGetToken>
  408655:	83 f8 4d             	cmp    $0x4d,%eax
  408658:	74 19                	je     408673 <ParseStatement+0x5f5>
  40865a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408661:	be f4 7f 41 00       	mov    $0x417ff4,%esi
  408666:	48 89 c7             	mov    %rax,%rdi
  408669:	b8 00 00 00 00       	mov    $0x0,%eax
  40866e:	e8 6b 80 00 00       	callq  4106de <ProgramFail>
  408673:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40867a:	ba 01 00 00 00       	mov    $0x1,%edx
  40867f:	be 00 00 00 00       	mov    $0x0,%esi
  408684:	48 89 c7             	mov    %rax,%rdi
  408687:	e8 fd d9 ff ff       	callq  406089 <LexGetToken>
  40868c:	83 f8 2b             	cmp    $0x2b,%eax
  40868f:	74 19                	je     4086aa <ParseStatement+0x62c>
  408691:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408698:	be ad 7f 41 00       	mov    $0x417fad,%esi
  40869d:	48 89 c7             	mov    %rax,%rdi
  4086a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4086a5:	e8 34 80 00 00       	callq  4106de <ProgramFail>
  4086aa:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4086b1:	48 89 c7             	mov    %rax,%rdi
  4086b4:	e8 18 46 00 00       	callq  40ccd1 <ExpressionParseInt>
  4086b9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4086bc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4086c3:	ba 01 00 00 00       	mov    $0x1,%edx
  4086c8:	be 00 00 00 00       	mov    $0x0,%esi
  4086cd:	48 89 c7             	mov    %rax,%rdi
  4086d0:	e8 b4 d9 ff ff       	callq  406089 <LexGetToken>
  4086d5:	83 f8 2c             	cmp    $0x2c,%eax
  4086d8:	74 19                	je     4086f3 <ParseStatement+0x675>
  4086da:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4086e1:	be da 7f 41 00       	mov    $0x417fda,%esi
  4086e6:	48 89 c7             	mov    %rax,%rdi
  4086e9:	b8 00 00 00 00       	mov    $0x0,%eax
  4086ee:	e8 eb 7f 00 00       	callq  4106de <ProgramFail>
  4086f3:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4086f7:	74 12                	je     40870b <ParseStatement+0x68d>
  4086f9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408700:	8b 40 1c             	mov    0x1c(%rax),%eax
  408703:	85 c0                	test   %eax,%eax
  408705:	0f 84 ca fe ff ff    	je     4085d5 <ParseStatement+0x557>
  40870b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408712:	8b 40 1c             	mov    0x1c(%rax),%eax
  408715:	83 f8 04             	cmp    $0x4,%eax
  408718:	0f 85 09 07 00 00    	jne    408e27 <ParseStatement+0xda9>
  40871e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408725:	8b 55 e8             	mov    -0x18(%rbp),%edx
  408728:	89 50 1c             	mov    %edx,0x1c(%rax)
  40872b:	e9 f7 06 00 00       	jmpq   408e27 <ParseStatement+0xda9>
  408730:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408737:	48 89 c7             	mov    %rax,%rdi
  40873a:	e8 44 f4 ff ff       	callq  407b83 <ParseFor>
  40873f:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408746:	00 00 00 
  408749:	e9 e6 06 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  40874e:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408755:	00 00 00 
  408758:	e9 d7 06 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  40875d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408764:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  408768:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  40876c:	48 89 10             	mov    %rdx,(%rax)
  40876f:	48 89 48 08          	mov    %rcx,0x8(%rax)
  408773:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  408777:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  40877b:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40877f:	48 89 48 18          	mov    %rcx,0x18(%rax)
  408783:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  408787:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  40878b:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40878f:	48 89 48 28          	mov    %rcx,0x28(%rax)
  408793:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  408797:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  40879b:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40879f:	48 89 48 38          	mov    %rcx,0x38(%rax)
  4087a3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4087a7:	48 89 50 40          	mov    %rdx,0x40(%rax)
  4087ab:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4087ae:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4087b5:	89 d6                	mov    %edx,%esi
  4087b7:	48 89 c7             	mov    %rax,%rdi
  4087ba:	e8 f3 ed ff ff       	callq  4075b2 <ParseDeclaration>
  4087bf:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  4087c5:	e9 6a 06 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  4087ca:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4087d1:	48 89 c7             	mov    %rax,%rdi
  4087d4:	e8 e9 ef ff ff       	callq  4077c2 <ParseMacroDefinition>
  4087d9:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  4087e0:	00 00 00 
  4087e3:	e9 4c 06 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  4087e8:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  4087ec:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4087f3:	ba 01 00 00 00       	mov    $0x1,%edx
  4087f8:	48 89 ce             	mov    %rcx,%rsi
  4087fb:	48 89 c7             	mov    %rax,%rdi
  4087fe:	e8 86 d8 ff ff       	callq  406089 <LexGetToken>
  408803:	83 f8 30             	cmp    $0x30,%eax
  408806:	74 19                	je     408821 <ParseStatement+0x7a3>
  408808:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40880f:	be 05 80 41 00       	mov    $0x418005,%esi
  408814:	48 89 c7             	mov    %rax,%rdi
  408817:	b8 00 00 00 00       	mov    $0x0,%eax
  40881c:	e8 bd 7e 00 00       	callq  4106de <ProgramFail>
  408821:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408825:	48 8b 40 08          	mov    0x8(%rax),%rax
  408829:	48 8b 10             	mov    (%rax),%rdx
  40882c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408833:	48 8b 00             	mov    (%rax),%rax
  408836:	48 89 d6             	mov    %rdx,%rsi
  408839:	48 89 c7             	mov    %rax,%rdi
  40883c:	e8 be 88 00 00       	callq  4110ff <IncludeFile>
  408841:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408848:	00 00 00 
  40884b:	e9 e4 05 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408850:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408857:	ba 01 00 00 00       	mov    $0x1,%edx
  40885c:	be 00 00 00 00       	mov    $0x0,%esi
  408861:	48 89 c7             	mov    %rax,%rdi
  408864:	e8 20 d8 ff ff       	callq  406089 <LexGetToken>
  408869:	83 f8 2b             	cmp    $0x2b,%eax
  40886c:	74 19                	je     408887 <ParseStatement+0x809>
  40886e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408875:	be ad 7f 41 00       	mov    $0x417fad,%esi
  40887a:	48 89 c7             	mov    %rax,%rdi
  40887d:	b8 00 00 00 00       	mov    $0x0,%eax
  408882:	e8 57 7e 00 00       	callq  4106de <ProgramFail>
  408887:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40888e:	48 89 c7             	mov    %rax,%rdi
  408891:	e8 3b 44 00 00       	callq  40ccd1 <ExpressionParseInt>
  408896:	89 45 fc             	mov    %eax,-0x4(%rbp)
  408899:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4088a0:	ba 01 00 00 00       	mov    $0x1,%edx
  4088a5:	be 00 00 00 00       	mov    $0x0,%esi
  4088aa:	48 89 c7             	mov    %rax,%rdi
  4088ad:	e8 d7 d7 ff ff       	callq  406089 <LexGetToken>
  4088b2:	83 f8 2c             	cmp    $0x2c,%eax
  4088b5:	74 19                	je     4088d0 <ParseStatement+0x852>
  4088b7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4088be:	be da 7f 41 00       	mov    $0x417fda,%esi
  4088c3:	48 89 c7             	mov    %rax,%rdi
  4088c6:	b8 00 00 00 00       	mov    $0x0,%eax
  4088cb:	e8 0e 7e 00 00       	callq  4106de <ProgramFail>
  4088d0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4088d7:	ba 00 00 00 00       	mov    $0x0,%edx
  4088dc:	be 00 00 00 00       	mov    $0x0,%esi
  4088e1:	48 89 c7             	mov    %rax,%rdi
  4088e4:	e8 a0 d7 ff ff       	callq  406089 <LexGetToken>
  4088e9:	83 f8 34             	cmp    $0x34,%eax
  4088ec:	74 19                	je     408907 <ParseStatement+0x889>
  4088ee:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4088f5:	be e7 7f 41 00       	mov    $0x417fe7,%esi
  4088fa:	48 89 c7             	mov    %rax,%rdi
  4088fd:	b8 00 00 00 00       	mov    $0x0,%eax
  408902:	e8 d7 7d 00 00       	callq  4106de <ProgramFail>
  408907:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40890e:	8b 40 1c             	mov    0x1c(%rax),%eax
  408911:	89 45 f4             	mov    %eax,-0xc(%rbp)
  408914:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40891b:	8b 40 20             	mov    0x20(%rax),%eax
  40891e:	89 45 f0             	mov    %eax,-0x10(%rbp)
  408921:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408928:	c7 40 1c 03 00 00 00 	movl   $0x3,0x1c(%rax)
  40892f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408936:	8b 55 fc             	mov    -0x4(%rbp),%edx
  408939:	89 50 20             	mov    %edx,0x20(%rax)
  40893c:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
  408940:	74 0d                	je     40894f <ParseStatement+0x8d1>
  408942:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
  408946:	74 07                	je     40894f <ParseStatement+0x8d1>
  408948:	ba 01 00 00 00       	mov    $0x1,%edx
  40894d:	eb 05                	jmp    408954 <ParseStatement+0x8d6>
  40894f:	ba 00 00 00 00       	mov    $0x0,%edx
  408954:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40895b:	be 01 00 00 00       	mov    $0x1,%esi
  408960:	48 89 c7             	mov    %rax,%rdi
  408963:	e8 86 f5 ff ff       	callq  407eee <ParseBlock>
  408968:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40896f:	8b 40 1c             	mov    0x1c(%rax),%eax
  408972:	83 f8 02             	cmp    $0x2,%eax
  408975:	74 0d                	je     408984 <ParseStatement+0x906>
  408977:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40897e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  408981:	89 50 1c             	mov    %edx,0x1c(%rax)
  408984:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  40898b:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40898e:	89 50 20             	mov    %edx,0x20(%rax)
  408991:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408998:	00 00 00 
  40899b:	e9 94 04 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  4089a0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089a7:	8b 40 1c             	mov    0x1c(%rax),%eax
  4089aa:	83 f8 03             	cmp    $0x3,%eax
  4089ad:	75 30                	jne    4089df <ParseStatement+0x961>
  4089af:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089b6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  4089bd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089c4:	48 89 c7             	mov    %rax,%rdi
  4089c7:	e8 05 43 00 00       	callq  40ccd1 <ExpressionParseInt>
  4089cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4089cf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089d6:	c7 40 1c 03 00 00 00 	movl   $0x3,0x1c(%rax)
  4089dd:	eb 12                	jmp    4089f1 <ParseStatement+0x973>
  4089df:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089e6:	48 89 c7             	mov    %rax,%rdi
  4089e9:	e8 e3 42 00 00       	callq  40ccd1 <ExpressionParseInt>
  4089ee:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4089f1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4089f8:	ba 01 00 00 00       	mov    $0x1,%edx
  4089fd:	be 00 00 00 00       	mov    $0x0,%esi
  408a02:	48 89 c7             	mov    %rax,%rdi
  408a05:	e8 7f d6 ff ff       	callq  406089 <LexGetToken>
  408a0a:	83 f8 0e             	cmp    $0xe,%eax
  408a0d:	74 19                	je     408a28 <ParseStatement+0x9aa>
  408a0f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a16:	be 1b 80 41 00       	mov    $0x41801b,%esi
  408a1b:	48 89 c7             	mov    %rax,%rdi
  408a1e:	b8 00 00 00 00       	mov    $0x0,%eax
  408a23:	e8 b6 7c 00 00       	callq  4106de <ProgramFail>
  408a28:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a2f:	8b 40 1c             	mov    0x1c(%rax),%eax
  408a32:	83 f8 03             	cmp    $0x3,%eax
  408a35:	75 1d                	jne    408a54 <ParseStatement+0x9d6>
  408a37:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a3e:	8b 40 20             	mov    0x20(%rax),%eax
  408a41:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  408a44:	75 0e                	jne    408a54 <ParseStatement+0x9d6>
  408a46:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a4d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  408a54:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408a5b:	00 00 00 
  408a5e:	e9 d1 03 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408a63:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a6a:	ba 01 00 00 00       	mov    $0x1,%edx
  408a6f:	be 00 00 00 00       	mov    $0x0,%esi
  408a74:	48 89 c7             	mov    %rax,%rdi
  408a77:	e8 0d d6 ff ff       	callq  406089 <LexGetToken>
  408a7c:	83 f8 0e             	cmp    $0xe,%eax
  408a7f:	74 19                	je     408a9a <ParseStatement+0xa1c>
  408a81:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408a88:	be 1b 80 41 00       	mov    $0x41801b,%esi
  408a8d:	48 89 c7             	mov    %rax,%rdi
  408a90:	b8 00 00 00 00       	mov    $0x0,%eax
  408a95:	e8 44 7c 00 00       	callq  4106de <ProgramFail>
  408a9a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408aa1:	8b 40 1c             	mov    0x1c(%rax),%eax
  408aa4:	83 f8 03             	cmp    $0x3,%eax
  408aa7:	75 0e                	jne    408ab7 <ParseStatement+0xa39>
  408aa9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408ab0:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  408ab7:	c7 85 24 ff ff ff 00 	movl   $0x0,-0xdc(%rbp)
  408abe:	00 00 00 
  408ac1:	e9 6e 03 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408ac6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408acd:	8b 40 1c             	mov    0x1c(%rax),%eax
  408ad0:	85 c0                	test   %eax,%eax
  408ad2:	0f 85 52 03 00 00    	jne    408e2a <ParseStatement+0xdac>
  408ad8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408adf:	c7 40 1c 04 00 00 00 	movl   $0x4,0x1c(%rax)
  408ae6:	e9 3f 03 00 00       	jmpq   408e2a <ParseStatement+0xdac>
  408aeb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408af2:	8b 40 1c             	mov    0x1c(%rax),%eax
  408af5:	85 c0                	test   %eax,%eax
  408af7:	0f 85 30 03 00 00    	jne    408e2d <ParseStatement+0xdaf>
  408afd:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b04:	c7 40 1c 05 00 00 00 	movl   $0x5,0x1c(%rax)
  408b0b:	e9 1d 03 00 00       	jmpq   408e2d <ParseStatement+0xdaf>
  408b10:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b17:	8b 40 1c             	mov    0x1c(%rax),%eax
  408b1a:	85 c0                	test   %eax,%eax
  408b1c:	0f 85 46 01 00 00    	jne    408c68 <ParseStatement+0xbea>
  408b22:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b29:	48 8b 00             	mov    (%rax),%rax
  408b2c:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  408b33:	48 85 c0             	test   %rax,%rax
  408b36:	74 22                	je     408b5a <ParseStatement+0xadc>
  408b38:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b3f:	48 8b 00             	mov    (%rax),%rax
  408b42:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  408b49:	48 8b 40 50          	mov    0x50(%rax),%rax
  408b4d:	48 8b 00             	mov    (%rax),%rax
  408b50:	8b 00                	mov    (%rax),%eax
  408b52:	85 c0                	test   %eax,%eax
  408b54:	0f 84 c8 00 00 00    	je     408c22 <ParseStatement+0xba4>
  408b5a:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  408b5e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b65:	48 89 d6             	mov    %rdx,%rsi
  408b68:	48 89 c7             	mov    %rax,%rdi
  408b6b:	e8 f0 2c 00 00       	callq  40b860 <ExpressionParse>
  408b70:	85 c0                	test   %eax,%eax
  408b72:	75 19                	jne    408b8d <ParseStatement+0xb0f>
  408b74:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b7b:	be 28 80 41 00       	mov    $0x418028,%esi
  408b80:	48 89 c7             	mov    %rax,%rdi
  408b83:	b8 00 00 00 00       	mov    $0x0,%eax
  408b88:	e8 51 7b 00 00       	callq  4106de <ProgramFail>
  408b8d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408b94:	48 8b 00             	mov    (%rax),%rax
  408b97:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  408b9e:	48 85 c0             	test   %rax,%rax
  408ba1:	75 24                	jne    408bc7 <ParseStatement+0xb49>
  408ba3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408ba7:	48 89 c7             	mov    %rax,%rdi
  408baa:	e8 53 06 00 00       	callq  409202 <ExpressionCoerceInteger>
  408baf:	89 c2                	mov    %eax,%edx
  408bb1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408bb8:	48 8b 00             	mov    (%rax),%rax
  408bbb:	89 d6                	mov    %edx,%esi
  408bbd:	48 89 c7             	mov    %rax,%rdi
  408bc0:	e8 0b 8e 00 00       	callq  4119d0 <PlatformExit>
  408bc5:	eb 43                	jmp    408c0a <ParseStatement+0xb8c>
  408bc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  408bcb:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408bd2:	48 8b 00             	mov    (%rax),%rax
  408bd5:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  408bdc:	48 8b 70 50          	mov    0x50(%rax),%rsi
  408be0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408be7:	48 83 ec 08          	sub    $0x8,%rsp
  408beb:	6a 00                	pushq  $0x0
  408bed:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  408bf3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  408bf9:	b9 01 00 00 00       	mov    $0x1,%ecx
  408bfe:	48 89 c7             	mov    %rax,%rdi
  408c01:	e8 2f 0d 00 00       	callq  409935 <ExpressionAssign>
  408c06:	48 83 c4 10          	add    $0x10,%rsp
  408c0a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  408c0e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c15:	48 89 d6             	mov    %rdx,%rsi
  408c18:	48 89 c7             	mov    %rax,%rdi
  408c1b:	e8 7b 6d 00 00       	callq  40f99b <VariableStackPop>
  408c20:	eb 33                	jmp    408c55 <ParseStatement+0xbd7>
  408c22:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  408c26:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c2d:	48 89 d6             	mov    %rdx,%rsi
  408c30:	48 89 c7             	mov    %rax,%rdi
  408c33:	e8 28 2c 00 00       	callq  40b860 <ExpressionParse>
  408c38:	85 c0                	test   %eax,%eax
  408c3a:	74 19                	je     408c55 <ParseStatement+0xbd7>
  408c3c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c43:	be 48 80 41 00       	mov    $0x418048,%esi
  408c48:	48 89 c7             	mov    %rax,%rdi
  408c4b:	b8 00 00 00 00       	mov    $0x0,%eax
  408c50:	e8 89 7a 00 00       	callq  4106de <ProgramFail>
  408c55:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c5c:	c7 40 1c 02 00 00 00 	movl   $0x2,0x1c(%rax)
  408c63:	e9 cc 01 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408c68:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  408c6c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c73:	48 89 d6             	mov    %rdx,%rsi
  408c76:	48 89 c7             	mov    %rax,%rdi
  408c79:	e8 e2 2b 00 00       	callq  40b860 <ExpressionParse>
  408c7e:	e9 b1 01 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408c83:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408c8a:	48 89 c7             	mov    %rax,%rdi
  408c8d:	e8 71 f3 ff ff       	callq  408003 <ParseTypedef>
  408c92:	e9 9d 01 00 00       	jmpq   408e34 <ParseStatement+0xdb6>
  408c97:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  408c9b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408ca2:	ba 01 00 00 00       	mov    $0x1,%edx
  408ca7:	48 89 ce             	mov    %rcx,%rsi
  408caa:	48 89 c7             	mov    %rax,%rdi
  408cad:	e8 d7 d3 ff ff       	callq  406089 <LexGetToken>
  408cb2:	83 f8 2d             	cmp    $0x2d,%eax
  408cb5:	74 19                	je     408cd0 <ParseStatement+0xc52>
  408cb7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408cbe:	be 65 7f 41 00       	mov    $0x417f65,%esi
  408cc3:	48 89 c7             	mov    %rax,%rdi
  408cc6:	b8 00 00 00 00       	mov    $0x0,%eax
  408ccb:	e8 0e 7a 00 00       	callq  4106de <ProgramFail>
  408cd0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408cd7:	8b 40 1c             	mov    0x1c(%rax),%eax
  408cda:	85 c0                	test   %eax,%eax
  408cdc:	0f 85 4e 01 00 00    	jne    408e30 <ParseStatement+0xdb2>
  408ce2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408ce6:	48 8b 40 08          	mov    0x8(%rax),%rax
  408cea:	48 8b 10             	mov    (%rax),%rdx
  408ced:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408cf4:	48 89 50 28          	mov    %rdx,0x28(%rax)
  408cf8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408cff:	c7 40 1c 06 00 00 00 	movl   $0x6,0x1c(%rax)
  408d06:	e9 25 01 00 00       	jmpq   408e30 <ParseStatement+0xdb2>
  408d0b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  408d0f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408d16:	ba 01 00 00 00       	mov    $0x1,%edx
  408d1b:	48 89 ce             	mov    %rcx,%rsi
  408d1e:	48 89 c7             	mov    %rax,%rdi
  408d21:	e8 63 d3 ff ff       	callq  406089 <LexGetToken>
  408d26:	83 f8 2d             	cmp    $0x2d,%eax
  408d29:	74 19                	je     408d44 <ParseStatement+0xcc6>
  408d2b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408d32:	be 65 7f 41 00       	mov    $0x417f65,%esi
  408d37:	48 89 c7             	mov    %rax,%rdi
  408d3a:	b8 00 00 00 00       	mov    $0x0,%eax
  408d3f:	e8 9a 79 00 00       	callq  4106de <ProgramFail>
  408d44:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408d4b:	8b 40 1c             	mov    0x1c(%rax),%eax
  408d4e:	85 c0                	test   %eax,%eax
  408d50:	0f 85 dd 00 00 00    	jne    408e33 <ParseStatement+0xdb5>
  408d56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408d5a:	48 8b 40 08          	mov    0x8(%rax),%rax
  408d5e:	48 8b 10             	mov    (%rax),%rdx
  408d61:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408d68:	48 8b 00             	mov    (%rax),%rax
  408d6b:	48 89 c1             	mov    %rax,%rcx
  408d6e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408d75:	48 8b 00             	mov    (%rax),%rax
  408d78:	48 89 ce             	mov    %rcx,%rsi
  408d7b:	48 89 c7             	mov    %rax,%rdi
  408d7e:	e8 ea ab ff ff       	callq  40396d <TableDelete>
  408d83:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  408d87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  408d8b:	48 85 c0             	test   %rax,%rax
  408d8e:	75 24                	jne    408db4 <ParseStatement+0xd36>
  408d90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  408d94:	48 8b 40 08          	mov    0x8(%rax),%rax
  408d98:	48 8b 10             	mov    (%rax),%rdx
  408d9b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408da2:	be 6d 80 41 00       	mov    $0x41806d,%esi
  408da7:	48 89 c7             	mov    %rax,%rdi
  408daa:	b8 00 00 00 00       	mov    $0x0,%eax
  408daf:	e8 2a 79 00 00       	callq  4106de <ProgramFail>
  408db4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  408db8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408dbf:	48 8b 00             	mov    (%rax),%rax
  408dc2:	48 89 d6             	mov    %rdx,%rsi
  408dc5:	48 89 c7             	mov    %rax,%rdi
  408dc8:	e8 6b 5b 00 00       	callq  40e938 <VariableFree>
  408dcd:	eb 64                	jmp    408e33 <ParseStatement+0xdb5>
  408dcf:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408dd6:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  408dda:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  408dde:	48 89 10             	mov    %rdx,(%rax)
  408de1:	48 89 48 08          	mov    %rcx,0x8(%rax)
  408de5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  408de9:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
  408ded:	48 89 50 10          	mov    %rdx,0x10(%rax)
  408df1:	48 89 48 18          	mov    %rcx,0x18(%rax)
  408df5:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  408df9:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
  408dfd:	48 89 50 20          	mov    %rdx,0x20(%rax)
  408e01:	48 89 48 28          	mov    %rcx,0x28(%rax)
  408e05:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  408e09:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  408e0d:	48 89 50 30          	mov    %rdx,0x30(%rax)
  408e11:	48 89 48 38          	mov    %rcx,0x38(%rax)
  408e15:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  408e19:	48 89 50 40          	mov    %rdx,0x40(%rax)
  408e1d:	b8 01 00 00 00       	mov    $0x1,%eax
  408e22:	eb 55                	jmp    408e79 <ParseStatement+0xdfb>
  408e24:	90                   	nop
  408e25:	eb 0d                	jmp    408e34 <ParseStatement+0xdb6>
  408e27:	90                   	nop
  408e28:	eb 0a                	jmp    408e34 <ParseStatement+0xdb6>
  408e2a:	90                   	nop
  408e2b:	eb 07                	jmp    408e34 <ParseStatement+0xdb6>
  408e2d:	90                   	nop
  408e2e:	eb 04                	jmp    408e34 <ParseStatement+0xdb6>
  408e30:	90                   	nop
  408e31:	eb 01                	jmp    408e34 <ParseStatement+0xdb6>
  408e33:	90                   	nop
  408e34:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
  408e3b:	74 37                	je     408e74 <ParseStatement+0xdf6>
  408e3d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408e44:	ba 01 00 00 00       	mov    $0x1,%edx
  408e49:	be 00 00 00 00       	mov    $0x0,%esi
  408e4e:	48 89 c7             	mov    %rax,%rdi
  408e51:	e8 33 d2 ff ff       	callq  406089 <LexGetToken>
  408e56:	83 f8 32             	cmp    $0x32,%eax
  408e59:	74 19                	je     408e74 <ParseStatement+0xdf6>
  408e5b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  408e62:	be cd 7f 41 00       	mov    $0x417fcd,%esi
  408e67:	48 89 c7             	mov    %rax,%rdi
  408e6a:	b8 00 00 00 00       	mov    $0x0,%eax
  408e6f:	e8 6a 78 00 00       	callq  4106de <ProgramFail>
  408e74:	b8 02 00 00 00       	mov    $0x2,%eax
  408e79:	c9                   	leaveq 
  408e7a:	c3                   	retq   

0000000000408e7b <PicocParse>:
  408e7b:	55                   	push   %rbp
  408e7c:	48 89 e5             	mov    %rsp,%rbp
  408e7f:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  408e86:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  408e8a:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  408e8e:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  408e95:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
  408e9b:	44 89 85 70 ff ff ff 	mov    %r8d,-0x90(%rbp)
  408ea2:	44 89 8d 6c ff ff ff 	mov    %r9d,-0x94(%rbp)
  408ea9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  408ead:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408eb1:	48 89 d6             	mov    %rdx,%rsi
  408eb4:	48 89 c7             	mov    %rax,%rdi
  408eb7:	e8 45 ad ff ff       	callq  403c01 <TableStrRegister>
  408ebc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  408ec0:	8b 8d 74 ff ff ff    	mov    -0x8c(%rbp),%ecx
  408ec6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  408ecd:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  408ed1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408ed5:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  408edb:	48 89 c7             	mov    %rax,%rdi
  408ede:	e8 3c c7 ff ff       	callq  40561f <LexAnalyse>
  408ee3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  408ee7:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  408eee:	75 7c                	jne    408f6c <PicocParse+0xf1>
  408ef0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408ef4:	be 18 00 00 00       	mov    $0x18,%esi
  408ef9:	48 89 c7             	mov    %rax,%rdi
  408efc:	e8 e3 41 00 00       	callq  40d0e4 <HeapAllocMem>
  408f01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  408f05:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  408f0a:	75 16                	jne    408f22 <PicocParse+0xa7>
  408f0c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408f10:	be e0 82 41 00       	mov    $0x4182e0,%esi
  408f15:	48 89 c7             	mov    %rax,%rdi
  408f18:	b8 00 00 00 00       	mov    $0x0,%eax
  408f1d:	e8 f7 78 00 00       	callq  410819 <ProgramFailNoParser>
  408f22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  408f2a:	48 89 10             	mov    %rdx,(%rax)
  408f2d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  408f31:	74 11                	je     408f44 <PicocParse+0xc9>
  408f33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f37:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  408f3e:	48 89 50 08          	mov    %rdx,0x8(%rax)
  408f42:	eb 0c                	jmp    408f50 <PicocParse+0xd5>
  408f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f48:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  408f4f:	00 
  408f50:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408f54:	48 8b 50 10          	mov    0x10(%rax),%rdx
  408f58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  408f5c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  408f60:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408f64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  408f68:	48 89 50 10          	mov    %rdx,0x10(%rax)
  408f6c:	44 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%r9d
  408f73:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
  408f77:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  408f7b:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  408f82:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  408f86:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  408f8a:	48 83 ec 08          	sub    $0x8,%rsp
  408f8e:	8b 7d 18             	mov    0x18(%rbp),%edi
  408f91:	57                   	push   %rdi
  408f92:	48 89 c7             	mov    %rax,%rdi
  408f95:	e8 fe c6 ff ff       	callq  405698 <LexInitParser>
  408f9a:	48 83 c4 10          	add    $0x10,%rsp
  408f9e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  408fa2:	be 01 00 00 00       	mov    $0x1,%esi
  408fa7:	48 89 c7             	mov    %rax,%rdi
  408faa:	e8 cf f0 ff ff       	callq  40807e <ParseStatement>
  408faf:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  408fb2:	83 7d e4 02          	cmpl   $0x2,-0x1c(%rbp)
  408fb6:	74 e6                	je     408f9e <PicocParse+0x123>
  408fb8:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
  408fbc:	75 16                	jne    408fd4 <PicocParse+0x159>
  408fbe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  408fc2:	be ee 82 41 00       	mov    $0x4182ee,%esi
  408fc7:	48 89 c7             	mov    %rax,%rdi
  408fca:	b8 00 00 00 00       	mov    $0x0,%eax
  408fcf:	e8 0a 77 00 00       	callq  4106de <ProgramFail>
  408fd4:	83 bd 6c ff ff ff 00 	cmpl   $0x0,-0x94(%rbp)
  408fdb:	74 13                	je     408ff0 <PicocParse+0x175>
  408fdd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  408fe1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  408fe5:	48 89 d6             	mov    %rdx,%rsi
  408fe8:	48 89 c7             	mov    %rax,%rdi
  408feb:	e8 17 41 00 00       	callq  40d107 <HeapFreeMem>
  408ff0:	90                   	nop
  408ff1:	c9                   	leaveq 
  408ff2:	c3                   	retq   

0000000000408ff3 <PicocParseInteractiveNoStartPrompt>:
  408ff3:	55                   	push   %rbp
  408ff4:	48 89 e5             	mov    %rsp,%rbp
  408ff7:	48 83 ec 60          	sub    $0x60,%rsp
  408ffb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  408fff:	89 75 a4             	mov    %esi,-0x5c(%rbp)
  409002:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409006:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  40900d:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  409011:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  409015:	48 83 ec 08          	sub    $0x8,%rsp
  409019:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  40901c:	52                   	push   %rdx
  40901d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  409023:	49 89 c8             	mov    %rcx,%r8
  409026:	b9 00 00 00 00       	mov    $0x0,%ecx
  40902b:	ba 00 00 00 00       	mov    $0x0,%edx
  409030:	48 89 c7             	mov    %rax,%rdi
  409033:	e8 60 c6 ff ff       	callq  405698 <LexInitParser>
  409038:	48 83 c4 10          	add    $0x10,%rsp
  40903c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409040:	48 05 18 10 00 00    	add    $0x1018,%rax
  409046:	48 89 c7             	mov    %rax,%rdi
  409049:	e8 62 9d ff ff       	callq  402db0 <_setjmp@plt>
  40904e:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  409052:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409056:	48 89 d6             	mov    %rdx,%rsi
  409059:	48 89 c7             	mov    %rax,%rdi
  40905c:	e8 fc d5 ff ff       	callq  40665d <LexInteractiveClear>
  409061:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409065:	48 89 c7             	mov    %rax,%rdi
  409068:	e8 8f d7 ff ff       	callq  4067fc <LexInteractiveStatementPrompt>
  40906d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  409071:	be 01 00 00 00       	mov    $0x1,%esi
  409076:	48 89 c7             	mov    %rax,%rdi
  409079:	e8 00 f0 ff ff       	callq  40807e <ParseStatement>
  40907e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  409081:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  409085:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  409089:	48 89 d6             	mov    %rdx,%rsi
  40908c:	48 89 c7             	mov    %rax,%rdi
  40908f:	e8 69 d6 ff ff       	callq  4066fd <LexInteractiveCompleted>
  409094:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
  409098:	74 c7                	je     409061 <PicocParseInteractiveNoStartPrompt+0x6e>
  40909a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40909e:	75 16                	jne    4090b6 <PicocParseInteractiveNoStartPrompt+0xc3>
  4090a0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4090a4:	be ee 82 41 00       	mov    $0x4182ee,%esi
  4090a9:	48 89 c7             	mov    %rax,%rdi
  4090ac:	b8 00 00 00 00       	mov    $0x0,%eax
  4090b1:	e8 28 76 00 00       	callq  4106de <ProgramFail>
  4090b6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  4090ba:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4090c1:	be fa 82 41 00       	mov    $0x4182fa,%esi
  4090c6:	48 89 c7             	mov    %rax,%rdi
  4090c9:	b8 00 00 00 00       	mov    $0x0,%eax
  4090ce:	e8 7d 7a 00 00       	callq  410b50 <PlatformPrintf>
  4090d3:	90                   	nop
  4090d4:	c9                   	leaveq 
  4090d5:	c3                   	retq   

00000000004090d6 <PicocParseInteractive>:
  4090d6:	55                   	push   %rbp
  4090d7:	48 89 e5             	mov    %rsp,%rbp
  4090da:	48 83 ec 10          	sub    $0x10,%rsp
  4090de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4090e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4090e6:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4090ed:	be fc 82 41 00       	mov    $0x4182fc,%esi
  4090f2:	48 89 c7             	mov    %rax,%rdi
  4090f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4090fa:	e8 51 7a 00 00       	callq  410b50 <PlatformPrintf>
  4090ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409103:	be 01 00 00 00       	mov    $0x1,%esi
  409108:	48 89 c7             	mov    %rax,%rdi
  40910b:	e8 e3 fe ff ff       	callq  408ff3 <PicocParseInteractiveNoStartPrompt>
  409110:	90                   	nop
  409111:	c9                   	leaveq 
  409112:	c3                   	retq   

0000000000409113 <debugf>:
  409113:	55                   	push   %rbp
  409114:	48 89 e5             	mov    %rsp,%rbp
  409117:	48 83 ec 48          	sub    $0x48,%rsp
  40911b:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  409122:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  409129:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  409130:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  409137:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  40913e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  409145:	84 c0                	test   %al,%al
  409147:	74 20                	je     409169 <debugf+0x56>
  409149:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  40914d:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  409151:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  409155:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  409159:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  40915d:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  409161:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  409165:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  409169:	90                   	nop
  40916a:	c9                   	leaveq 
  40916b:	c3                   	retq   

000000000040916c <IsTypeToken>:
  40916c:	55                   	push   %rbp
  40916d:	48 89 e5             	mov    %rsp,%rbp
  409170:	48 83 ec 30          	sub    $0x30,%rsp
  409174:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409178:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40917b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40917f:	83 7d e4 35          	cmpl   $0x35,-0x1c(%rbp)
  409183:	76 0d                	jbe    409192 <IsTypeToken+0x26>
  409185:	83 7d e4 45          	cmpl   $0x45,-0x1c(%rbp)
  409189:	77 07                	ja     409192 <IsTypeToken+0x26>
  40918b:	b8 01 00 00 00       	mov    $0x1,%eax
  409190:	eb 6e                	jmp    409200 <IsTypeToken+0x94>
  409192:	83 7d e4 2d          	cmpl   $0x2d,-0x1c(%rbp)
  409196:	75 63                	jne    4091fb <IsTypeToken+0x8f>
  409198:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40919c:	48 8b 40 08          	mov    0x8(%rax),%rax
  4091a0:	48 8b 10             	mov    (%rax),%rdx
  4091a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4091a7:	48 8b 00             	mov    (%rax),%rax
  4091aa:	48 89 d6             	mov    %rdx,%rsi
  4091ad:	48 89 c7             	mov    %rax,%rdi
  4091b0:	e8 4a 65 00 00       	callq  40f6ff <VariableDefined>
  4091b5:	85 c0                	test   %eax,%eax
  4091b7:	74 42                	je     4091fb <IsTypeToken+0x8f>
  4091b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4091bd:	48 8b 40 08          	mov    0x8(%rax),%rax
  4091c1:	48 8b 10             	mov    (%rax),%rdx
  4091c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4091c8:	48 8b 00             	mov    (%rax),%rax
  4091cb:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  4091cf:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4091d3:	48 89 c7             	mov    %rax,%rdi
  4091d6:	e8 af 65 00 00       	callq  40f78a <VariableGet>
  4091db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4091df:	48 8b 10             	mov    (%rax),%rdx
  4091e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4091e6:	48 8b 00             	mov    (%rax),%rax
  4091e9:	48 05 08 0d 00 00    	add    $0xd08,%rax
  4091ef:	48 39 c2             	cmp    %rax,%rdx
  4091f2:	75 07                	jne    4091fb <IsTypeToken+0x8f>
  4091f4:	b8 01 00 00 00       	mov    $0x1,%eax
  4091f9:	eb 05                	jmp    409200 <IsTypeToken+0x94>
  4091fb:	b8 00 00 00 00       	mov    $0x0,%eax
  409200:	c9                   	leaveq 
  409201:	c3                   	retq   

0000000000409202 <ExpressionCoerceInteger>:
  409202:	55                   	push   %rbp
  409203:	48 89 e5             	mov    %rsp,%rbp
  409206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40920a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40920e:	48 8b 00             	mov    (%rax),%rax
  409211:	8b 00                	mov    (%rax),%eax
  409213:	83 f8 0b             	cmp    $0xb,%eax
  409216:	0f 87 91 00 00 00    	ja     4092ad <ExpressionCoerceInteger+0xab>
  40921c:	89 c0                	mov    %eax,%eax
  40921e:	48 8b 04 c5 a0 83 41 	mov    0x4183a0(,%rax,8),%rax
  409225:	00 
  409226:	ff e0                	jmpq   *%rax
  409228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40922c:	48 8b 40 08          	mov    0x8(%rax),%rax
  409230:	8b 00                	mov    (%rax),%eax
  409232:	48 98                	cltq   
  409234:	eb 7c                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40923a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40923e:	0f b6 00             	movzbl (%rax),%eax
  409241:	48 0f be c0          	movsbq %al,%rax
  409245:	eb 6b                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40924b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40924f:	0f b7 00             	movzwl (%rax),%eax
  409252:	48 0f bf c0          	movswq %ax,%rax
  409256:	eb 5a                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40925c:	48 8b 40 08          	mov    0x8(%rax),%rax
  409260:	48 8b 00             	mov    (%rax),%rax
  409263:	eb 4d                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409269:	48 8b 40 08          	mov    0x8(%rax),%rax
  40926d:	8b 00                	mov    (%rax),%eax
  40926f:	89 c0                	mov    %eax,%eax
  409271:	eb 3f                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409277:	48 8b 40 08          	mov    0x8(%rax),%rax
  40927b:	0f b7 00             	movzwl (%rax),%eax
  40927e:	0f b7 c0             	movzwl %ax,%eax
  409281:	eb 2f                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409287:	48 8b 40 08          	mov    0x8(%rax),%rax
  40928b:	48 8b 00             	mov    (%rax),%rax
  40928e:	eb 22                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  409290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409294:	48 8b 40 08          	mov    0x8(%rax),%rax
  409298:	0f b6 00             	movzbl (%rax),%eax
  40929b:	0f b6 c0             	movzbl %al,%eax
  40929e:	eb 12                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  4092a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4092a4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4092a8:	48 8b 00             	mov    (%rax),%rax
  4092ab:	eb 05                	jmp    4092b2 <ExpressionCoerceInteger+0xb0>
  4092ad:	b8 00 00 00 00       	mov    $0x0,%eax
  4092b2:	5d                   	pop    %rbp
  4092b3:	c3                   	retq   

00000000004092b4 <ExpressionCoerceUnsignedInteger>:
  4092b4:	55                   	push   %rbp
  4092b5:	48 89 e5             	mov    %rsp,%rbp
  4092b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4092bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4092c0:	48 8b 00             	mov    (%rax),%rax
  4092c3:	8b 00                	mov    (%rax),%eax
  4092c5:	83 f8 0b             	cmp    $0xb,%eax
  4092c8:	0f 87 91 00 00 00    	ja     40935f <ExpressionCoerceUnsignedInteger+0xab>
  4092ce:	89 c0                	mov    %eax,%eax
  4092d0:	48 8b 04 c5 00 84 41 	mov    0x418400(,%rax,8),%rax
  4092d7:	00 
  4092d8:	ff e0                	jmpq   *%rax
  4092da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4092de:	48 8b 40 08          	mov    0x8(%rax),%rax
  4092e2:	8b 00                	mov    (%rax),%eax
  4092e4:	48 98                	cltq   
  4092e6:	eb 7c                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  4092e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4092ec:	48 8b 40 08          	mov    0x8(%rax),%rax
  4092f0:	0f b6 00             	movzbl (%rax),%eax
  4092f3:	48 0f be c0          	movsbq %al,%rax
  4092f7:	eb 6b                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  4092f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4092fd:	48 8b 40 08          	mov    0x8(%rax),%rax
  409301:	0f b7 00             	movzwl (%rax),%eax
  409304:	48 0f bf c0          	movswq %ax,%rax
  409308:	eb 5a                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  40930a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40930e:	48 8b 40 08          	mov    0x8(%rax),%rax
  409312:	48 8b 00             	mov    (%rax),%rax
  409315:	eb 4d                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  409317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40931b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40931f:	8b 00                	mov    (%rax),%eax
  409321:	89 c0                	mov    %eax,%eax
  409323:	eb 3f                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  409325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409329:	48 8b 40 08          	mov    0x8(%rax),%rax
  40932d:	0f b7 00             	movzwl (%rax),%eax
  409330:	0f b7 c0             	movzwl %ax,%eax
  409333:	eb 2f                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  409335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409339:	48 8b 40 08          	mov    0x8(%rax),%rax
  40933d:	48 8b 00             	mov    (%rax),%rax
  409340:	eb 22                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  409342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409346:	48 8b 40 08          	mov    0x8(%rax),%rax
  40934a:	0f b6 00             	movzbl (%rax),%eax
  40934d:	0f b6 c0             	movzbl %al,%eax
  409350:	eb 12                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  409352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409356:	48 8b 40 08          	mov    0x8(%rax),%rax
  40935a:	48 8b 00             	mov    (%rax),%rax
  40935d:	eb 05                	jmp    409364 <ExpressionCoerceUnsignedInteger+0xb0>
  40935f:	b8 00 00 00 00       	mov    $0x0,%eax
  409364:	5d                   	pop    %rbp
  409365:	c3                   	retq   

0000000000409366 <ExpressionAssignInt>:
  409366:	55                   	push   %rbp
  409367:	48 89 e5             	mov    %rsp,%rbp
  40936a:	48 83 ec 30          	sub    $0x30,%rsp
  40936e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409372:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409376:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40937a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40937d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409381:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  409385:	84 c0                	test   %al,%al
  409387:	75 16                	jne    40939f <ExpressionAssignInt+0x39>
  409389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40938d:	be 60 84 41 00       	mov    $0x418460,%esi
  409392:	48 89 c7             	mov    %rax,%rdi
  409395:	b8 00 00 00 00       	mov    $0x0,%eax
  40939a:	e8 3f 73 00 00       	callq  4106de <ProgramFail>
  40939f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4093a3:	74 12                	je     4093b7 <ExpressionAssignInt+0x51>
  4093a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4093a9:	48 89 c7             	mov    %rax,%rdi
  4093ac:	e8 51 fe ff ff       	callq  409202 <ExpressionCoerceInteger>
  4093b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4093b5:	eb 08                	jmp    4093bf <ExpressionAssignInt+0x59>
  4093b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4093bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4093bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4093c3:	48 8b 00             	mov    (%rax),%rax
  4093c6:	8b 00                	mov    (%rax),%eax
  4093c8:	83 f8 08             	cmp    $0x8,%eax
  4093cb:	0f 87 90 00 00 00    	ja     409461 <ExpressionAssignInt+0xfb>
  4093d1:	89 c0                	mov    %eax,%eax
  4093d3:	48 8b 04 c5 78 84 41 	mov    0x418478(,%rax,8),%rax
  4093da:	00 
  4093db:	ff e0                	jmpq   *%rax
  4093dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4093e1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4093e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4093e9:	89 10                	mov    %edx,(%rax)
  4093eb:	eb 75                	jmp    409462 <ExpressionAssignInt+0xfc>
  4093ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4093f1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4093f5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4093f9:	66 89 10             	mov    %dx,(%rax)
  4093fc:	eb 64                	jmp    409462 <ExpressionAssignInt+0xfc>
  4093fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409402:	48 8b 40 08          	mov    0x8(%rax),%rax
  409406:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40940a:	88 10                	mov    %dl,(%rax)
  40940c:	eb 54                	jmp    409462 <ExpressionAssignInt+0xfc>
  40940e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409412:	48 8b 40 08          	mov    0x8(%rax),%rax
  409416:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40941a:	48 89 10             	mov    %rdx,(%rax)
  40941d:	eb 43                	jmp    409462 <ExpressionAssignInt+0xfc>
  40941f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409423:	48 8b 40 08          	mov    0x8(%rax),%rax
  409427:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40942b:	89 10                	mov    %edx,(%rax)
  40942d:	eb 33                	jmp    409462 <ExpressionAssignInt+0xfc>
  40942f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409433:	48 8b 40 08          	mov    0x8(%rax),%rax
  409437:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40943b:	66 89 10             	mov    %dx,(%rax)
  40943e:	eb 22                	jmp    409462 <ExpressionAssignInt+0xfc>
  409440:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409444:	48 8b 40 08          	mov    0x8(%rax),%rax
  409448:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40944c:	48 89 10             	mov    %rdx,(%rax)
  40944f:	eb 11                	jmp    409462 <ExpressionAssignInt+0xfc>
  409451:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409455:	48 8b 40 08          	mov    0x8(%rax),%rax
  409459:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40945d:	88 10                	mov    %dl,(%rax)
  40945f:	eb 01                	jmp    409462 <ExpressionAssignInt+0xfc>
  409461:	90                   	nop
  409462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409466:	c9                   	leaveq 
  409467:	c3                   	retq   

0000000000409468 <ExpressionStackPushValueNode>:
  409468:	55                   	push   %rbp
  409469:	48 89 e5             	mov    %rsp,%rbp
  40946c:	48 83 ec 30          	sub    $0x30,%rsp
  409470:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409474:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409478:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40947c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409480:	48 8b 00             	mov    (%rax),%rax
  409483:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  409487:	b9 00 00 00 00       	mov    $0x0,%ecx
  40948c:	ba 18 00 00 00       	mov    $0x18,%edx
  409491:	48 89 c7             	mov    %rax,%rdi
  409494:	e8 61 56 00 00       	callq  40eafa <VariableAlloc>
  409499:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40949d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4094a1:	48 8b 10             	mov    (%rax),%rdx
  4094a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4094a8:	48 89 10             	mov    %rdx,(%rax)
  4094ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4094af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4094b3:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4094b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4094bb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4094bf:	48 89 10             	mov    %rdx,(%rax)
  4094c2:	90                   	nop
  4094c3:	c9                   	leaveq 
  4094c4:	c3                   	retq   

00000000004094c5 <ExpressionStackPushValueByType>:
  4094c5:	55                   	push   %rbp
  4094c6:	48 89 e5             	mov    %rsp,%rbp
  4094c9:	48 83 ec 30          	sub    $0x30,%rsp
  4094cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4094d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4094d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4094d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4094dd:	48 8b 00             	mov    (%rax),%rax
  4094e0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4094e4:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  4094e8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4094ee:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4094f4:	b9 00 00 00 00       	mov    $0x0,%ecx
  4094f9:	48 89 c7             	mov    %rax,%rdi
  4094fc:	e8 14 57 00 00       	callq  40ec15 <VariableAllocValueFromType>
  409501:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409505:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  409509:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40950d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409511:	48 89 ce             	mov    %rcx,%rsi
  409514:	48 89 c7             	mov    %rax,%rdi
  409517:	e8 4c ff ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40951c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409520:	c9                   	leaveq 
  409521:	c3                   	retq   

0000000000409522 <ExpressionStackPushValue>:
  409522:	55                   	push   %rbp
  409523:	48 89 e5             	mov    %rsp,%rbp
  409526:	48 83 ec 30          	sub    $0x30,%rsp
  40952a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40952e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409532:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  409536:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40953a:	48 8b 00             	mov    (%rax),%rax
  40953d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  409541:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  409545:	b9 00 00 00 00       	mov    $0x0,%ecx
  40954a:	48 89 c7             	mov    %rax,%rdi
  40954d:	e8 67 57 00 00       	callq  40ecb9 <VariableAllocValueAndCopy>
  409552:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  409556:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40955a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40955e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  409562:	48 89 ce             	mov    %rcx,%rsi
  409565:	48 89 c7             	mov    %rax,%rdi
  409568:	e8 fb fe ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40956d:	90                   	nop
  40956e:	c9                   	leaveq 
  40956f:	c3                   	retq   

0000000000409570 <ExpressionStackPushLValue>:
  409570:	55                   	push   %rbp
  409571:	48 89 e5             	mov    %rsp,%rbp
  409574:	48 83 ec 30          	sub    $0x30,%rsp
  409578:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40957c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409580:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  409584:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  409587:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40958b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40958f:	48 89 d6             	mov    %rdx,%rsi
  409592:	48 89 c7             	mov    %rax,%rdi
  409595:	e8 ac 58 00 00       	callq  40ee46 <VariableAllocValueShared>
  40959a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40959e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4095a2:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4095a6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4095a9:	48 98                	cltq   
  4095ab:	48 01 c2             	add    %rax,%rdx
  4095ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4095b2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4095b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4095ba:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4095be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4095c2:	48 89 ce             	mov    %rcx,%rsi
  4095c5:	48 89 c7             	mov    %rax,%rdi
  4095c8:	e8 9b fe ff ff       	callq  409468 <ExpressionStackPushValueNode>
  4095cd:	90                   	nop
  4095ce:	c9                   	leaveq 
  4095cf:	c3                   	retq   

00000000004095d0 <ExpressionStackPushDereference>:
  4095d0:	55                   	push   %rbp
  4095d1:	48 89 e5             	mov    %rsp,%rbp
  4095d4:	48 83 ec 50          	sub    $0x50,%rsp
  4095d8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4095dc:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4095e0:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  4095e4:	4c 8d 45 d4          	lea    -0x2c(%rbp),%r8
  4095e8:	48 8d 7d d8          	lea    -0x28(%rbp),%rdi
  4095ec:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
  4095f0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
  4095f4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  4095f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4095fc:	4d 89 c1             	mov    %r8,%r9
  4095ff:	49 89 f8             	mov    %rdi,%r8
  409602:	48 89 c7             	mov    %rax,%rdi
  409605:	e8 8a 66 00 00       	callq  40fc94 <VariableDereferencePointer>
  40960a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40960e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  409613:	75 16                	jne    40962b <ExpressionStackPushDereference+0x5b>
  409615:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409619:	be c0 84 41 00       	mov    $0x4184c0,%esi
  40961e:	48 89 c7             	mov    %rax,%rdi
  409621:	b8 00 00 00 00       	mov    $0x0,%eax
  409626:	e8 b3 70 00 00       	callq  4106de <ProgramFail>
  40962b:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  40962f:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  409632:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  409636:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40963a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40963e:	49 89 f8             	mov    %rdi,%r8
  409641:	48 89 c7             	mov    %rax,%rdi
  409644:	e8 74 57 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  409649:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40964d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  409651:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  409655:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409659:	48 89 ce             	mov    %rcx,%rsi
  40965c:	48 89 c7             	mov    %rax,%rdi
  40965f:	e8 04 fe ff ff       	callq  409468 <ExpressionStackPushValueNode>
  409664:	90                   	nop
  409665:	c9                   	leaveq 
  409666:	c3                   	retq   

0000000000409667 <ExpressionPushInt>:
  409667:	55                   	push   %rbp
  409668:	48 89 e5             	mov    %rsp,%rbp
  40966b:	48 83 ec 30          	sub    $0x30,%rsp
  40966f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  409673:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  409677:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40967b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40967f:	48 8b 00             	mov    (%rax),%rax
  409682:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  409689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40968d:	48 8b 00             	mov    (%rax),%rax
  409690:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  409694:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40969a:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  4096a0:	b9 00 00 00 00       	mov    $0x0,%ecx
  4096a5:	48 89 c7             	mov    %rax,%rdi
  4096a8:	e8 68 55 00 00       	callq  40ec15 <VariableAllocValueFromType>
  4096ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4096b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4096b5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4096b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4096bd:	89 10                	mov    %edx,(%rax)
  4096bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4096c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4096c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4096cb:	48 89 ce             	mov    %rcx,%rsi
  4096ce:	48 89 c7             	mov    %rax,%rdi
  4096d1:	e8 92 fd ff ff       	callq  409468 <ExpressionStackPushValueNode>
  4096d6:	90                   	nop
  4096d7:	c9                   	leaveq 
  4096d8:	c3                   	retq   

00000000004096d9 <ExpressionAssignToPointer>:
  4096d9:	55                   	push   %rbp
  4096da:	48 89 e5             	mov    %rsp,%rbp
  4096dd:	53                   	push   %rbx
  4096de:	48 83 ec 48          	sub    $0x48,%rsp
  4096e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4096e6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4096ea:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4096ee:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4096f2:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)
  4096f6:	44 89 4d b8          	mov    %r9d,-0x48(%rbp)
  4096fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4096fe:	48 8b 00             	mov    (%rax),%rax
  409701:	48 8b 40 18          	mov    0x18(%rax),%rax
  409705:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  409709:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40970d:	48 8b 10             	mov    (%rax),%rdx
  409710:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409714:	48 8b 00             	mov    (%rax),%rax
  409717:	48 39 c2             	cmp    %rax,%rdx
  40971a:	74 42                	je     40975e <ExpressionAssignToPointer+0x85>
  40971c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409720:	48 8b 10             	mov    (%rax),%rdx
  409723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409727:	48 8b 00             	mov    (%rax),%rax
  40972a:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  409731:	48 39 c2             	cmp    %rax,%rdx
  409734:	74 28                	je     40975e <ExpressionAssignToPointer+0x85>
  409736:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40973a:	48 8b 10             	mov    (%rax),%rdx
  40973d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409741:	48 8b 00             	mov    (%rax),%rax
  409744:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  40974b:	48 39 c2             	cmp    %rax,%rdx
  40974e:	75 29                	jne    409779 <ExpressionAssignToPointer+0xa0>
  409750:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409754:	48 8b 00             	mov    (%rax),%rax
  409757:	8b 00                	mov    (%rax),%eax
  409759:	83 f8 0b             	cmp    $0xb,%eax
  40975c:	75 1b                	jne    409779 <ExpressionAssignToPointer+0xa0>
  40975e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409762:	48 8b 50 08          	mov    0x8(%rax),%rdx
  409766:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40976a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40976e:	48 8b 12             	mov    (%rdx),%rdx
  409771:	48 89 10             	mov    %rdx,(%rax)
  409774:	e9 b5 01 00 00       	jmpq   40992e <ExpressionAssignToPointer+0x255>
  409779:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40977d:	48 8b 00             	mov    (%rax),%rax
  409780:	8b 00                	mov    (%rax),%eax
  409782:	83 f8 0c             	cmp    $0xc,%eax
  409785:	75 43                	jne    4097ca <ExpressionAssignToPointer+0xf1>
  409787:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40978b:	48 8b 00             	mov    (%rax),%rax
  40978e:	48 8b 40 18          	mov    0x18(%rax),%rax
  409792:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  409796:	74 1a                	je     4097b2 <ExpressionAssignToPointer+0xd9>
  409798:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40979c:	48 8b 10             	mov    (%rax),%rdx
  40979f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4097a3:	48 8b 00             	mov    (%rax),%rax
  4097a6:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  4097ad:	48 39 c2             	cmp    %rax,%rdx
  4097b0:	75 18                	jne    4097ca <ExpressionAssignToPointer+0xf1>
  4097b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4097b6:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4097ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4097be:	48 8b 40 08          	mov    0x8(%rax),%rax
  4097c2:	48 89 10             	mov    %rdx,(%rax)
  4097c5:	e9 64 01 00 00       	jmpq   40992e <ExpressionAssignToPointer+0x255>
  4097ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4097ce:	48 8b 00             	mov    (%rax),%rax
  4097d1:	8b 00                	mov    (%rax),%eax
  4097d3:	83 f8 0b             	cmp    $0xb,%eax
  4097d6:	75 77                	jne    40984f <ExpressionAssignToPointer+0x176>
  4097d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4097dc:	48 8b 00             	mov    (%rax),%rax
  4097df:	48 8b 40 18          	mov    0x18(%rax),%rax
  4097e3:	8b 00                	mov    (%rax),%eax
  4097e5:	83 f8 0c             	cmp    $0xc,%eax
  4097e8:	75 65                	jne    40984f <ExpressionAssignToPointer+0x176>
  4097ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4097ee:	48 8b 00             	mov    (%rax),%rax
  4097f1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4097f5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4097f9:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
  4097fd:	74 1a                	je     409819 <ExpressionAssignToPointer+0x140>
  4097ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409803:	48 8b 10             	mov    (%rax),%rdx
  409806:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40980a:	48 8b 00             	mov    (%rax),%rax
  40980d:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  409814:	48 39 c2             	cmp    %rax,%rdx
  409817:	75 36                	jne    40984f <ExpressionAssignToPointer+0x176>
  409819:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40981d:	48 8b 58 08          	mov    0x8(%rax),%rbx
  409821:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
  409825:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409829:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40982f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409835:	b9 00 00 00 00       	mov    $0x0,%ecx
  40983a:	ba 00 00 00 00       	mov    $0x0,%edx
  40983f:	48 89 c7             	mov    %rax,%rdi
  409842:	e8 4d 64 00 00       	callq  40fc94 <VariableDereferencePointer>
  409847:	48 89 03             	mov    %rax,(%rbx)
  40984a:	e9 df 00 00 00       	jmpq   40992e <ExpressionAssignToPointer+0x255>
  40984f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409853:	48 8b 00             	mov    (%rax),%rax
  409856:	8b 00                	mov    (%rax),%eax
  409858:	85 c0                	test   %eax,%eax
  40985a:	74 33                	je     40988f <ExpressionAssignToPointer+0x1b6>
  40985c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409860:	48 8b 00             	mov    (%rax),%rax
  409863:	8b 00                	mov    (%rax),%eax
  409865:	83 f8 08             	cmp    $0x8,%eax
  409868:	77 25                	ja     40988f <ExpressionAssignToPointer+0x1b6>
  40986a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40986e:	48 89 c7             	mov    %rax,%rdi
  409871:	e8 8c f9 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409876:	48 85 c0             	test   %rax,%rax
  409879:	75 14                	jne    40988f <ExpressionAssignToPointer+0x1b6>
  40987b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40987f:	48 8b 40 08          	mov    0x8(%rax),%rax
  409883:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40988a:	e9 9f 00 00 00       	jmpq   40992e <ExpressionAssignToPointer+0x255>
  40988f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
  409893:	74 37                	je     4098cc <ExpressionAssignToPointer+0x1f3>
  409895:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409899:	48 8b 00             	mov    (%rax),%rax
  40989c:	8b 00                	mov    (%rax),%eax
  40989e:	85 c0                	test   %eax,%eax
  4098a0:	74 2a                	je     4098cc <ExpressionAssignToPointer+0x1f3>
  4098a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4098a6:	48 8b 00             	mov    (%rax),%rax
  4098a9:	8b 00                	mov    (%rax),%eax
  4098ab:	83 f8 08             	cmp    $0x8,%eax
  4098ae:	77 1c                	ja     4098cc <ExpressionAssignToPointer+0x1f3>
  4098b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4098b4:	48 89 c7             	mov    %rax,%rdi
  4098b7:	e8 f8 f9 ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  4098bc:	48 89 c2             	mov    %rax,%rdx
  4098bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4098c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4098c7:	48 89 10             	mov    %rdx,(%rax)
  4098ca:	eb 62                	jmp    40992e <ExpressionAssignToPointer+0x255>
  4098cc:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
  4098d0:	74 26                	je     4098f8 <ExpressionAssignToPointer+0x21f>
  4098d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4098d6:	48 8b 00             	mov    (%rax),%rax
  4098d9:	8b 00                	mov    (%rax),%eax
  4098db:	83 f8 0b             	cmp    $0xb,%eax
  4098de:	75 18                	jne    4098f8 <ExpressionAssignToPointer+0x21f>
  4098e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4098e4:	48 8b 50 08          	mov    0x8(%rax),%rdx
  4098e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4098ec:	48 8b 40 08          	mov    0x8(%rax),%rax
  4098f0:	48 8b 12             	mov    (%rdx),%rdx
  4098f3:	48 89 10             	mov    %rdx,(%rax)
  4098f6:	eb 36                	jmp    40992e <ExpressionAssignToPointer+0x255>
  4098f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4098fc:	48 8b 08             	mov    (%rax),%rcx
  4098ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409903:	48 8b 10             	mov    (%rax),%rdx
  409906:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40990a:	8b 75 bc             	mov    -0x44(%rbp),%esi
  40990d:	56                   	push   %rsi
  40990e:	ff 75 c0             	pushq  -0x40(%rbp)
  409911:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409917:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40991d:	be d9 84 41 00       	mov    $0x4184d9,%esi
  409922:	48 89 c7             	mov    %rax,%rdi
  409925:	e8 d3 6f 00 00       	callq  4108fd <AssignFail>
  40992a:	48 83 c4 10          	add    $0x10,%rsp
  40992e:	90                   	nop
  40992f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  409933:	c9                   	leaveq 
  409934:	c3                   	retq   

0000000000409935 <ExpressionAssign>:
  409935:	55                   	push   %rbp
  409936:	48 89 e5             	mov    %rsp,%rbp
  409939:	53                   	push   %rbx
  40993a:	48 83 ec 48          	sub    $0x48,%rsp
  40993e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  409942:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  409946:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40994a:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  40994d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  409951:	44 89 4d c0          	mov    %r9d,-0x40(%rbp)
  409955:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409959:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40995d:	84 c0                	test   %al,%al
  40995f:	75 38                	jne    409999 <ExpressionAssign+0x64>
  409961:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  409965:	75 32                	jne    409999 <ExpressionAssign+0x64>
  409967:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40996b:	8b 55 c0             	mov    -0x40(%rbp),%edx
  40996e:	52                   	push   %rdx
  40996f:	ff 75 b8             	pushq  -0x48(%rbp)
  409972:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409978:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40997e:	b9 00 00 00 00       	mov    $0x0,%ecx
  409983:	ba 00 00 00 00       	mov    $0x0,%edx
  409988:	be e4 84 41 00       	mov    $0x4184e4,%esi
  40998d:	48 89 c7             	mov    %rax,%rdi
  409990:	e8 68 6f 00 00       	callq  4108fd <AssignFail>
  409995:	48 83 c4 10          	add    $0x10,%rsp
  409999:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40999d:	48 8b 00             	mov    (%rax),%rax
  4099a0:	8b 00                	mov    (%rax),%eax
  4099a2:	85 c0                	test   %eax,%eax
  4099a4:	74 73                	je     409a19 <ExpressionAssign+0xe4>
  4099a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4099aa:	48 8b 00             	mov    (%rax),%rax
  4099ad:	8b 00                	mov    (%rax),%eax
  4099af:	83 f8 08             	cmp    $0x8,%eax
  4099b2:	77 65                	ja     409a19 <ExpressionAssign+0xe4>
  4099b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099b8:	48 8b 00             	mov    (%rax),%rax
  4099bb:	8b 00                	mov    (%rax),%eax
  4099bd:	85 c0                	test   %eax,%eax
  4099bf:	74 0e                	je     4099cf <ExpressionAssign+0x9a>
  4099c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099c5:	48 8b 00             	mov    (%rax),%rax
  4099c8:	8b 00                	mov    (%rax),%eax
  4099ca:	83 f8 08             	cmp    $0x8,%eax
  4099cd:	76 4a                	jbe    409a19 <ExpressionAssign+0xe4>
  4099cf:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4099d3:	74 0e                	je     4099e3 <ExpressionAssign+0xae>
  4099d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099d9:	48 8b 00             	mov    (%rax),%rax
  4099dc:	8b 00                	mov    (%rax),%eax
  4099de:	83 f8 0b             	cmp    $0xb,%eax
  4099e1:	74 36                	je     409a19 <ExpressionAssign+0xe4>
  4099e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4099e7:	48 8b 08             	mov    (%rax),%rcx
  4099ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4099ee:	48 8b 10             	mov    (%rax),%rdx
  4099f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4099f5:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4099f8:	56                   	push   %rsi
  4099f9:	ff 75 b8             	pushq  -0x48(%rbp)
  4099fc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409a02:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409a08:	be d9 84 41 00       	mov    $0x4184d9,%esi
  409a0d:	48 89 c7             	mov    %rax,%rdi
  409a10:	e8 e8 6e 00 00       	callq  4108fd <AssignFail>
  409a15:	48 83 c4 10          	add    $0x10,%rsp
  409a19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a1d:	48 8b 00             	mov    (%rax),%rax
  409a20:	8b 00                	mov    (%rax),%eax
  409a22:	83 f8 0e             	cmp    $0xe,%eax
  409a25:	0f 87 09 04 00 00    	ja     409e34 <ExpressionAssign+0x4ff>
  409a2b:	89 c0                	mov    %eax,%eax
  409a2d:	48 8b 04 c5 28 85 41 	mov    0x418528(,%rax,8),%rax
  409a34:	00 
  409a35:	ff e0                	jmpq   *%rax
  409a37:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409a3b:	48 89 c7             	mov    %rax,%rdi
  409a3e:	e8 bf f7 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409a43:	48 89 c2             	mov    %rax,%rdx
  409a46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a4a:	48 8b 40 08          	mov    0x8(%rax),%rax
  409a4e:	89 10                	mov    %edx,(%rax)
  409a50:	e9 14 04 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409a55:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409a59:	48 89 c7             	mov    %rax,%rdi
  409a5c:	e8 a1 f7 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409a61:	48 89 c2             	mov    %rax,%rdx
  409a64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a68:	48 8b 40 08          	mov    0x8(%rax),%rax
  409a6c:	66 89 10             	mov    %dx,(%rax)
  409a6f:	e9 f5 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409a74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409a78:	48 89 c7             	mov    %rax,%rdi
  409a7b:	e8 82 f7 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409a80:	48 89 c2             	mov    %rax,%rdx
  409a83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a87:	48 8b 40 08          	mov    0x8(%rax),%rax
  409a8b:	88 10                	mov    %dl,(%rax)
  409a8d:	e9 d7 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409a92:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409a96:	48 8b 58 08          	mov    0x8(%rax),%rbx
  409a9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409a9e:	48 89 c7             	mov    %rax,%rdi
  409aa1:	e8 5c f7 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409aa6:	48 89 03             	mov    %rax,(%rbx)
  409aa9:	e9 bb 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409aae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409ab2:	48 89 c7             	mov    %rax,%rdi
  409ab5:	e8 fa f7 ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  409aba:	48 89 c2             	mov    %rax,%rdx
  409abd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409ac1:	48 8b 40 08          	mov    0x8(%rax),%rax
  409ac5:	89 10                	mov    %edx,(%rax)
  409ac7:	e9 9d 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409acc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409ad0:	48 89 c7             	mov    %rax,%rdi
  409ad3:	e8 dc f7 ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  409ad8:	48 89 c2             	mov    %rax,%rdx
  409adb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409adf:	48 8b 40 08          	mov    0x8(%rax),%rax
  409ae3:	66 89 10             	mov    %dx,(%rax)
  409ae6:	e9 7e 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409aeb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409aef:	48 8b 58 08          	mov    0x8(%rax),%rbx
  409af3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409af7:	48 89 c7             	mov    %rax,%rdi
  409afa:	e8 b5 f7 ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  409aff:	48 89 03             	mov    %rax,(%rbx)
  409b02:	e9 62 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409b07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409b0b:	48 89 c7             	mov    %rax,%rdi
  409b0e:	e8 a1 f7 ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  409b13:	48 89 c2             	mov    %rax,%rdx
  409b16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409b1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  409b1e:	88 10                	mov    %dl,(%rax)
  409b20:	e9 44 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409b25:	8b 7d c0             	mov    -0x40(%rbp),%edi
  409b28:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
  409b2c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  409b30:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  409b34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409b38:	44 8b 4d 10          	mov    0x10(%rbp),%r9d
  409b3c:	41 89 f8             	mov    %edi,%r8d
  409b3f:	48 89 c7             	mov    %rax,%rdi
  409b42:	e8 92 fb ff ff       	callq  4096d9 <ExpressionAssignToPointer>
  409b47:	e9 1d 03 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409b4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409b50:	48 8b 00             	mov    (%rax),%rax
  409b53:	8b 00                	mov    (%rax),%eax
  409b55:	83 f8 0c             	cmp    $0xc,%eax
  409b58:	75 76                	jne    409bd0 <ExpressionAssign+0x29b>
  409b5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409b5e:	48 8b 00             	mov    (%rax),%rax
  409b61:	8b 40 04             	mov    0x4(%rax),%eax
  409b64:	85 c0                	test   %eax,%eax
  409b66:	75 68                	jne    409bd0 <ExpressionAssign+0x29b>
  409b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409b6c:	48 8b 10             	mov    (%rax),%rdx
  409b6f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409b73:	48 89 10             	mov    %rdx,(%rax)
  409b76:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409b7a:	be 00 00 00 00       	mov    $0x0,%esi
  409b7f:	48 89 c7             	mov    %rax,%rdi
  409b82:	e8 bc 37 00 00       	callq  40d343 <TypeSizeValue>
  409b87:	89 c2                	mov    %eax,%edx
  409b89:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  409b8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409b91:	48 89 ce             	mov    %rcx,%rsi
  409b94:	48 89 c7             	mov    %rax,%rdi
  409b97:	e8 fc 52 00 00       	callq  40ee98 <VariableRealloc>
  409b9c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409ba0:	48 8b 40 10          	mov    0x10(%rax),%rax
  409ba4:	48 85 c0             	test   %rax,%rax
  409ba7:	74 27                	je     409bd0 <ExpressionAssign+0x29b>
  409ba9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bad:	48 8b 40 10          	mov    0x10(%rax),%rax
  409bb1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  409bb5:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  409bb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  409bbd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bc1:	48 8b 40 10          	mov    0x10(%rax),%rax
  409bc5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  409bc9:	0f b6 52 1a          	movzbl 0x1a(%rdx),%edx
  409bcd:	88 50 1a             	mov    %dl,0x1a(%rax)
  409bd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409bd4:	48 8b 00             	mov    (%rax),%rax
  409bd7:	48 8b 40 18          	mov    0x18(%rax),%rax
  409bdb:	8b 00                	mov    (%rax),%eax
  409bdd:	83 f8 03             	cmp    $0x3,%eax
  409be0:	0f 85 ff 00 00 00    	jne    409ce5 <ExpressionAssign+0x3b0>
  409be6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409bea:	48 8b 00             	mov    (%rax),%rax
  409bed:	8b 00                	mov    (%rax),%eax
  409bef:	83 f8 0b             	cmp    $0xb,%eax
  409bf2:	0f 85 ed 00 00 00    	jne    409ce5 <ExpressionAssign+0x3b0>
  409bf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409bfc:	48 8b 00             	mov    (%rax),%rax
  409bff:	48 8b 40 18          	mov    0x18(%rax),%rax
  409c03:	8b 00                	mov    (%rax),%eax
  409c05:	83 f8 03             	cmp    $0x3,%eax
  409c08:	0f 85 d7 00 00 00    	jne    409ce5 <ExpressionAssign+0x3b0>
  409c0e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c12:	48 8b 00             	mov    (%rax),%rax
  409c15:	8b 40 04             	mov    0x4(%rax),%eax
  409c18:	85 c0                	test   %eax,%eax
  409c1a:	0f 85 8e 00 00 00    	jne    409cae <ExpressionAssign+0x379>
  409c20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409c24:	48 8b 40 08          	mov    0x8(%rax),%rax
  409c28:	48 8b 00             	mov    (%rax),%rax
  409c2b:	48 89 c7             	mov    %rax,%rdi
  409c2e:	e8 cd 8e ff ff       	callq  402b00 <strlen@plt>
  409c33:	83 c0 01             	add    $0x1,%eax
  409c36:	89 45 ec             	mov    %eax,-0x14(%rbp)
  409c39:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c3d:	48 8b 00             	mov    (%rax),%rax
  409c40:	4c 8b 40 10          	mov    0x10(%rax),%r8
  409c44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c48:	48 8b 00             	mov    (%rax),%rax
  409c4b:	8b 08                	mov    (%rax),%ecx
  409c4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c51:	48 8b 00             	mov    (%rax),%rax
  409c54:	48 8b 50 18          	mov    0x18(%rax),%rdx
  409c58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409c5c:	48 8b 00             	mov    (%rax),%rax
  409c5f:	8b 7d ec             	mov    -0x14(%rbp),%edi
  409c62:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  409c66:	48 83 ec 08          	sub    $0x8,%rsp
  409c6a:	6a 01                	pushq  $0x1
  409c6c:	4d 89 c1             	mov    %r8,%r9
  409c6f:	41 89 f8             	mov    %edi,%r8d
  409c72:	48 89 c7             	mov    %rax,%rdi
  409c75:	e8 6d 35 00 00       	callq  40d1e7 <TypeGetMatching>
  409c7a:	48 83 c4 10          	add    $0x10,%rsp
  409c7e:	48 89 c2             	mov    %rax,%rdx
  409c81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c85:	48 89 10             	mov    %rdx,(%rax)
  409c88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409c8c:	be 00 00 00 00       	mov    $0x0,%esi
  409c91:	48 89 c7             	mov    %rax,%rdi
  409c94:	e8 aa 36 00 00       	callq  40d343 <TypeSizeValue>
  409c99:	89 c2                	mov    %eax,%edx
  409c9b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  409c9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409ca3:	48 89 ce             	mov    %rcx,%rsi
  409ca6:	48 89 c7             	mov    %rax,%rdi
  409ca9:	e8 ea 51 00 00       	callq  40ee98 <VariableRealloc>
  409cae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409cb2:	be 00 00 00 00       	mov    $0x0,%esi
  409cb7:	48 89 c7             	mov    %rax,%rdi
  409cba:	e8 84 36 00 00       	callq  40d343 <TypeSizeValue>
  409cbf:	48 63 d0             	movslq %eax,%rdx
  409cc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409cc6:	48 8b 40 08          	mov    0x8(%rax),%rax
  409cca:	48 8b 08             	mov    (%rax),%rcx
  409ccd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409cd1:	48 8b 40 08          	mov    0x8(%rax),%rax
  409cd5:	48 89 ce             	mov    %rcx,%rsi
  409cd8:	48 89 c7             	mov    %rax,%rdi
  409cdb:	e8 a0 91 ff ff       	callq  402e80 <memcpy@plt>
  409ce0:	e9 84 01 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409ce5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409ce9:	48 8b 10             	mov    (%rax),%rdx
  409cec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409cf0:	48 8b 00             	mov    (%rax),%rax
  409cf3:	48 39 c2             	cmp    %rax,%rdx
  409cf6:	74 36                	je     409d2e <ExpressionAssign+0x3f9>
  409cf8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409cfc:	48 8b 08             	mov    (%rax),%rcx
  409cff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d03:	48 8b 10             	mov    (%rax),%rdx
  409d06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409d0a:	8b 75 c0             	mov    -0x40(%rbp),%esi
  409d0d:	56                   	push   %rsi
  409d0e:	ff 75 b8             	pushq  -0x48(%rbp)
  409d11:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409d17:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409d1d:	be d9 84 41 00       	mov    $0x4184d9,%esi
  409d22:	48 89 c7             	mov    %rax,%rdi
  409d25:	e8 d3 6b 00 00       	callq  4108fd <AssignFail>
  409d2a:	48 83 c4 10          	add    $0x10,%rsp
  409d2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d32:	48 8b 00             	mov    (%rax),%rax
  409d35:	8b 50 04             	mov    0x4(%rax),%edx
  409d38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409d3c:	48 8b 00             	mov    (%rax),%rax
  409d3f:	8b 40 04             	mov    0x4(%rax),%eax
  409d42:	39 c2                	cmp    %eax,%edx
  409d44:	74 40                	je     409d86 <ExpressionAssign+0x451>
  409d46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409d4a:	48 8b 00             	mov    (%rax),%rax
  409d4d:	8b 70 04             	mov    0x4(%rax),%esi
  409d50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d54:	48 8b 00             	mov    (%rax),%rax
  409d57:	8b 48 04             	mov    0x4(%rax),%ecx
  409d5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409d5e:	8b 55 c0             	mov    -0x40(%rbp),%edx
  409d61:	52                   	push   %rdx
  409d62:	ff 75 b8             	pushq  -0x48(%rbp)
  409d65:	41 89 f1             	mov    %esi,%r9d
  409d68:	41 89 c8             	mov    %ecx,%r8d
  409d6b:	b9 00 00 00 00       	mov    $0x0,%ecx
  409d70:	ba 00 00 00 00       	mov    $0x0,%edx
  409d75:	be f8 84 41 00       	mov    $0x4184f8,%esi
  409d7a:	48 89 c7             	mov    %rax,%rdi
  409d7d:	e8 7b 6b 00 00       	callq  4108fd <AssignFail>
  409d82:	48 83 c4 10          	add    $0x10,%rsp
  409d86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409d8a:	be 00 00 00 00       	mov    $0x0,%esi
  409d8f:	48 89 c7             	mov    %rax,%rdi
  409d92:	e8 ac 35 00 00       	callq  40d343 <TypeSizeValue>
  409d97:	48 63 d0             	movslq %eax,%rdx
  409d9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409d9e:	48 8b 48 08          	mov    0x8(%rax),%rcx
  409da2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409da6:	48 8b 40 08          	mov    0x8(%rax),%rax
  409daa:	48 89 ce             	mov    %rcx,%rsi
  409dad:	48 89 c7             	mov    %rax,%rdi
  409db0:	e8 cb 90 ff ff       	callq  402e80 <memcpy@plt>
  409db5:	e9 af 00 00 00       	jmpq   409e69 <ExpressionAssign+0x534>
  409dba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409dbe:	48 8b 10             	mov    (%rax),%rdx
  409dc1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409dc5:	48 8b 00             	mov    (%rax),%rax
  409dc8:	48 39 c2             	cmp    %rax,%rdx
  409dcb:	74 36                	je     409e03 <ExpressionAssign+0x4ce>
  409dcd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409dd1:	48 8b 08             	mov    (%rax),%rcx
  409dd4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409dd8:	48 8b 10             	mov    (%rax),%rdx
  409ddb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409ddf:	8b 75 c0             	mov    -0x40(%rbp),%esi
  409de2:	56                   	push   %rsi
  409de3:	ff 75 b8             	pushq  -0x48(%rbp)
  409de6:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409dec:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409df2:	be d9 84 41 00       	mov    $0x4184d9,%esi
  409df7:	48 89 c7             	mov    %rax,%rdi
  409dfa:	e8 fe 6a 00 00       	callq  4108fd <AssignFail>
  409dff:	48 83 c4 10          	add    $0x10,%rsp
  409e03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409e07:	be 00 00 00 00       	mov    $0x0,%esi
  409e0c:	48 89 c7             	mov    %rax,%rdi
  409e0f:	e8 2f 35 00 00       	callq  40d343 <TypeSizeValue>
  409e14:	48 63 d0             	movslq %eax,%rdx
  409e17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  409e1b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  409e1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e23:	48 8b 40 08          	mov    0x8(%rax),%rax
  409e27:	48 89 ce             	mov    %rcx,%rsi
  409e2a:	48 89 c7             	mov    %rax,%rdi
  409e2d:	e8 4e 90 ff ff       	callq  402e80 <memcpy@plt>
  409e32:	eb 35                	jmp    409e69 <ExpressionAssign+0x534>
  409e34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  409e38:	48 8b 10             	mov    (%rax),%rdx
  409e3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  409e3f:	8b 4d c0             	mov    -0x40(%rbp),%ecx
  409e42:	51                   	push   %rcx
  409e43:	ff 75 b8             	pushq  -0x48(%rbp)
  409e46:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  409e4c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  409e52:	b9 00 00 00 00       	mov    $0x0,%ecx
  409e57:	be 23 85 41 00       	mov    $0x418523,%esi
  409e5c:	48 89 c7             	mov    %rax,%rdi
  409e5f:	e8 99 6a 00 00       	callq  4108fd <AssignFail>
  409e64:	48 83 c4 10          	add    $0x10,%rsp
  409e68:	90                   	nop
  409e69:	90                   	nop
  409e6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  409e6e:	c9                   	leaveq 
  409e6f:	c3                   	retq   

0000000000409e70 <ExpressionQuestionMarkOperator>:
  409e70:	55                   	push   %rbp
  409e71:	48 89 e5             	mov    %rsp,%rbp
  409e74:	48 83 ec 20          	sub    $0x20,%rsp
  409e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409e7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  409e80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  409e84:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  409e88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409e8c:	48 8b 00             	mov    (%rax),%rax
  409e8f:	8b 00                	mov    (%rax),%eax
  409e91:	85 c0                	test   %eax,%eax
  409e93:	74 0e                	je     409ea3 <ExpressionQuestionMarkOperator+0x33>
  409e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409e99:	48 8b 00             	mov    (%rax),%rax
  409e9c:	8b 00                	mov    (%rax),%eax
  409e9e:	83 f8 08             	cmp    $0x8,%eax
  409ea1:	76 16                	jbe    409eb9 <ExpressionQuestionMarkOperator+0x49>
  409ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ea7:	be a0 85 41 00       	mov    $0x4185a0,%esi
  409eac:	48 89 c7             	mov    %rax,%rdi
  409eaf:	b8 00 00 00 00       	mov    $0x0,%eax
  409eb4:	e8 25 68 00 00       	callq  4106de <ProgramFail>
  409eb9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409ebd:	48 89 c7             	mov    %rax,%rdi
  409ec0:	e8 3d f3 ff ff       	callq  409202 <ExpressionCoerceInteger>
  409ec5:	48 85 c0             	test   %rax,%rax
  409ec8:	74 19                	je     409ee3 <ExpressionQuestionMarkOperator+0x73>
  409eca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409ece:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  409ed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ed6:	48 89 ce             	mov    %rcx,%rsi
  409ed9:	48 89 c7             	mov    %rax,%rdi
  409edc:	e8 41 f6 ff ff       	callq  409522 <ExpressionStackPushValue>
  409ee1:	eb 21                	jmp    409f04 <ExpressionQuestionMarkOperator+0x94>
  409ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ee7:	48 8b 00             	mov    (%rax),%rax
  409eea:	48 8d 90 c8 0c 00 00 	lea    0xcc8(%rax),%rdx
  409ef1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  409ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409ef9:	48 89 ce             	mov    %rcx,%rsi
  409efc:	48 89 c7             	mov    %rax,%rdi
  409eff:	e8 c1 f5 ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  409f04:	90                   	nop
  409f05:	c9                   	leaveq 
  409f06:	c3                   	retq   

0000000000409f07 <ExpressionColonOperator>:
  409f07:	55                   	push   %rbp
  409f08:	48 89 e5             	mov    %rsp,%rbp
  409f0b:	48 83 ec 20          	sub    $0x20,%rsp
  409f0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  409f13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  409f17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  409f1b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  409f1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  409f23:	48 8b 00             	mov    (%rax),%rax
  409f26:	8b 00                	mov    (%rax),%eax
  409f28:	85 c0                	test   %eax,%eax
  409f2a:	75 19                	jne    409f45 <ExpressionColonOperator+0x3e>
  409f2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  409f30:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  409f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409f38:	48 89 ce             	mov    %rcx,%rsi
  409f3b:	48 89 c7             	mov    %rax,%rdi
  409f3e:	e8 df f5 ff ff       	callq  409522 <ExpressionStackPushValue>
  409f43:	eb 17                	jmp    409f5c <ExpressionColonOperator+0x55>
  409f45:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  409f49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  409f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  409f51:	48 89 ce             	mov    %rcx,%rsi
  409f54:	48 89 c7             	mov    %rax,%rdi
  409f57:	e8 c6 f5 ff ff       	callq  409522 <ExpressionStackPushValue>
  409f5c:	90                   	nop
  409f5d:	c9                   	leaveq 
  409f5e:	c3                   	retq   

0000000000409f5f <ExpressionPrefixOperator>:
  409f5f:	55                   	push   %rbp
  409f60:	48 89 e5             	mov    %rsp,%rbp
  409f63:	48 83 ec 60          	sub    $0x60,%rsp
  409f67:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  409f6b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  409f6f:	89 55 ac             	mov    %edx,-0x54(%rbp)
  409f72:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
  409f76:	bf c9 85 41 00       	mov    $0x4185c9,%edi
  409f7b:	b8 00 00 00 00       	mov    $0x0,%eax
  409f80:	e8 8e f1 ff ff       	callq  409113 <debugf>
  409f85:	8b 45 ac             	mov    -0x54(%rbp),%eax
  409f88:	83 f8 1e             	cmp    $0x1e,%eax
  409f8b:	0f 84 d6 00 00 00    	je     40a067 <ExpressionPrefixOperator+0x108>
  409f91:	83 f8 25             	cmp    $0x25,%eax
  409f94:	0f 84 e9 00 00 00    	je     40a083 <ExpressionPrefixOperator+0x124>
  409f9a:	83 f8 13             	cmp    $0x13,%eax
  409f9d:	0f 85 77 01 00 00    	jne    40a11a <ExpressionPrefixOperator+0x1bb>
  409fa3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  409fa7:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  409fab:	84 c0                	test   %al,%al
  409fad:	75 16                	jne    409fc5 <ExpressionPrefixOperator+0x66>
  409faf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409fb3:	be e5 85 41 00       	mov    $0x4185e5,%esi
  409fb8:	48 89 c7             	mov    %rax,%rdi
  409fbb:	b8 00 00 00 00       	mov    $0x0,%eax
  409fc0:	e8 19 67 00 00       	callq  4106de <ProgramFail>
  409fc5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  409fc9:	48 8b 40 08          	mov    0x8(%rax),%rax
  409fcd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  409fd1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409fd5:	48 8b 00             	mov    (%rax),%rax
  409fd8:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  409fdf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  409fe3:	48 8b 10             	mov    (%rax),%rdx
  409fe6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  409fea:	48 8b 00             	mov    (%rax),%rax
  409fed:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  409ff1:	48 83 ec 08          	sub    $0x8,%rsp
  409ff5:	6a 01                	pushq  $0x1
  409ff7:	49 89 c9             	mov    %rcx,%r9
  409ffa:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40a000:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40a005:	48 89 c7             	mov    %rax,%rdi
  40a008:	e8 da 31 00 00       	callq  40d1e7 <TypeGetMatching>
  40a00d:	48 83 c4 10          	add    $0x10,%rsp
  40a011:	48 89 c2             	mov    %rax,%rdx
  40a014:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a018:	48 8b 00             	mov    (%rax),%rax
  40a01b:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
  40a01f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40a025:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40a02b:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a030:	48 89 c7             	mov    %rax,%rdi
  40a033:	e8 dd 4b 00 00       	callq  40ec15 <VariableAllocValueFromType>
  40a038:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40a03c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40a040:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a044:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40a048:	48 89 10             	mov    %rdx,(%rax)
  40a04b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40a04f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a053:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a057:	48 89 ce             	mov    %rcx,%rsi
  40a05a:	48 89 c7             	mov    %rax,%rdi
  40a05d:	e8 06 f4 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40a062:	e9 f7 02 00 00       	jmpq   40a35e <ExpressionPrefixOperator+0x3ff>
  40a067:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  40a06b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a06f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a073:	48 89 ce             	mov    %rcx,%rsi
  40a076:	48 89 c7             	mov    %rax,%rdi
  40a079:	e8 52 f5 ff ff       	callq  4095d0 <ExpressionStackPushDereference>
  40a07e:	e9 db 02 00 00       	jmpq   40a35e <ExpressionPrefixOperator+0x3ff>
  40a083:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a087:	48 8b 10             	mov    (%rax),%rdx
  40a08a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a08e:	48 8b 00             	mov    (%rax),%rax
  40a091:	48 05 08 0d 00 00    	add    $0xd08,%rax
  40a097:	48 39 c2             	cmp    %rax,%rdx
  40a09a:	75 43                	jne    40a0df <ExpressionPrefixOperator+0x180>
  40a09c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a0a0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a0a4:	48 8b 00             	mov    (%rax),%rax
  40a0a7:	8b 48 04             	mov    0x4(%rax),%ecx
  40a0aa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a0ae:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a0b2:	48 8b 00             	mov    (%rax),%rax
  40a0b5:	ba 01 00 00 00       	mov    $0x1,%edx
  40a0ba:	89 ce                	mov    %ecx,%esi
  40a0bc:	48 89 c7             	mov    %rax,%rdi
  40a0bf:	e8 e9 32 00 00       	callq  40d3ad <TypeSize>
  40a0c4:	48 63 d0             	movslq %eax,%rdx
  40a0c7:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a0cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a0cf:	48 89 ce             	mov    %rcx,%rsi
  40a0d2:	48 89 c7             	mov    %rax,%rdi
  40a0d5:	e8 8d f5 ff ff       	callq  409667 <ExpressionPushInt>
  40a0da:	e9 7f 02 00 00       	jmpq   40a35e <ExpressionPrefixOperator+0x3ff>
  40a0df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a0e3:	48 8b 00             	mov    (%rax),%rax
  40a0e6:	8b 48 04             	mov    0x4(%rax),%ecx
  40a0e9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a0ed:	48 8b 00             	mov    (%rax),%rax
  40a0f0:	ba 01 00 00 00       	mov    $0x1,%edx
  40a0f5:	89 ce                	mov    %ecx,%esi
  40a0f7:	48 89 c7             	mov    %rax,%rdi
  40a0fa:	e8 ae 32 00 00       	callq  40d3ad <TypeSize>
  40a0ff:	48 63 d0             	movslq %eax,%rdx
  40a102:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a106:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a10a:	48 89 ce             	mov    %rcx,%rsi
  40a10d:	48 89 c7             	mov    %rax,%rdi
  40a110:	e8 52 f5 ff ff       	callq  409667 <ExpressionPushInt>
  40a115:	e9 44 02 00 00       	jmpq   40a35e <ExpressionPrefixOperator+0x3ff>
  40a11a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a11e:	48 8b 00             	mov    (%rax),%rax
  40a121:	8b 00                	mov    (%rax),%eax
  40a123:	85 c0                	test   %eax,%eax
  40a125:	0f 84 f7 00 00 00    	je     40a222 <ExpressionPrefixOperator+0x2c3>
  40a12b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a12f:	48 8b 00             	mov    (%rax),%rax
  40a132:	8b 00                	mov    (%rax),%eax
  40a134:	83 f8 08             	cmp    $0x8,%eax
  40a137:	0f 87 e5 00 00 00    	ja     40a222 <ExpressionPrefixOperator+0x2c3>
  40a13d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40a144:	00 
  40a145:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a149:	48 89 c7             	mov    %rax,%rdi
  40a14c:	e8 b1 f0 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40a151:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40a155:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a158:	83 e8 1c             	sub    $0x1c,%eax
  40a15b:	83 f8 08             	cmp    $0x8,%eax
  40a15e:	0f 87 8a 00 00 00    	ja     40a1ee <ExpressionPrefixOperator+0x28f>
  40a164:	89 c0                	mov    %eax,%eax
  40a166:	48 8b 04 c5 38 86 41 	mov    0x418638(,%rax,8),%rax
  40a16d:	00 
  40a16e:	ff e0                	jmpq   *%rax
  40a170:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a174:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a178:	e9 88 00 00 00       	jmpq   40a205 <ExpressionPrefixOperator+0x2a6>
  40a17d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a181:	48 f7 d8             	neg    %rax
  40a184:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a188:	eb 7b                	jmp    40a205 <ExpressionPrefixOperator+0x2a6>
  40a18a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a18e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40a192:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  40a196:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a19a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a19f:	48 89 c7             	mov    %rax,%rdi
  40a1a2:	e8 bf f1 ff ff       	callq  409366 <ExpressionAssignInt>
  40a1a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a1ab:	eb 58                	jmp    40a205 <ExpressionPrefixOperator+0x2a6>
  40a1ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a1b1:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40a1b5:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
  40a1b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a1bd:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a1c2:	48 89 c7             	mov    %rax,%rdi
  40a1c5:	e8 9c f1 ff ff       	callq  409366 <ExpressionAssignInt>
  40a1ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a1ce:	eb 35                	jmp    40a205 <ExpressionPrefixOperator+0x2a6>
  40a1d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40a1d5:	0f 94 c0             	sete   %al
  40a1d8:	0f b6 c0             	movzbl %al,%eax
  40a1db:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a1df:	eb 24                	jmp    40a205 <ExpressionPrefixOperator+0x2a6>
  40a1e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40a1e5:	48 f7 d0             	not    %rax
  40a1e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a1ec:	eb 17                	jmp    40a205 <ExpressionPrefixOperator+0x2a6>
  40a1ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a1f2:	be 03 86 41 00       	mov    $0x418603,%esi
  40a1f7:	48 89 c7             	mov    %rax,%rdi
  40a1fa:	b8 00 00 00 00       	mov    $0x0,%eax
  40a1ff:	e8 da 64 00 00       	callq  4106de <ProgramFail>
  40a204:	90                   	nop
  40a205:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40a209:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a20d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a211:	48 89 ce             	mov    %rcx,%rsi
  40a214:	48 89 c7             	mov    %rax,%rdi
  40a217:	e8 4b f4 ff ff       	callq  409667 <ExpressionPushInt>
  40a21c:	90                   	nop
  40a21d:	e9 3b 01 00 00       	jmpq   40a35d <ExpressionPrefixOperator+0x3fe>
  40a222:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a226:	48 8b 00             	mov    (%rax),%rax
  40a229:	8b 00                	mov    (%rax),%eax
  40a22b:	83 f8 0b             	cmp    $0xb,%eax
  40a22e:	0f 85 13 01 00 00    	jne    40a347 <ExpressionPrefixOperator+0x3e8>
  40a234:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a238:	48 8b 00             	mov    (%rax),%rax
  40a23b:	48 8b 40 18          	mov    0x18(%rax),%rax
  40a23f:	ba 01 00 00 00       	mov    $0x1,%edx
  40a244:	be 00 00 00 00       	mov    $0x0,%esi
  40a249:	48 89 c7             	mov    %rax,%rdi
  40a24c:	e8 5c 31 00 00       	callq  40d3ad <TypeSize>
  40a251:	89 45 dc             	mov    %eax,-0x24(%rbp)
  40a254:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a258:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a25c:	48 8b 00             	mov    (%rax),%rax
  40a25f:	48 85 c0             	test   %rax,%rax
  40a262:	75 16                	jne    40a27a <ExpressionPrefixOperator+0x31b>
  40a264:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a268:	be 15 86 41 00       	mov    $0x418615,%esi
  40a26d:	48 89 c7             	mov    %rax,%rdi
  40a270:	b8 00 00 00 00       	mov    $0x0,%eax
  40a275:	e8 64 64 00 00       	callq  4106de <ProgramFail>
  40a27a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a27e:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40a282:	84 c0                	test   %al,%al
  40a284:	75 16                	jne    40a29c <ExpressionPrefixOperator+0x33d>
  40a286:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a28a:	be 60 84 41 00       	mov    $0x418460,%esi
  40a28f:	48 89 c7             	mov    %rax,%rdi
  40a292:	b8 00 00 00 00       	mov    $0x0,%eax
  40a297:	e8 42 64 00 00       	callq  4106de <ProgramFail>
  40a29c:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40a29f:	83 f8 21             	cmp    $0x21,%eax
  40a2a2:	74 07                	je     40a2ab <ExpressionPrefixOperator+0x34c>
  40a2a4:	83 f8 22             	cmp    $0x22,%eax
  40a2a7:	74 23                	je     40a2cc <ExpressionPrefixOperator+0x36d>
  40a2a9:	eb 47                	jmp    40a2f2 <ExpressionPrefixOperator+0x393>
  40a2ab:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a2af:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a2b3:	48 8b 08             	mov    (%rax),%rcx
  40a2b6:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a2b9:	48 63 d0             	movslq %eax,%rdx
  40a2bc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a2c0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a2c4:	48 01 ca             	add    %rcx,%rdx
  40a2c7:	48 89 10             	mov    %rdx,(%rax)
  40a2ca:	eb 3d                	jmp    40a309 <ExpressionPrefixOperator+0x3aa>
  40a2cc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a2d0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a2d4:	48 8b 10             	mov    (%rax),%rdx
  40a2d7:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40a2da:	48 98                	cltq   
  40a2dc:	48 f7 d8             	neg    %rax
  40a2df:	48 89 c1             	mov    %rax,%rcx
  40a2e2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a2e6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a2ea:	48 01 ca             	add    %rcx,%rdx
  40a2ed:	48 89 10             	mov    %rdx,(%rax)
  40a2f0:	eb 17                	jmp    40a309 <ExpressionPrefixOperator+0x3aa>
  40a2f2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a2f6:	be 03 86 41 00       	mov    $0x418603,%esi
  40a2fb:	48 89 c7             	mov    %rax,%rdi
  40a2fe:	b8 00 00 00 00       	mov    $0x0,%eax
  40a303:	e8 d6 63 00 00       	callq  4106de <ProgramFail>
  40a308:	90                   	nop
  40a309:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a30d:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a311:	48 8b 00             	mov    (%rax),%rax
  40a314:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40a318:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40a31c:	48 8b 10             	mov    (%rax),%rdx
  40a31f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40a323:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a327:	48 89 ce             	mov    %rcx,%rsi
  40a32a:	48 89 c7             	mov    %rax,%rdi
  40a32d:	e8 93 f1 ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40a332:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40a336:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a33a:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a33e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40a342:	48 89 10             	mov    %rdx,(%rax)
  40a345:	eb 16                	jmp    40a35d <ExpressionPrefixOperator+0x3fe>
  40a347:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a34b:	be 03 86 41 00       	mov    $0x418603,%esi
  40a350:	48 89 c7             	mov    %rax,%rdi
  40a353:	b8 00 00 00 00       	mov    $0x0,%eax
  40a358:	e8 81 63 00 00       	callq  4106de <ProgramFail>
  40a35d:	90                   	nop
  40a35e:	90                   	nop
  40a35f:	c9                   	leaveq 
  40a360:	c3                   	retq   

000000000040a361 <ExpressionPostfixOperator>:
  40a361:	55                   	push   %rbp
  40a362:	48 89 e5             	mov    %rsp,%rbp
  40a365:	48 83 ec 50          	sub    $0x50,%rsp
  40a369:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40a36d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40a371:	89 55 bc             	mov    %edx,-0x44(%rbp)
  40a374:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  40a378:	bf 80 86 41 00       	mov    $0x418680,%edi
  40a37d:	b8 00 00 00 00       	mov    $0x0,%eax
  40a382:	e8 8c ed ff ff       	callq  409113 <debugf>
  40a387:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a38b:	48 8b 00             	mov    (%rax),%rax
  40a38e:	8b 00                	mov    (%rax),%eax
  40a390:	85 c0                	test   %eax,%eax
  40a392:	0f 84 f7 00 00 00    	je     40a48f <ExpressionPostfixOperator+0x12e>
  40a398:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a39c:	48 8b 00             	mov    (%rax),%rax
  40a39f:	8b 00                	mov    (%rax),%eax
  40a3a1:	83 f8 08             	cmp    $0x8,%eax
  40a3a4:	0f 87 e5 00 00 00    	ja     40a48f <ExpressionPostfixOperator+0x12e>
  40a3aa:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40a3b1:	00 
  40a3b2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a3b6:	48 89 c7             	mov    %rax,%rdi
  40a3b9:	e8 44 ee ff ff       	callq  409202 <ExpressionCoerceInteger>
  40a3be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40a3c2:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40a3c5:	83 f8 22             	cmp    $0x22,%eax
  40a3c8:	74 3e                	je     40a408 <ExpressionPostfixOperator+0xa7>
  40a3ca:	83 f8 22             	cmp    $0x22,%eax
  40a3cd:	77 0a                	ja     40a3d9 <ExpressionPostfixOperator+0x78>
  40a3cf:	83 f8 21             	cmp    $0x21,%eax
  40a3d2:	74 11                	je     40a3e5 <ExpressionPostfixOperator+0x84>
  40a3d4:	e9 82 00 00 00       	jmpq   40a45b <ExpressionPostfixOperator+0xfa>
  40a3d9:	83 f8 28             	cmp    $0x28,%eax
  40a3dc:	74 4d                	je     40a42b <ExpressionPostfixOperator+0xca>
  40a3de:	83 f8 2c             	cmp    $0x2c,%eax
  40a3e1:	74 60                	je     40a443 <ExpressionPostfixOperator+0xe2>
  40a3e3:	eb 76                	jmp    40a45b <ExpressionPostfixOperator+0xfa>
  40a3e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a3e9:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40a3ed:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  40a3f1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a3f5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a3fa:	48 89 c7             	mov    %rax,%rdi
  40a3fd:	e8 64 ef ff ff       	callq  409366 <ExpressionAssignInt>
  40a402:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a406:	eb 6a                	jmp    40a472 <ExpressionPostfixOperator+0x111>
  40a408:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40a40c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  40a410:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
  40a414:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a418:	b9 01 00 00 00       	mov    $0x1,%ecx
  40a41d:	48 89 c7             	mov    %rax,%rdi
  40a420:	e8 41 ef ff ff       	callq  409366 <ExpressionAssignInt>
  40a425:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40a429:	eb 47                	jmp    40a472 <ExpressionPostfixOperator+0x111>
  40a42b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a42f:	be 9d 86 41 00       	mov    $0x41869d,%esi
  40a434:	48 89 c7             	mov    %rax,%rdi
  40a437:	b8 00 00 00 00       	mov    $0x0,%eax
  40a43c:	e8 9d 62 00 00       	callq  4106de <ProgramFail>
  40a441:	eb 2f                	jmp    40a472 <ExpressionPostfixOperator+0x111>
  40a443:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a447:	be 9d 86 41 00       	mov    $0x41869d,%esi
  40a44c:	48 89 c7             	mov    %rax,%rdi
  40a44f:	b8 00 00 00 00       	mov    $0x0,%eax
  40a454:	e8 85 62 00 00       	callq  4106de <ProgramFail>
  40a459:	eb 17                	jmp    40a472 <ExpressionPostfixOperator+0x111>
  40a45b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a45f:	be 03 86 41 00       	mov    $0x418603,%esi
  40a464:	48 89 c7             	mov    %rax,%rdi
  40a467:	b8 00 00 00 00       	mov    $0x0,%eax
  40a46c:	e8 6d 62 00 00       	callq  4106de <ProgramFail>
  40a471:	90                   	nop
  40a472:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40a476:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a47a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a47e:	48 89 ce             	mov    %rcx,%rsi
  40a481:	48 89 c7             	mov    %rax,%rdi
  40a484:	e8 de f1 ff ff       	callq  409667 <ExpressionPushInt>
  40a489:	90                   	nop
  40a48a:	e9 3b 01 00 00       	jmpq   40a5ca <ExpressionPostfixOperator+0x269>
  40a48f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a493:	48 8b 00             	mov    (%rax),%rax
  40a496:	8b 00                	mov    (%rax),%eax
  40a498:	83 f8 0b             	cmp    $0xb,%eax
  40a49b:	0f 85 13 01 00 00    	jne    40a5b4 <ExpressionPostfixOperator+0x253>
  40a4a1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a4a5:	48 8b 00             	mov    (%rax),%rax
  40a4a8:	48 8b 40 18          	mov    0x18(%rax),%rax
  40a4ac:	ba 01 00 00 00       	mov    $0x1,%edx
  40a4b1:	be 00 00 00 00       	mov    $0x0,%esi
  40a4b6:	48 89 c7             	mov    %rax,%rdi
  40a4b9:	e8 ef 2e 00 00       	callq  40d3ad <TypeSize>
  40a4be:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40a4c1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a4c5:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a4c9:	48 8b 00             	mov    (%rax),%rax
  40a4cc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40a4d0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a4d4:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a4d8:	48 8b 00             	mov    (%rax),%rax
  40a4db:	48 85 c0             	test   %rax,%rax
  40a4de:	75 16                	jne    40a4f6 <ExpressionPostfixOperator+0x195>
  40a4e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a4e4:	be 15 86 41 00       	mov    $0x418615,%esi
  40a4e9:	48 89 c7             	mov    %rax,%rdi
  40a4ec:	b8 00 00 00 00       	mov    $0x0,%eax
  40a4f1:	e8 e8 61 00 00       	callq  4106de <ProgramFail>
  40a4f6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a4fa:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40a4fe:	84 c0                	test   %al,%al
  40a500:	75 16                	jne    40a518 <ExpressionPostfixOperator+0x1b7>
  40a502:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a506:	be 60 84 41 00       	mov    $0x418460,%esi
  40a50b:	48 89 c7             	mov    %rax,%rdi
  40a50e:	b8 00 00 00 00       	mov    $0x0,%eax
  40a513:	e8 c6 61 00 00       	callq  4106de <ProgramFail>
  40a518:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40a51b:	83 f8 21             	cmp    $0x21,%eax
  40a51e:	74 07                	je     40a527 <ExpressionPostfixOperator+0x1c6>
  40a520:	83 f8 22             	cmp    $0x22,%eax
  40a523:	74 23                	je     40a548 <ExpressionPostfixOperator+0x1e7>
  40a525:	eb 47                	jmp    40a56e <ExpressionPostfixOperator+0x20d>
  40a527:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a52b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a52f:	48 8b 08             	mov    (%rax),%rcx
  40a532:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40a535:	48 63 d0             	movslq %eax,%rdx
  40a538:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a53c:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a540:	48 01 ca             	add    %rcx,%rdx
  40a543:	48 89 10             	mov    %rdx,(%rax)
  40a546:	eb 3d                	jmp    40a585 <ExpressionPostfixOperator+0x224>
  40a548:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a54c:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a550:	48 8b 10             	mov    (%rax),%rdx
  40a553:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40a556:	48 98                	cltq   
  40a558:	48 f7 d8             	neg    %rax
  40a55b:	48 89 c1             	mov    %rax,%rcx
  40a55e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a562:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a566:	48 01 ca             	add    %rcx,%rdx
  40a569:	48 89 10             	mov    %rdx,(%rax)
  40a56c:	eb 17                	jmp    40a585 <ExpressionPostfixOperator+0x224>
  40a56e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a572:	be 03 86 41 00       	mov    $0x418603,%esi
  40a577:	48 89 c7             	mov    %rax,%rdi
  40a57a:	b8 00 00 00 00       	mov    $0x0,%eax
  40a57f:	e8 5a 61 00 00       	callq  4106de <ProgramFail>
  40a584:	90                   	nop
  40a585:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40a589:	48 8b 10             	mov    (%rax),%rdx
  40a58c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40a590:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a594:	48 89 ce             	mov    %rcx,%rsi
  40a597:	48 89 c7             	mov    %rax,%rdi
  40a59a:	e8 26 ef ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40a59f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a5a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40a5a7:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a5ab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40a5af:	48 89 10             	mov    %rdx,(%rax)
  40a5b2:	eb 16                	jmp    40a5ca <ExpressionPostfixOperator+0x269>
  40a5b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40a5b8:	be 03 86 41 00       	mov    $0x418603,%esi
  40a5bd:	48 89 c7             	mov    %rax,%rdi
  40a5c0:	b8 00 00 00 00       	mov    $0x0,%eax
  40a5c5:	e8 14 61 00 00       	callq  4106de <ProgramFail>
  40a5ca:	90                   	nop
  40a5cb:	c9                   	leaveq 
  40a5cc:	c3                   	retq   

000000000040a5cd <ExpressionInfixOperator>:
  40a5cd:	55                   	push   %rbp
  40a5ce:	48 89 e5             	mov    %rsp,%rbp
  40a5d1:	41 55                	push   %r13
  40a5d3:	41 54                	push   %r12
  40a5d5:	53                   	push   %rbx
  40a5d6:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  40a5dd:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  40a5e4:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  40a5eb:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
  40a5f1:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  40a5f8:	4c 89 85 58 ff ff ff 	mov    %r8,-0xa8(%rbp)
  40a5ff:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  40a606:	00 
  40a607:	bf ab 86 41 00       	mov    $0x4186ab,%edi
  40a60c:	b8 00 00 00 00       	mov    $0x0,%eax
  40a611:	e8 fd ea ff ff       	callq  409113 <debugf>
  40a616:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
  40a61d:	00 
  40a61e:	74 0a                	je     40a62a <ExpressionInfixOperator+0x5d>
  40a620:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
  40a627:	00 
  40a628:	75 19                	jne    40a643 <ExpressionInfixOperator+0x76>
  40a62a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a631:	be c6 86 41 00       	mov    $0x4186c6,%esi
  40a636:	48 89 c7             	mov    %rax,%rdi
  40a639:	b8 00 00 00 00       	mov    $0x0,%eax
  40a63e:	e8 9b 60 00 00       	callq  4106de <ProgramFail>
  40a643:	83 bd 6c ff ff ff 27 	cmpl   $0x27,-0x94(%rbp)
  40a64a:	0f 85 a2 01 00 00    	jne    40a7f2 <ExpressionInfixOperator+0x225>
  40a650:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  40a657:	00 
  40a658:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a65f:	48 8b 00             	mov    (%rax),%rax
  40a662:	8b 00                	mov    (%rax),%eax
  40a664:	85 c0                	test   %eax,%eax
  40a666:	74 11                	je     40a679 <ExpressionInfixOperator+0xac>
  40a668:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a66f:	48 8b 00             	mov    (%rax),%rax
  40a672:	8b 00                	mov    (%rax),%eax
  40a674:	83 f8 08             	cmp    $0x8,%eax
  40a677:	76 19                	jbe    40a692 <ExpressionInfixOperator+0xc5>
  40a679:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a680:	be e0 86 41 00       	mov    $0x4186e0,%esi
  40a685:	48 89 c7             	mov    %rax,%rdi
  40a688:	b8 00 00 00 00       	mov    $0x0,%eax
  40a68d:	e8 4c 60 00 00       	callq  4106de <ProgramFail>
  40a692:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a699:	48 89 c7             	mov    %rax,%rdi
  40a69c:	e8 61 eb ff ff       	callq  409202 <ExpressionCoerceInteger>
  40a6a1:	89 45 84             	mov    %eax,-0x7c(%rbp)
  40a6a4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a6ab:	48 8b 00             	mov    (%rax),%rax
  40a6ae:	8b 00                	mov    (%rax),%eax
  40a6b0:	83 f8 0b             	cmp    $0xb,%eax
  40a6b3:	74 7e                	je     40a733 <ExpressionInfixOperator+0x166>
  40a6b5:	83 f8 0c             	cmp    $0xc,%eax
  40a6b8:	0f 85 ef 00 00 00    	jne    40a7ad <ExpressionInfixOperator+0x1e0>
  40a6be:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a6c5:	4c 8b 60 10          	mov    0x10(%rax),%r12
  40a6c9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a6d0:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40a6d4:	0f be d8             	movsbl %al,%ebx
  40a6d7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a6de:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a6e2:	49 89 c5             	mov    %rax,%r13
  40a6e5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a6ec:	48 8b 00             	mov    (%rax),%rax
  40a6ef:	8b 4d 84             	mov    -0x7c(%rbp),%ecx
  40a6f2:	ba 01 00 00 00       	mov    $0x1,%edx
  40a6f7:	89 ce                	mov    %ecx,%esi
  40a6f9:	48 89 c7             	mov    %rax,%rdi
  40a6fc:	e8 ac 2c 00 00       	callq  40d3ad <TypeSize>
  40a701:	48 98                	cltq   
  40a703:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
  40a708:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a70f:	48 8b 00             	mov    (%rax),%rax
  40a712:	48 8b 70 18          	mov    0x18(%rax),%rsi
  40a716:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a71d:	4d 89 e0             	mov    %r12,%r8
  40a720:	89 d9                	mov    %ebx,%ecx
  40a722:	48 89 c7             	mov    %rax,%rdi
  40a725:	e8 93 46 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  40a72a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40a72e:	e9 9d 00 00 00       	jmpq   40a7d0 <ExpressionInfixOperator+0x203>
  40a733:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a73a:	4c 8b 60 10          	mov    0x10(%rax),%r12
  40a73e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a745:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40a749:	0f be d8             	movsbl %al,%ebx
  40a74c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a753:	48 8b 40 08          	mov    0x8(%rax),%rax
  40a757:	4c 8b 28             	mov    (%rax),%r13
  40a75a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a761:	48 8b 00             	mov    (%rax),%rax
  40a764:	48 8b 40 18          	mov    0x18(%rax),%rax
  40a768:	ba 01 00 00 00       	mov    $0x1,%edx
  40a76d:	be 00 00 00 00       	mov    $0x0,%esi
  40a772:	48 89 c7             	mov    %rax,%rdi
  40a775:	e8 33 2c 00 00       	callq  40d3ad <TypeSize>
  40a77a:	0f af 45 84          	imul   -0x7c(%rbp),%eax
  40a77e:	48 98                	cltq   
  40a780:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
  40a785:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a78c:	48 8b 00             	mov    (%rax),%rax
  40a78f:	48 8b 70 18          	mov    0x18(%rax),%rsi
  40a793:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a79a:	4d 89 e0             	mov    %r12,%r8
  40a79d:	89 d9                	mov    %ebx,%ecx
  40a79f:	48 89 c7             	mov    %rax,%rdi
  40a7a2:	e8 16 46 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  40a7a7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  40a7ab:	eb 23                	jmp    40a7d0 <ExpressionInfixOperator+0x203>
  40a7ad:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a7b4:	48 8b 10             	mov    (%rax),%rdx
  40a7b7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a7be:	be ff 86 41 00       	mov    $0x4186ff,%esi
  40a7c3:	48 89 c7             	mov    %rax,%rdi
  40a7c6:	b8 00 00 00 00       	mov    $0x0,%eax
  40a7cb:	e8 0e 5f 00 00       	callq  4106de <ProgramFail>
  40a7d0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40a7d4:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40a7db:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a7e2:	48 89 ce             	mov    %rcx,%rsi
  40a7e5:	48 89 c7             	mov    %rax,%rdi
  40a7e8:	e8 7b ec ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40a7ed:	e9 1d 0a 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40a7f2:	83 bd 6c ff ff ff 0d 	cmpl   $0xd,-0x94(%rbp)
  40a7f9:	75 29                	jne    40a824 <ExpressionInfixOperator+0x257>
  40a7fb:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40a802:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40a809:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  40a810:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a817:	48 89 c7             	mov    %rax,%rdi
  40a81a:	e8 51 f6 ff ff       	callq  409e70 <ExpressionQuestionMarkOperator>
  40a81f:	e9 eb 09 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40a824:	83 bd 6c ff ff ff 0e 	cmpl   $0xe,-0x94(%rbp)
  40a82b:	75 29                	jne    40a856 <ExpressionInfixOperator+0x289>
  40a82d:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40a834:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40a83b:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
  40a842:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a849:	48 89 c7             	mov    %rax,%rdi
  40a84c:	e8 b6 f6 ff ff       	callq  409f07 <ExpressionColonOperator>
  40a851:	e9 b9 09 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40a856:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a85d:	48 8b 00             	mov    (%rax),%rax
  40a860:	8b 00                	mov    (%rax),%eax
  40a862:	85 c0                	test   %eax,%eax
  40a864:	0f 84 4a 04 00 00    	je     40acb4 <ExpressionInfixOperator+0x6e7>
  40a86a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a871:	48 8b 00             	mov    (%rax),%rax
  40a874:	8b 00                	mov    (%rax),%eax
  40a876:	83 f8 08             	cmp    $0x8,%eax
  40a879:	0f 87 35 04 00 00    	ja     40acb4 <ExpressionInfixOperator+0x6e7>
  40a87f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a886:	48 8b 00             	mov    (%rax),%rax
  40a889:	8b 00                	mov    (%rax),%eax
  40a88b:	85 c0                	test   %eax,%eax
  40a88d:	0f 84 21 04 00 00    	je     40acb4 <ExpressionInfixOperator+0x6e7>
  40a893:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a89a:	48 8b 00             	mov    (%rax),%rax
  40a89d:	8b 00                	mov    (%rax),%eax
  40a89f:	83 f8 08             	cmp    $0x8,%eax
  40a8a2:	0f 87 0c 04 00 00    	ja     40acb4 <ExpressionInfixOperator+0x6e7>
  40a8a8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40a8af:	48 89 c7             	mov    %rax,%rdi
  40a8b2:	e8 4b e9 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40a8b7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40a8bb:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40a8c2:	48 89 c7             	mov    %rax,%rdi
  40a8c5:	e8 38 e9 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40a8ca:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40a8ce:	83 bd 6c ff ff ff 20 	cmpl   $0x20,-0x94(%rbp)
  40a8d5:	0f 87 9d 03 00 00    	ja     40ac78 <ExpressionInfixOperator+0x6ab>
  40a8db:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  40a8e1:	48 8b 04 c5 18 87 41 	mov    0x418718(,%rax,8),%rax
  40a8e8:	00 
  40a8e9:	ff e0                	jmpq   *%rax
  40a8eb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40a8ef:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a8f6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a8fd:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a902:	48 89 c7             	mov    %rax,%rdi
  40a905:	e8 5c ea ff ff       	callq  409366 <ExpressionAssignInt>
  40a90a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a90e:	e9 7f 03 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40a913:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40a917:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40a91b:	48 01 c2             	add    %rax,%rdx
  40a91e:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a925:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a92c:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a931:	48 89 c7             	mov    %rax,%rdi
  40a934:	e8 2d ea ff ff       	callq  409366 <ExpressionAssignInt>
  40a939:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a93d:	e9 50 03 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40a942:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a946:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
  40a94a:	48 89 c2             	mov    %rax,%rdx
  40a94d:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a954:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a95b:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a960:	48 89 c7             	mov    %rax,%rdi
  40a963:	e8 fe e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40a968:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a96c:	e9 21 03 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40a971:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a975:	48 0f af 45 c0       	imul   -0x40(%rbp),%rax
  40a97a:	48 89 c2             	mov    %rax,%rdx
  40a97d:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a984:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a98b:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a990:	48 89 c7             	mov    %rax,%rdi
  40a993:	e8 ce e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40a998:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a99c:	e9 f1 02 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40a9a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a9a5:	48 99                	cqto   
  40a9a7:	48 f7 7d c0          	idivq  -0x40(%rbp)
  40a9ab:	48 89 c2             	mov    %rax,%rdx
  40a9ae:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a9b5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a9bc:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a9c1:	48 89 c7             	mov    %rax,%rdi
  40a9c4:	e8 9d e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40a9c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a9cd:	e9 c0 02 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40a9d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40a9d6:	48 99                	cqto   
  40a9d8:	48 f7 7d c0          	idivq  -0x40(%rbp)
  40a9dc:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40a9e3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40a9ea:	b9 00 00 00 00       	mov    $0x0,%ecx
  40a9ef:	48 89 c7             	mov    %rax,%rdi
  40a9f2:	e8 6f e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40a9f7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40a9fb:	e9 92 02 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aa00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aa04:	89 c2                	mov    %eax,%edx
  40aa06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aa0a:	89 d1                	mov    %edx,%ecx
  40aa0c:	48 d3 e0             	shl    %cl,%rax
  40aa0f:	48 89 c2             	mov    %rax,%rdx
  40aa12:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aa19:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aa20:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aa25:	48 89 c7             	mov    %rax,%rdi
  40aa28:	e8 39 e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40aa2d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40aa31:	e9 5c 02 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aa36:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40aa3a:	89 c2                	mov    %eax,%edx
  40aa3c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aa40:	89 d1                	mov    %edx,%ecx
  40aa42:	48 d3 f8             	sar    %cl,%rax
  40aa45:	48 89 c2             	mov    %rax,%rdx
  40aa48:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aa4f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aa56:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aa5b:	48 89 c7             	mov    %rax,%rdi
  40aa5e:	e8 03 e9 ff ff       	callq  409366 <ExpressionAssignInt>
  40aa63:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40aa67:	e9 26 02 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aa6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aa70:	48 23 45 c0          	and    -0x40(%rbp),%rax
  40aa74:	48 89 c2             	mov    %rax,%rdx
  40aa77:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aa7e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aa85:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aa8a:	48 89 c7             	mov    %rax,%rdi
  40aa8d:	e8 d4 e8 ff ff       	callq  409366 <ExpressionAssignInt>
  40aa92:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40aa96:	e9 f7 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aa9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aa9f:	48 0b 45 c0          	or     -0x40(%rbp),%rax
  40aaa3:	48 89 c2             	mov    %rax,%rdx
  40aaa6:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aaad:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aab4:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aab9:	48 89 c7             	mov    %rax,%rdi
  40aabc:	e8 a5 e8 ff ff       	callq  409366 <ExpressionAssignInt>
  40aac1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40aac5:	e9 c8 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aaca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aace:	48 33 45 c0          	xor    -0x40(%rbp),%rax
  40aad2:	48 89 c2             	mov    %rax,%rdx
  40aad5:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aadc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aae3:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aae8:	48 89 c7             	mov    %rax,%rdi
  40aaeb:	e8 76 e8 ff ff       	callq  409366 <ExpressionAssignInt>
  40aaf0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40aaf4:	e9 99 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aaf9:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  40aafe:	75 07                	jne    40ab07 <ExpressionInfixOperator+0x53a>
  40ab00:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ab05:	74 07                	je     40ab0e <ExpressionInfixOperator+0x541>
  40ab07:	b8 01 00 00 00       	mov    $0x1,%eax
  40ab0c:	eb 05                	jmp    40ab13 <ExpressionInfixOperator+0x546>
  40ab0e:	b8 00 00 00 00       	mov    $0x0,%eax
  40ab13:	48 98                	cltq   
  40ab15:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab19:	e9 74 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab1e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  40ab23:	74 0e                	je     40ab33 <ExpressionInfixOperator+0x566>
  40ab25:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40ab2a:	74 07                	je     40ab33 <ExpressionInfixOperator+0x566>
  40ab2c:	b8 01 00 00 00       	mov    $0x1,%eax
  40ab31:	eb 05                	jmp    40ab38 <ExpressionInfixOperator+0x56b>
  40ab33:	b8 00 00 00 00       	mov    $0x0,%eax
  40ab38:	48 98                	cltq   
  40ab3a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab3e:	e9 4f 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab43:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ab47:	48 0b 45 c0          	or     -0x40(%rbp),%rax
  40ab4b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab4f:	e9 3e 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab54:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ab58:	48 33 45 c0          	xor    -0x40(%rbp),%rax
  40ab5c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab60:	e9 2d 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab65:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ab69:	48 23 45 c0          	and    -0x40(%rbp),%rax
  40ab6d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab71:	e9 1c 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab76:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ab7a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40ab7e:	0f 94 c0             	sete   %al
  40ab81:	0f b6 c0             	movzbl %al,%eax
  40ab84:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab88:	e9 05 01 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ab8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ab91:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40ab95:	0f 95 c0             	setne  %al
  40ab98:	0f b6 c0             	movzbl %al,%eax
  40ab9b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ab9f:	e9 ee 00 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40aba4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40aba8:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40abac:	0f 9c c0             	setl   %al
  40abaf:	0f b6 c0             	movzbl %al,%eax
  40abb2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40abb6:	e9 d7 00 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40abbb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40abbf:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40abc3:	0f 9f c0             	setg   %al
  40abc6:	0f b6 c0             	movzbl %al,%eax
  40abc9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40abcd:	e9 c0 00 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40abd2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40abd6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40abda:	0f 9e c0             	setle  %al
  40abdd:	0f b6 c0             	movzbl %al,%eax
  40abe0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40abe4:	e9 a9 00 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40abe9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40abed:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
  40abf1:	0f 9d c0             	setge  %al
  40abf4:	0f b6 c0             	movzbl %al,%eax
  40abf7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40abfb:	e9 92 00 00 00       	jmpq   40ac92 <ExpressionInfixOperator+0x6c5>
  40ac00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac04:	89 c2                	mov    %eax,%edx
  40ac06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac0a:	89 d1                	mov    %edx,%ecx
  40ac0c:	48 d3 e0             	shl    %cl,%rax
  40ac0f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac13:	eb 7d                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac15:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac19:	89 c2                	mov    %eax,%edx
  40ac1b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac1f:	89 d1                	mov    %edx,%ecx
  40ac21:	48 d3 f8             	sar    %cl,%rax
  40ac24:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac28:	eb 68                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac2a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40ac2e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ac32:	48 01 d0             	add    %rdx,%rax
  40ac35:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac39:	eb 57                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac3b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac3f:	48 2b 45 c0          	sub    -0x40(%rbp),%rax
  40ac43:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac47:	eb 49                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac49:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac4d:	48 0f af 45 c0       	imul   -0x40(%rbp),%rax
  40ac52:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac56:	eb 3a                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac58:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac5c:	48 99                	cqto   
  40ac5e:	48 f7 7d c0          	idivq  -0x40(%rbp)
  40ac62:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40ac66:	eb 2a                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40ac6c:	48 99                	cqto   
  40ac6e:	48 f7 7d c0          	idivq  -0x40(%rbp)
  40ac72:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40ac76:	eb 1a                	jmp    40ac92 <ExpressionInfixOperator+0x6c5>
  40ac78:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ac7f:	be 03 86 41 00       	mov    $0x418603,%esi
  40ac84:	48 89 c7             	mov    %rax,%rdi
  40ac87:	b8 00 00 00 00       	mov    $0x0,%eax
  40ac8c:	e8 4d 5a 00 00       	callq  4106de <ProgramFail>
  40ac91:	90                   	nop
  40ac92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ac96:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40ac9d:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aca4:	48 89 ce             	mov    %rcx,%rsi
  40aca7:	48 89 c7             	mov    %rax,%rdi
  40acaa:	e8 b8 e9 ff ff       	callq  409667 <ExpressionPushInt>
  40acaf:	e9 5b 05 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40acb4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40acbb:	48 8b 00             	mov    (%rax),%rax
  40acbe:	8b 00                	mov    (%rax),%eax
  40acc0:	83 f8 0b             	cmp    $0xb,%eax
  40acc3:	0f 85 3c 03 00 00    	jne    40b005 <ExpressionInfixOperator+0xa38>
  40acc9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40acd0:	48 8b 00             	mov    (%rax),%rax
  40acd3:	8b 00                	mov    (%rax),%eax
  40acd5:	85 c0                	test   %eax,%eax
  40acd7:	0f 84 28 03 00 00    	je     40b005 <ExpressionInfixOperator+0xa38>
  40acdd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40ace4:	48 8b 00             	mov    (%rax),%rax
  40ace7:	8b 00                	mov    (%rax),%eax
  40ace9:	83 f8 08             	cmp    $0x8,%eax
  40acec:	0f 87 13 03 00 00    	ja     40b005 <ExpressionInfixOperator+0xa38>
  40acf2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40acf9:	48 89 c7             	mov    %rax,%rdi
  40acfc:	e8 01 e5 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40ad01:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40ad05:	83 bd 6c ff ff ff 14 	cmpl   $0x14,-0x94(%rbp)
  40ad0c:	74 0d                	je     40ad1b <ExpressionInfixOperator+0x74e>
  40ad0e:	83 bd 6c ff ff ff 15 	cmpl   $0x15,-0x94(%rbp)
  40ad15:	0f 85 93 00 00 00    	jne    40adae <ExpressionInfixOperator+0x7e1>
  40ad1b:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  40ad20:	74 19                	je     40ad3b <ExpressionInfixOperator+0x76e>
  40ad22:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ad29:	be 03 86 41 00       	mov    $0x418603,%esi
  40ad2e:	48 89 c7             	mov    %rax,%rdi
  40ad31:	b8 00 00 00 00       	mov    $0x0,%eax
  40ad36:	e8 a3 59 00 00       	callq  4106de <ProgramFail>
  40ad3b:	83 bd 6c ff ff ff 14 	cmpl   $0x14,-0x94(%rbp)
  40ad42:	75 35                	jne    40ad79 <ExpressionInfixOperator+0x7ac>
  40ad44:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40ad4b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ad4f:	48 8b 00             	mov    (%rax),%rax
  40ad52:	48 85 c0             	test   %rax,%rax
  40ad55:	0f 94 c0             	sete   %al
  40ad58:	0f b6 d0             	movzbl %al,%edx
  40ad5b:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40ad62:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ad69:	48 89 ce             	mov    %rcx,%rsi
  40ad6c:	48 89 c7             	mov    %rax,%rdi
  40ad6f:	e8 f3 e8 ff ff       	callq  409667 <ExpressionPushInt>
  40ad74:	e9 87 02 00 00       	jmpq   40b000 <ExpressionInfixOperator+0xa33>
  40ad79:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40ad80:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ad84:	48 8b 00             	mov    (%rax),%rax
  40ad87:	48 85 c0             	test   %rax,%rax
  40ad8a:	0f 95 c0             	setne  %al
  40ad8d:	0f b6 d0             	movzbl %al,%edx
  40ad90:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40ad97:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ad9e:	48 89 ce             	mov    %rcx,%rsi
  40ada1:	48 89 c7             	mov    %rax,%rdi
  40ada4:	e8 be e8 ff ff       	callq  409667 <ExpressionPushInt>
  40ada9:	e9 52 02 00 00       	jmpq   40b000 <ExpressionInfixOperator+0xa33>
  40adae:	83 bd 6c ff ff ff 1c 	cmpl   $0x1c,-0x94(%rbp)
  40adb5:	74 0d                	je     40adc4 <ExpressionInfixOperator+0x7f7>
  40adb7:	83 bd 6c ff ff ff 1d 	cmpl   $0x1d,-0x94(%rbp)
  40adbe:	0f 85 ba 00 00 00    	jne    40ae7e <ExpressionInfixOperator+0x8b1>
  40adc4:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40adcb:	48 8b 00             	mov    (%rax),%rax
  40adce:	48 8b 40 18          	mov    0x18(%rax),%rax
  40add2:	ba 01 00 00 00       	mov    $0x1,%edx
  40add7:	be 00 00 00 00       	mov    $0x0,%esi
  40addc:	48 89 c7             	mov    %rax,%rdi
  40addf:	e8 c9 25 00 00       	callq  40d3ad <TypeSize>
  40ade4:	89 45 a8             	mov    %eax,-0x58(%rbp)
  40ade7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40adee:	48 8b 40 08          	mov    0x8(%rax),%rax
  40adf2:	48 8b 00             	mov    (%rax),%rax
  40adf5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40adf9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40adfe:	75 19                	jne    40ae19 <ExpressionInfixOperator+0x84c>
  40ae00:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ae07:	be 15 86 41 00       	mov    $0x418615,%esi
  40ae0c:	48 89 c7             	mov    %rax,%rdi
  40ae0f:	b8 00 00 00 00       	mov    $0x0,%eax
  40ae14:	e8 c5 58 00 00       	callq  4106de <ProgramFail>
  40ae19:	83 bd 6c ff ff ff 1c 	cmpl   $0x1c,-0x94(%rbp)
  40ae20:	75 10                	jne    40ae32 <ExpressionInfixOperator+0x865>
  40ae22:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40ae25:	48 98                	cltq   
  40ae27:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
  40ae2c:	48 01 45 d0          	add    %rax,-0x30(%rbp)
  40ae30:	eb 11                	jmp    40ae43 <ExpressionInfixOperator+0x876>
  40ae32:	8b 45 a8             	mov    -0x58(%rbp),%eax
  40ae35:	48 98                	cltq   
  40ae37:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
  40ae3c:	48 f7 d8             	neg    %rax
  40ae3f:	48 01 45 d0          	add    %rax,-0x30(%rbp)
  40ae43:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40ae4a:	48 8b 10             	mov    (%rax),%rdx
  40ae4d:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40ae54:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ae5b:	48 89 ce             	mov    %rcx,%rsi
  40ae5e:	48 89 c7             	mov    %rax,%rdi
  40ae61:	e8 5f e6 ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40ae66:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  40ae6a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40ae6e:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ae72:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ae76:	48 89 10             	mov    %rdx,(%rax)
  40ae79:	e9 82 01 00 00       	jmpq   40b000 <ExpressionInfixOperator+0xa33>
  40ae7e:	83 bd 6c ff ff ff 02 	cmpl   $0x2,-0x94(%rbp)
  40ae85:	75 7b                	jne    40af02 <ExpressionInfixOperator+0x935>
  40ae87:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
  40ae8c:	75 74                	jne    40af02 <ExpressionInfixOperator+0x935>
  40ae8e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ae95:	48 8b 00             	mov    (%rax),%rax
  40ae98:	be 28 00 00 00       	mov    $0x28,%esi
  40ae9d:	48 89 c7             	mov    %rax,%rdi
  40aea0:	e8 b4 20 00 00       	callq  40cf59 <HeapUnpopStack>
  40aea5:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40aeac:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40aeb3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aeba:	48 83 ec 08          	sub    $0x8,%rsp
  40aebe:	6a 00                	pushq  $0x0
  40aec0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40aec6:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40aecc:	b9 00 00 00 00       	mov    $0x0,%ecx
  40aed1:	48 89 c7             	mov    %rax,%rdi
  40aed4:	e8 5c ea ff ff       	callq  409935 <ExpressionAssign>
  40aed9:	48 83 c4 10          	add    $0x10,%rsp
  40aedd:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  40aee4:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40aeeb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40aef2:	48 89 ce             	mov    %rcx,%rsi
  40aef5:	48 89 c7             	mov    %rax,%rdi
  40aef8:	e8 6b e5 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40aefd:	e9 fe 00 00 00       	jmpq   40b000 <ExpressionInfixOperator+0xa33>
  40af02:	83 bd 6c ff ff ff 03 	cmpl   $0x3,-0x94(%rbp)
  40af09:	74 0d                	je     40af18 <ExpressionInfixOperator+0x94b>
  40af0b:	83 bd 6c ff ff ff 04 	cmpl   $0x4,-0x94(%rbp)
  40af12:	0f 85 ca 00 00 00    	jne    40afe2 <ExpressionInfixOperator+0xa15>
  40af18:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40af1f:	48 8b 00             	mov    (%rax),%rax
  40af22:	48 8b 40 18          	mov    0x18(%rax),%rax
  40af26:	ba 01 00 00 00       	mov    $0x1,%edx
  40af2b:	be 00 00 00 00       	mov    $0x0,%esi
  40af30:	48 89 c7             	mov    %rax,%rdi
  40af33:	e8 75 24 00 00       	callq  40d3ad <TypeSize>
  40af38:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40af3b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40af42:	48 8b 40 08          	mov    0x8(%rax),%rax
  40af46:	48 8b 00             	mov    (%rax),%rax
  40af49:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40af4d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40af52:	75 19                	jne    40af6d <ExpressionInfixOperator+0x9a0>
  40af54:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40af5b:	be 15 86 41 00       	mov    $0x418615,%esi
  40af60:	48 89 c7             	mov    %rax,%rdi
  40af63:	b8 00 00 00 00       	mov    $0x0,%eax
  40af68:	e8 71 57 00 00       	callq  4106de <ProgramFail>
  40af6d:	83 bd 6c ff ff ff 03 	cmpl   $0x3,-0x94(%rbp)
  40af74:	75 10                	jne    40af86 <ExpressionInfixOperator+0x9b9>
  40af76:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40af79:	48 98                	cltq   
  40af7b:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
  40af80:	48 01 45 d0          	add    %rax,-0x30(%rbp)
  40af84:	eb 11                	jmp    40af97 <ExpressionInfixOperator+0x9ca>
  40af86:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40af89:	48 98                	cltq   
  40af8b:	48 0f af 45 b0       	imul   -0x50(%rbp),%rax
  40af90:	48 f7 d8             	neg    %rax
  40af93:	48 01 45 d0          	add    %rax,-0x30(%rbp)
  40af97:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40af9e:	48 8b 00             	mov    (%rax),%rax
  40afa1:	be 28 00 00 00       	mov    $0x28,%esi
  40afa6:	48 89 c7             	mov    %rax,%rdi
  40afa9:	e8 ab 1f 00 00       	callq  40cf59 <HeapUnpopStack>
  40afae:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40afb5:	48 8b 40 08          	mov    0x8(%rax),%rax
  40afb9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40afbd:	48 89 10             	mov    %rdx,(%rax)
  40afc0:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  40afc7:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40afce:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40afd5:	48 89 ce             	mov    %rcx,%rsi
  40afd8:	48 89 c7             	mov    %rax,%rdi
  40afdb:	e8 88 e4 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40afe0:	eb 1e                	jmp    40b000 <ExpressionInfixOperator+0xa33>
  40afe2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40afe9:	be 03 86 41 00       	mov    $0x418603,%esi
  40afee:	48 89 c7             	mov    %rax,%rdi
  40aff1:	b8 00 00 00 00       	mov    $0x0,%eax
  40aff6:	e8 e3 56 00 00       	callq  4106de <ProgramFail>
  40affb:	e9 0f 02 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40b000:	e9 0a 02 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40b005:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b00c:	48 8b 00             	mov    (%rax),%rax
  40b00f:	8b 00                	mov    (%rax),%eax
  40b011:	83 f8 0b             	cmp    $0xb,%eax
  40b014:	0f 85 f2 00 00 00    	jne    40b10c <ExpressionInfixOperator+0xb3f>
  40b01a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40b021:	48 8b 00             	mov    (%rax),%rax
  40b024:	8b 00                	mov    (%rax),%eax
  40b026:	83 f8 0b             	cmp    $0xb,%eax
  40b029:	0f 85 dd 00 00 00    	jne    40b10c <ExpressionInfixOperator+0xb3f>
  40b02f:	83 bd 6c ff ff ff 02 	cmpl   $0x2,-0x94(%rbp)
  40b036:	0f 84 d0 00 00 00    	je     40b10c <ExpressionInfixOperator+0xb3f>
  40b03c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  40b043:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b047:	48 8b 00             	mov    (%rax),%rax
  40b04a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  40b04e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b055:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b059:	48 8b 00             	mov    (%rax),%rax
  40b05c:	48 89 45 90          	mov    %rax,-0x70(%rbp)
  40b060:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  40b066:	83 f8 15             	cmp    $0x15,%eax
  40b069:	74 33                	je     40b09e <ExpressionInfixOperator+0xad1>
  40b06b:	83 f8 1d             	cmp    $0x1d,%eax
  40b06e:	74 57                	je     40b0c7 <ExpressionInfixOperator+0xafa>
  40b070:	83 f8 14             	cmp    $0x14,%eax
  40b073:	75 78                	jne    40b0ed <ExpressionInfixOperator+0xb20>
  40b075:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40b079:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
  40b07d:	0f 94 c0             	sete   %al
  40b080:	0f b6 d0             	movzbl %al,%edx
  40b083:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40b08a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b091:	48 89 ce             	mov    %rcx,%rsi
  40b094:	48 89 c7             	mov    %rax,%rdi
  40b097:	e8 cb e5 ff ff       	callq  409667 <ExpressionPushInt>
  40b09c:	eb 69                	jmp    40b107 <ExpressionInfixOperator+0xb3a>
  40b09e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40b0a2:	48 3b 45 98          	cmp    -0x68(%rbp),%rax
  40b0a6:	0f 95 c0             	setne  %al
  40b0a9:	0f b6 d0             	movzbl %al,%edx
  40b0ac:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40b0b3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b0ba:	48 89 ce             	mov    %rcx,%rsi
  40b0bd:	48 89 c7             	mov    %rax,%rdi
  40b0c0:	e8 a2 e5 ff ff       	callq  409667 <ExpressionPushInt>
  40b0c5:	eb 40                	jmp    40b107 <ExpressionInfixOperator+0xb3a>
  40b0c7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  40b0cb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40b0cf:	48 29 c2             	sub    %rax,%rdx
  40b0d2:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40b0d9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b0e0:	48 89 ce             	mov    %rcx,%rsi
  40b0e3:	48 89 c7             	mov    %rax,%rdi
  40b0e6:	e8 7c e5 ff ff       	callq  409667 <ExpressionPushInt>
  40b0eb:	eb 1a                	jmp    40b107 <ExpressionInfixOperator+0xb3a>
  40b0ed:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b0f4:	be 03 86 41 00       	mov    $0x418603,%esi
  40b0f9:	48 89 c7             	mov    %rax,%rdi
  40b0fc:	b8 00 00 00 00       	mov    $0x0,%eax
  40b101:	e8 d8 55 00 00       	callq  4106de <ProgramFail>
  40b106:	90                   	nop
  40b107:	e9 03 01 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40b10c:	83 bd 6c ff ff ff 02 	cmpl   $0x2,-0x94(%rbp)
  40b113:	75 74                	jne    40b189 <ExpressionInfixOperator+0xbbc>
  40b115:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b11c:	48 8b 00             	mov    (%rax),%rax
  40b11f:	be 28 00 00 00       	mov    $0x28,%esi
  40b124:	48 89 c7             	mov    %rax,%rdi
  40b127:	e8 2d 1e 00 00       	callq  40cf59 <HeapUnpopStack>
  40b12c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40b133:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40b13a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b141:	48 83 ec 08          	sub    $0x8,%rsp
  40b145:	6a 00                	pushq  $0x0
  40b147:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b14d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b153:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b158:	48 89 c7             	mov    %rax,%rdi
  40b15b:	e8 d5 e7 ff ff       	callq  409935 <ExpressionAssign>
  40b160:	48 83 c4 10          	add    $0x10,%rsp
  40b164:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
  40b16b:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40b172:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b179:	48 89 ce             	mov    %rcx,%rsi
  40b17c:	48 89 c7             	mov    %rax,%rdi
  40b17f:	e8 e4 e2 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40b184:	e9 86 00 00 00       	jmpq   40b20f <ExpressionInfixOperator+0xc42>
  40b189:	83 bd 6c ff ff ff 26 	cmpl   $0x26,-0x94(%rbp)
  40b190:	75 62                	jne    40b1f4 <ExpressionInfixOperator+0xc27>
  40b192:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40b199:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b19d:	48 8b 10             	mov    (%rax),%rdx
  40b1a0:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40b1a7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b1ae:	48 89 ce             	mov    %rcx,%rsi
  40b1b1:	48 89 c7             	mov    %rax,%rdi
  40b1b4:	e8 0c e3 ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40b1b9:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  40b1bd:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40b1c4:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  40b1c8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b1cf:	48 83 ec 08          	sub    $0x8,%rsp
  40b1d3:	6a 01                	pushq  $0x1
  40b1d5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b1db:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b1e1:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b1e6:	48 89 c7             	mov    %rax,%rdi
  40b1e9:	e8 47 e7 ff ff       	callq  409935 <ExpressionAssign>
  40b1ee:	48 83 c4 10          	add    $0x10,%rsp
  40b1f2:	eb 1b                	jmp    40b20f <ExpressionInfixOperator+0xc42>
  40b1f4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40b1fb:	be 03 86 41 00       	mov    $0x418603,%esi
  40b200:	48 89 c7             	mov    %rax,%rdi
  40b203:	b8 00 00 00 00       	mov    $0x0,%eax
  40b208:	e8 d1 54 00 00       	callq  4106de <ProgramFail>
  40b20d:	eb 00                	jmp    40b20f <ExpressionInfixOperator+0xc42>
  40b20f:	90                   	nop
  40b210:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
  40b214:	5b                   	pop    %rbx
  40b215:	41 5c                	pop    %r12
  40b217:	41 5d                	pop    %r13
  40b219:	5d                   	pop    %rbp
  40b21a:	c3                   	retq   

000000000040b21b <ExpressionStackCollapse>:
  40b21b:	55                   	push   %rbp
  40b21c:	48 89 e5             	mov    %rsp,%rbp
  40b21f:	48 83 ec 50          	sub    $0x50,%rsp
  40b223:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40b227:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40b22b:	89 55 bc             	mov    %edx,-0x44(%rbp)
  40b22e:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  40b232:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40b235:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b238:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40b23c:	48 8b 00             	mov    (%rax),%rax
  40b23f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40b243:	8b 45 bc             	mov    -0x44(%rbp),%eax
  40b246:	89 c6                	mov    %eax,%esi
  40b248:	bf 20 88 41 00       	mov    $0x418820,%edi
  40b24d:	b8 00 00 00 00       	mov    $0x0,%eax
  40b252:	e8 bc de ff ff       	callq  409113 <debugf>
  40b257:	e9 2a 03 00 00       	jmpq   40b586 <ExpressionStackCollapse+0x36b>
  40b25c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b260:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  40b264:	84 c0                	test   %al,%al
  40b266:	75 0d                	jne    40b275 <ExpressionStackCollapse+0x5a>
  40b268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b26c:	48 8b 00             	mov    (%rax),%rax
  40b26f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b273:	eb 08                	jmp    40b27d <ExpressionStackCollapse+0x62>
  40b275:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b279:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b27d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b281:	0f b7 40 14          	movzwl 0x14(%rax),%eax
  40b285:	0f b7 c0             	movzwl %ax,%eax
  40b288:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40b28b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b28e:	3b 45 bc             	cmp    -0x44(%rbp),%eax
  40b291:	0f 8c e4 02 00 00    	jl     40b57b <ExpressionStackCollapse+0x360>
  40b297:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40b29c:	0f 84 d9 02 00 00    	je     40b57b <ExpressionStackCollapse+0x360>
  40b2a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b2a6:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  40b2aa:	0f b6 c0             	movzbl %al,%eax
  40b2ad:	83 f8 01             	cmp    $0x1,%eax
  40b2b0:	74 29                	je     40b2db <ExpressionStackCollapse+0xc0>
  40b2b2:	83 f8 01             	cmp    $0x1,%eax
  40b2b5:	7f 0d                	jg     40b2c4 <ExpressionStackCollapse+0xa9>
  40b2b7:	85 c0                	test   %eax,%eax
  40b2b9:	0f 84 81 02 00 00    	je     40b540 <ExpressionStackCollapse+0x325>
  40b2bf:	e9 a2 02 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b2c4:	83 f8 02             	cmp    $0x2,%eax
  40b2c7:	0f 84 76 01 00 00    	je     40b443 <ExpressionStackCollapse+0x228>
  40b2cd:	83 f8 03             	cmp    $0x3,%eax
  40b2d0:	0f 84 b6 00 00 00    	je     40b38c <ExpressionStackCollapse+0x171>
  40b2d6:	e9 8b 02 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b2db:	bf 3e 88 41 00       	mov    $0x41883e,%edi
  40b2e0:	b8 00 00 00 00       	mov    $0x0,%eax
  40b2e5:	e8 29 de ff ff       	callq  409113 <debugf>
  40b2ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b2ee:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b2f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40b2f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b2fa:	48 89 c7             	mov    %rax,%rdi
  40b2fd:	e8 08 20 00 00       	callq  40d30a <TypeStackSizeValue>
  40b302:	83 c0 40             	add    $0x40,%eax
  40b305:	89 c2                	mov    %eax,%edx
  40b307:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b30b:	48 8b 00             	mov    (%rax),%rax
  40b30e:	be 00 00 00 00       	mov    $0x0,%esi
  40b313:	48 89 c7             	mov    %rax,%rdi
  40b316:	e8 73 1c 00 00       	callq  40cf8e <HeapPopStack>
  40b31b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b31f:	48 8b 00             	mov    (%rax),%rax
  40b322:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40b326:	ba 18 00 00 00       	mov    $0x18,%edx
  40b32b:	48 89 ce             	mov    %rcx,%rsi
  40b32e:	48 89 c7             	mov    %rax,%rdi
  40b331:	e8 58 1c 00 00       	callq  40cf8e <HeapPopStack>
  40b336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b33a:	48 8b 10             	mov    (%rax),%rdx
  40b33d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40b341:	48 89 10             	mov    %rdx,(%rax)
  40b344:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b348:	8b 40 1c             	mov    0x1c(%rax),%eax
  40b34b:	85 c0                	test   %eax,%eax
  40b34d:	75 20                	jne    40b36f <ExpressionStackCollapse+0x154>
  40b34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b353:	8b 50 10             	mov    0x10(%rax),%edx
  40b356:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b35a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  40b35e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b362:	48 89 c7             	mov    %rax,%rdi
  40b365:	e8 f5 eb ff ff       	callq  409f5f <ExpressionPrefixOperator>
  40b36a:	e9 f7 01 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b36f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40b373:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b377:	ba 00 00 00 00       	mov    $0x0,%edx
  40b37c:	48 89 ce             	mov    %rcx,%rsi
  40b37f:	48 89 c7             	mov    %rax,%rdi
  40b382:	e8 e0 e2 ff ff       	callq  409667 <ExpressionPushInt>
  40b387:	e9 da 01 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b38c:	bf 51 88 41 00       	mov    $0x418851,%edi
  40b391:	b8 00 00 00 00       	mov    $0x0,%eax
  40b396:	e8 78 dd ff ff       	callq  409113 <debugf>
  40b39b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b39f:	48 8b 00             	mov    (%rax),%rax
  40b3a2:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b3a6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40b3aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b3ae:	48 8b 00             	mov    (%rax),%rax
  40b3b1:	ba 18 00 00 00       	mov    $0x18,%edx
  40b3b6:	be 00 00 00 00       	mov    $0x0,%esi
  40b3bb:	48 89 c7             	mov    %rax,%rdi
  40b3be:	e8 cb 1b 00 00       	callq  40cf8e <HeapPopStack>
  40b3c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b3c7:	48 89 c7             	mov    %rax,%rdi
  40b3ca:	e8 3b 1f 00 00       	callq  40d30a <TypeStackSizeValue>
  40b3cf:	83 c0 40             	add    $0x40,%eax
  40b3d2:	89 c2                	mov    %eax,%edx
  40b3d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b3d8:	48 8b 00             	mov    (%rax),%rax
  40b3db:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b3df:	48 89 ce             	mov    %rcx,%rsi
  40b3e2:	48 89 c7             	mov    %rax,%rdi
  40b3e5:	e8 a4 1b 00 00       	callq  40cf8e <HeapPopStack>
  40b3ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b3ee:	48 8b 00             	mov    (%rax),%rax
  40b3f1:	48 8b 10             	mov    (%rax),%rdx
  40b3f4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40b3f8:	48 89 10             	mov    %rdx,(%rax)
  40b3fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b3ff:	8b 40 1c             	mov    0x1c(%rax),%eax
  40b402:	85 c0                	test   %eax,%eax
  40b404:	75 20                	jne    40b426 <ExpressionStackCollapse+0x20b>
  40b406:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b40a:	8b 50 10             	mov    0x10(%rax),%edx
  40b40d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40b411:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  40b415:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b419:	48 89 c7             	mov    %rax,%rdi
  40b41c:	e8 40 ef ff ff       	callq  40a361 <ExpressionPostfixOperator>
  40b421:	e9 40 01 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b426:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40b42a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b42e:	ba 00 00 00 00       	mov    $0x0,%edx
  40b433:	48 89 ce             	mov    %rcx,%rsi
  40b436:	48 89 c7             	mov    %rax,%rdi
  40b439:	e8 29 e2 ff ff       	callq  409667 <ExpressionPushInt>
  40b43e:	e9 23 01 00 00       	jmpq   40b566 <ExpressionStackCollapse+0x34b>
  40b443:	bf 65 88 41 00       	mov    $0x418865,%edi
  40b448:	b8 00 00 00 00       	mov    $0x0,%eax
  40b44d:	e8 c1 dc ff ff       	callq  409113 <debugf>
  40b452:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b456:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b45a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40b45e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40b463:	0f 84 ce 00 00 00    	je     40b537 <ExpressionStackCollapse+0x31c>
  40b469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b46d:	48 8b 00             	mov    (%rax),%rax
  40b470:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b474:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40b478:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b47c:	48 89 c7             	mov    %rax,%rdi
  40b47f:	e8 86 1e 00 00       	callq  40d30a <TypeStackSizeValue>
  40b484:	83 c0 40             	add    $0x40,%eax
  40b487:	89 c2                	mov    %eax,%edx
  40b489:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b48d:	48 8b 00             	mov    (%rax),%rax
  40b490:	be 00 00 00 00       	mov    $0x0,%esi
  40b495:	48 89 c7             	mov    %rax,%rdi
  40b498:	e8 f1 1a 00 00       	callq  40cf8e <HeapPopStack>
  40b49d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b4a1:	48 8b 00             	mov    (%rax),%rax
  40b4a4:	ba 18 00 00 00       	mov    $0x18,%edx
  40b4a9:	be 00 00 00 00       	mov    $0x0,%esi
  40b4ae:	48 89 c7             	mov    %rax,%rdi
  40b4b1:	e8 d8 1a 00 00       	callq  40cf8e <HeapPopStack>
  40b4b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b4ba:	48 89 c7             	mov    %rax,%rdi
  40b4bd:	e8 48 1e 00 00       	callq  40d30a <TypeStackSizeValue>
  40b4c2:	83 c0 40             	add    $0x40,%eax
  40b4c5:	89 c2                	mov    %eax,%edx
  40b4c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b4cb:	48 8b 00             	mov    (%rax),%rax
  40b4ce:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40b4d2:	48 89 ce             	mov    %rcx,%rsi
  40b4d5:	48 89 c7             	mov    %rax,%rdi
  40b4d8:	e8 b1 1a 00 00       	callq  40cf8e <HeapPopStack>
  40b4dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b4e1:	48 8b 00             	mov    (%rax),%rax
  40b4e4:	48 8b 10             	mov    (%rax),%rdx
  40b4e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40b4eb:	48 89 10             	mov    %rdx,(%rax)
  40b4ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b4f2:	8b 40 1c             	mov    0x1c(%rax),%eax
  40b4f5:	85 c0                	test   %eax,%eax
  40b4f7:	75 24                	jne    40b51d <ExpressionStackCollapse+0x302>
  40b4f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b4fd:	8b 50 10             	mov    0x10(%rax),%edx
  40b500:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  40b504:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40b508:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
  40b50c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b510:	49 89 f8             	mov    %rdi,%r8
  40b513:	48 89 c7             	mov    %rax,%rdi
  40b516:	e8 b2 f0 ff ff       	callq  40a5cd <ExpressionInfixOperator>
  40b51b:	eb 49                	jmp    40b566 <ExpressionStackCollapse+0x34b>
  40b51d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  40b521:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b525:	ba 00 00 00 00       	mov    $0x0,%edx
  40b52a:	48 89 ce             	mov    %rcx,%rsi
  40b52d:	48 89 c7             	mov    %rax,%rdi
  40b530:	e8 32 e1 ff ff       	callq  409667 <ExpressionPushInt>
  40b535:	eb 2f                	jmp    40b566 <ExpressionStackCollapse+0x34b>
  40b537:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
  40b53e:	eb 26                	jmp    40b566 <ExpressionStackCollapse+0x34b>
  40b540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b544:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  40b548:	84 c0                	test   %al,%al
  40b54a:	75 19                	jne    40b565 <ExpressionStackCollapse+0x34a>
  40b54c:	b9 b0 8b 41 00       	mov    $0x418bb0,%ecx
  40b551:	ba e7 03 00 00       	mov    $0x3e7,%edx
  40b556:	be 77 88 41 00       	mov    $0x418877,%esi
  40b55b:	bf 88 88 41 00       	mov    $0x418888,%edi
  40b560:	e8 cb 76 ff ff       	callq  402c30 <__assert_fail@plt>
  40b565:	90                   	nop
  40b566:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40b56a:	8b 00                	mov    (%rax),%eax
  40b56c:	39 45 fc             	cmp    %eax,-0x4(%rbp)
  40b56f:	7f 0a                	jg     40b57b <ExpressionStackCollapse+0x360>
  40b571:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40b575:	c7 00 20 4e 00 00    	movl   $0x4e20,(%rax)
  40b57b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40b57f:	48 8b 00             	mov    (%rax),%rax
  40b582:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40b586:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40b58b:	74 18                	je     40b5a5 <ExpressionStackCollapse+0x38a>
  40b58d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b591:	48 8b 00             	mov    (%rax),%rax
  40b594:	48 85 c0             	test   %rax,%rax
  40b597:	74 0c                	je     40b5a5 <ExpressionStackCollapse+0x38a>
  40b599:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40b59c:	3b 45 bc             	cmp    -0x44(%rbp),%eax
  40b59f:	0f 8d b7 fc ff ff    	jge    40b25c <ExpressionStackCollapse+0x41>
  40b5a5:	bf b0 88 41 00       	mov    $0x4188b0,%edi
  40b5aa:	b8 00 00 00 00       	mov    $0x0,%eax
  40b5af:	e8 5f db ff ff       	callq  409113 <debugf>
  40b5b4:	90                   	nop
  40b5b5:	c9                   	leaveq 
  40b5b6:	c3                   	retq   

000000000040b5b7 <ExpressionStackPushOperator>:
  40b5b7:	55                   	push   %rbp
  40b5b8:	48 89 e5             	mov    %rsp,%rbp
  40b5bb:	48 83 ec 30          	sub    $0x30,%rsp
  40b5bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40b5c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40b5c7:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40b5ca:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40b5cd:	44 89 45 d4          	mov    %r8d,-0x2c(%rbp)
  40b5d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40b5d5:	48 8b 00             	mov    (%rax),%rax
  40b5d8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40b5dc:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b5e1:	ba 18 00 00 00       	mov    $0x18,%edx
  40b5e6:	48 89 c7             	mov    %rax,%rdi
  40b5e9:	e8 0c 35 00 00       	callq  40eafa <VariableAlloc>
  40b5ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b5f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b5f6:	48 8b 10             	mov    (%rax),%rdx
  40b5f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b5fd:	48 89 10             	mov    %rdx,(%rax)
  40b600:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40b603:	89 c2                	mov    %eax,%edx
  40b605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b609:	88 50 16             	mov    %dl,0x16(%rax)
  40b60c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b610:	8b 55 d8             	mov    -0x28(%rbp),%edx
  40b613:	89 50 10             	mov    %edx,0x10(%rax)
  40b616:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40b619:	89 c2                	mov    %eax,%edx
  40b61b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b61f:	66 89 50 14          	mov    %dx,0x14(%rax)
  40b623:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b627:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40b62b:	48 89 10             	mov    %rdx,(%rax)
  40b62e:	bf d8 88 41 00       	mov    $0x4188d8,%edi
  40b633:	b8 00 00 00 00       	mov    $0x0,%eax
  40b638:	e8 d6 da ff ff       	callq  409113 <debugf>
  40b63d:	90                   	nop
  40b63e:	c9                   	leaveq 
  40b63f:	c3                   	retq   

000000000040b640 <ExpressionGetStructElement>:
  40b640:	55                   	push   %rbp
  40b641:	48 89 e5             	mov    %rsp,%rbp
  40b644:	48 83 ec 60          	sub    $0x60,%rsp
  40b648:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  40b64c:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
  40b650:	89 55 ac             	mov    %edx,-0x54(%rbp)
  40b653:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40b657:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b65b:	ba 01 00 00 00       	mov    $0x1,%edx
  40b660:	48 89 ce             	mov    %rcx,%rsi
  40b663:	48 89 c7             	mov    %rax,%rdi
  40b666:	e8 1e aa ff ff       	callq  406089 <LexGetToken>
  40b66b:	83 f8 2d             	cmp    $0x2d,%eax
  40b66e:	74 28                	je     40b698 <ExpressionGetStructElement+0x58>
  40b670:	83 7d ac 29          	cmpl   $0x29,-0x54(%rbp)
  40b674:	75 07                	jne    40b67d <ExpressionGetStructElement+0x3d>
  40b676:	ba 93 83 41 00       	mov    $0x418393,%edx
  40b67b:	eb 05                	jmp    40b682 <ExpressionGetStructElement+0x42>
  40b67d:	ba 95 83 41 00       	mov    $0x418395,%edx
  40b682:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b686:	be f8 88 41 00       	mov    $0x4188f8,%esi
  40b68b:	48 89 c7             	mov    %rax,%rdi
  40b68e:	b8 00 00 00 00       	mov    $0x0,%eax
  40b693:	e8 46 50 00 00       	callq  4106de <ProgramFail>
  40b698:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b69c:	8b 40 1c             	mov    0x1c(%rax),%eax
  40b69f:	85 c0                	test   %eax,%eax
  40b6a1:	0f 85 b6 01 00 00    	jne    40b85d <ExpressionGetStructElement+0x21d>
  40b6a7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40b6ab:	48 8b 00             	mov    (%rax),%rax
  40b6ae:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b6b2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40b6b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b6ba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40b6be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b6c2:	48 8b 00             	mov    (%rax),%rax
  40b6c5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40b6c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b6cd:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b6d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b6d5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
  40b6dc:	00 
  40b6dd:	83 7d ac 2a          	cmpl   $0x2a,-0x54(%rbp)
  40b6e1:	75 2a                	jne    40b70d <ExpressionGetStructElement+0xcd>
  40b6e3:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  40b6e7:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  40b6eb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40b6ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b6f3:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b6f9:	49 89 c8             	mov    %rcx,%r8
  40b6fc:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b701:	48 89 c7             	mov    %rax,%rdi
  40b704:	e8 8b 45 00 00       	callq  40fc94 <VariableDereferencePointer>
  40b709:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40b70d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b711:	8b 00                	mov    (%rax),%eax
  40b713:	83 f8 0d             	cmp    $0xd,%eax
  40b716:	74 52                	je     40b76a <ExpressionGetStructElement+0x12a>
  40b718:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b71c:	8b 00                	mov    (%rax),%eax
  40b71e:	83 f8 0e             	cmp    $0xe,%eax
  40b721:	74 47                	je     40b76a <ExpressionGetStructElement+0x12a>
  40b723:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40b727:	48 8b 10             	mov    (%rax),%rdx
  40b72a:	83 7d ac 2a          	cmpl   $0x2a,-0x54(%rbp)
  40b72e:	75 07                	jne    40b737 <ExpressionGetStructElement+0xf7>
  40b730:	b9 25 89 41 00       	mov    $0x418925,%ecx
  40b735:	eb 05                	jmp    40b73c <ExpressionGetStructElement+0xfc>
  40b737:	b9 2d 89 41 00       	mov    $0x41892d,%ecx
  40b73c:	83 7d ac 29          	cmpl   $0x29,-0x54(%rbp)
  40b740:	75 07                	jne    40b749 <ExpressionGetStructElement+0x109>
  40b742:	be 93 83 41 00       	mov    $0x418393,%esi
  40b747:	eb 05                	jmp    40b74e <ExpressionGetStructElement+0x10e>
  40b749:	be 95 83 41 00       	mov    $0x418395,%esi
  40b74e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b752:	49 89 d0             	mov    %rdx,%r8
  40b755:	48 89 f2             	mov    %rsi,%rdx
  40b758:	be 30 89 41 00       	mov    $0x418930,%esi
  40b75d:	48 89 c7             	mov    %rax,%rdi
  40b760:	b8 00 00 00 00       	mov    $0x0,%eax
  40b765:	e8 74 4f 00 00       	callq  4106de <ProgramFail>
  40b76a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b76e:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b772:	48 8b 30             	mov    (%rax),%rsi
  40b775:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40b779:	48 8b 40 30          	mov    0x30(%rax),%rax
  40b77d:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
  40b781:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40b787:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40b78d:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b792:	48 89 c7             	mov    %rax,%rdi
  40b795:	e8 3c 81 ff ff       	callq  4038d6 <TableGet>
  40b79a:	85 c0                	test   %eax,%eax
  40b79c:	75 21                	jne    40b7bf <ExpressionGetStructElement+0x17f>
  40b79e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40b7a2:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b7a6:	48 8b 10             	mov    (%rax),%rdx
  40b7a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b7ad:	be 78 89 41 00       	mov    $0x418978,%esi
  40b7b2:	48 89 c7             	mov    %rax,%rdi
  40b7b5:	b8 00 00 00 00       	mov    $0x0,%eax
  40b7ba:	e8 1f 4f 00 00       	callq  4106de <ProgramFail>
  40b7bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b7c3:	48 89 c7             	mov    %rax,%rdi
  40b7c6:	e8 3f 1b 00 00       	callq  40d30a <TypeStackSizeValue>
  40b7cb:	83 c0 40             	add    $0x40,%eax
  40b7ce:	89 c2                	mov    %eax,%edx
  40b7d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b7d4:	48 8b 00             	mov    (%rax),%rax
  40b7d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40b7db:	48 89 ce             	mov    %rcx,%rsi
  40b7de:	48 89 c7             	mov    %rax,%rdi
  40b7e1:	e8 a8 17 00 00       	callq  40cf8e <HeapPopStack>
  40b7e6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40b7ea:	48 8b 00             	mov    (%rax),%rax
  40b7ed:	48 8b 10             	mov    (%rax),%rdx
  40b7f0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40b7f4:	48 89 10             	mov    %rdx,(%rax)
  40b7f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b7fb:	48 85 c0             	test   %rax,%rax
  40b7fe:	74 0a                	je     40b80a <ExpressionGetStructElement+0x1ca>
  40b800:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40b804:	48 8b 50 10          	mov    0x10(%rax),%rdx
  40b808:	eb 05                	jmp    40b80f <ExpressionGetStructElement+0x1cf>
  40b80a:	ba 00 00 00 00       	mov    $0x0,%edx
  40b80f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b813:	48 8b 40 08          	mov    0x8(%rax),%rax
  40b817:	8b 00                	mov    (%rax),%eax
  40b819:	48 63 c8             	movslq %eax,%rcx
  40b81c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40b820:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
  40b824:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40b828:	48 8b 30             	mov    (%rax),%rsi
  40b82b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b82f:	49 89 d0             	mov    %rdx,%r8
  40b832:	b9 01 00 00 00       	mov    $0x1,%ecx
  40b837:	48 89 fa             	mov    %rdi,%rdx
  40b83a:	48 89 c7             	mov    %rax,%rdi
  40b83d:	e8 7b 35 00 00       	callq  40edbd <VariableAllocValueFromExistingData>
  40b842:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40b846:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40b84a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
  40b84e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40b852:	48 89 ce             	mov    %rcx,%rsi
  40b855:	48 89 c7             	mov    %rax,%rdi
  40b858:	e8 0b dc ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40b85d:	90                   	nop
  40b85e:	c9                   	leaveq 
  40b85f:	c3                   	retq   

000000000040b860 <ExpressionParse>:
  40b860:	55                   	push   %rbp
  40b861:	48 89 e5             	mov    %rsp,%rbp
  40b864:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  40b86b:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  40b872:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  40b879:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40b880:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40b887:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40b88e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  40b895:	c7 45 ac 20 4e 00 00 	movl   $0x4e20,-0x54(%rbp)
  40b89c:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
  40b8a3:	00 
  40b8a4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40b8ab:	bf 9a 89 41 00       	mov    $0x41899a,%edi
  40b8b0:	b8 00 00 00 00       	mov    $0x0,%eax
  40b8b5:	e8 59 d8 ff ff       	callq  409113 <debugf>
  40b8ba:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  40b8c1:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  40b8c8:	48 89 d6             	mov    %rdx,%rsi
  40b8cb:	48 89 c7             	mov    %rax,%rdi
  40b8ce:	e8 26 c2 ff ff       	callq  407af9 <ParserCopy>
  40b8d3:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  40b8d7:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40b8de:	ba 01 00 00 00       	mov    $0x1,%edx
  40b8e3:	48 89 ce             	mov    %rcx,%rsi
  40b8e6:	48 89 c7             	mov    %rax,%rdi
  40b8e9:	e8 9b a7 ff ff       	callq  406089 <LexGetToken>
  40b8ee:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40b8f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40b8f4:	83 f8 01             	cmp    $0x1,%eax
  40b8f7:	7e 08                	jle    40b901 <ExpressionParse+0xa1>
  40b8f9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40b8fc:	83 f8 2b             	cmp    $0x2b,%eax
  40b8ff:	7e 14                	jle    40b915 <ExpressionParse+0xb5>
  40b901:	83 7d e4 2c          	cmpl   $0x2c,-0x1c(%rbp)
  40b905:	0f 85 3e 05 00 00    	jne    40be49 <ExpressionParse+0x5e9>
  40b90b:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40b90f:	0f 84 34 05 00 00    	je     40be49 <ExpressionParse+0x5e9>
  40b915:	83 7d e4 0e          	cmpl   $0xe,-0x1c(%rbp)
  40b919:	75 0a                	jne    40b925 <ExpressionParse+0xc5>
  40b91b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40b91f:	0f 8e 24 05 00 00    	jle    40be49 <ExpressionParse+0x5e9>
  40b925:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40b929:	0f 84 7f 02 00 00    	je     40bbae <ExpressionParse+0x34e>
  40b92f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40b932:	48 98                	cltq   
  40b934:	48 c1 e0 04          	shl    $0x4,%rax
  40b938:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40b93e:	0f b6 00             	movzbl (%rax),%eax
  40b941:	83 e0 0f             	and    $0xf,%eax
  40b944:	84 c0                	test   %al,%al
  40b946:	75 19                	jne    40b961 <ExpressionParse+0x101>
  40b948:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40b94f:	be ae 89 41 00       	mov    $0x4189ae,%esi
  40b954:	48 89 c7             	mov    %rax,%rdi
  40b957:	b8 00 00 00 00       	mov    $0x0,%eax
  40b95c:	e8 7d 4d 00 00       	callq  4106de <ProgramFail>
  40b961:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40b964:	48 98                	cltq   
  40b966:	48 c1 e0 04          	shl    $0x4,%rax
  40b96a:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40b970:	0f b6 00             	movzbl (%rax),%eax
  40b973:	83 e0 0f             	and    $0xf,%eax
  40b976:	0f b6 c0             	movzbl %al,%eax
  40b979:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  40b97c:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40b97f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40b982:	01 d0                	add    %edx,%eax
  40b984:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40b987:	83 7d e4 2b          	cmpl   $0x2b,-0x1c(%rbp)
  40b98b:	0f 85 7c 01 00 00    	jne    40bb0d <ExpressionParse+0x2ad>
  40b991:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  40b995:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40b99c:	ba 00 00 00 00       	mov    $0x0,%edx
  40b9a1:	48 89 ce             	mov    %rcx,%rsi
  40b9a4:	48 89 c7             	mov    %rax,%rdi
  40b9a7:	e8 dd a6 ff ff       	callq  406089 <LexGetToken>
  40b9ac:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40b9af:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40b9b3:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  40b9b6:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40b9bd:	89 ce                	mov    %ecx,%esi
  40b9bf:	48 89 c7             	mov    %rax,%rdi
  40b9c2:	e8 a5 d7 ff ff       	callq  40916c <IsTypeToken>
  40b9c7:	85 c0                	test   %eax,%eax
  40b9c9:	0f 84 35 01 00 00    	je     40bb04 <ExpressionParse+0x2a4>
  40b9cf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b9d3:	48 85 c0             	test   %rax,%rax
  40b9d6:	74 10                	je     40b9e8 <ExpressionParse+0x188>
  40b9d8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40b9dc:	8b 40 10             	mov    0x10(%rax),%eax
  40b9df:	83 f8 25             	cmp    $0x25,%eax
  40b9e2:	0f 84 1c 01 00 00    	je     40bb04 <ExpressionParse+0x2a4>
  40b9e8:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  40b9ec:	48 8d 75 98          	lea    -0x68(%rbp),%rsi
  40b9f0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40b9f7:	b9 00 00 00 00       	mov    $0x0,%ecx
  40b9fc:	48 89 c7             	mov    %rax,%rdi
  40b9ff:	e8 22 2e 00 00       	callq  40e826 <TypeParse>
  40ba04:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  40ba08:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ba0f:	ba 01 00 00 00       	mov    $0x1,%edx
  40ba14:	48 89 ce             	mov    %rcx,%rsi
  40ba17:	48 89 c7             	mov    %rax,%rdi
  40ba1a:	e8 6a a6 ff ff       	callq  406089 <LexGetToken>
  40ba1f:	83 f8 2c             	cmp    $0x2c,%eax
  40ba22:	74 19                	je     40ba3d <ExpressionParse+0x1dd>
  40ba24:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ba2b:	be c9 89 41 00       	mov    $0x4189c9,%esi
  40ba30:	48 89 c7             	mov    %rax,%rdi
  40ba33:	b8 00 00 00 00       	mov    $0x0,%eax
  40ba38:	e8 a1 4c 00 00       	callq  4106de <ProgramFail>
  40ba3d:	0f b6 05 bc 3f 21 00 	movzbl 0x213fbc(%rip),%eax        # 61fa00 <OperatorPrecedence+0x260>
  40ba44:	83 e0 0f             	and    $0xf,%eax
  40ba47:	0f b6 d0             	movzbl %al,%edx
  40ba4a:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40ba4d:	01 d0                	add    %edx,%eax
  40ba4f:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40ba52:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40ba55:	8d 78 01             	lea    0x1(%rax),%edi
  40ba58:	48 8d 55 ac          	lea    -0x54(%rbp),%rdx
  40ba5c:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40ba60:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ba67:	48 89 d1             	mov    %rdx,%rcx
  40ba6a:	89 fa                	mov    %edi,%edx
  40ba6c:	48 89 c7             	mov    %rax,%rdi
  40ba6f:	e8 a7 f7 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40ba74:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ba7b:	48 8b 00             	mov    (%rax),%rax
  40ba7e:	48 8d 90 08 0d 00 00 	lea    0xd08(%rax),%rdx
  40ba85:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ba8c:	48 8b 00             	mov    (%rax),%rax
  40ba8f:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40ba96:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40ba9c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40baa2:	b9 00 00 00 00       	mov    $0x0,%ecx
  40baa7:	48 89 c7             	mov    %rax,%rdi
  40baaa:	e8 66 31 00 00       	callq  40ec15 <VariableAllocValueFromType>
  40baaf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  40bab3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40bab7:	48 8b 40 08          	mov    0x8(%rax),%rax
  40babb:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40babf:	48 89 10             	mov    %rdx,(%rax)
  40bac2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40bac6:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40baca:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bad1:	48 89 ce             	mov    %rcx,%rsi
  40bad4:	48 89 c7             	mov    %rax,%rdi
  40bad7:	e8 8c d9 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40badc:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40badf:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bae3:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40baea:	41 89 d0             	mov    %edx,%r8d
  40baed:	b9 26 00 00 00       	mov    $0x26,%ecx
  40baf2:	ba 02 00 00 00       	mov    $0x2,%edx
  40baf7:	48 89 c7             	mov    %rax,%rdi
  40bafa:	e8 b8 fa ff ff       	callq  40b5b7 <ExpressionStackPushOperator>
  40baff:	e9 40 03 00 00       	jmpq   40be44 <ExpressionParse+0x5e4>
  40bb04:	83 45 f4 14          	addl   $0x14,-0xc(%rbp)
  40bb08:	e9 ce 06 00 00       	jmpq   40c1db <ExpressionParse+0x97b>
  40bb0d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bb14:	ba 00 00 00 00       	mov    $0x0,%edx
  40bb19:	be 00 00 00 00       	mov    $0x0,%esi
  40bb1e:	48 89 c7             	mov    %rax,%rdi
  40bb21:	e8 63 a5 ff ff       	callq  406089 <LexGetToken>
  40bb26:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40bb29:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  40bb30:	83 7d d0 01          	cmpl   $0x1,-0x30(%rbp)
  40bb34:	7e 30                	jle    40bb66 <ExpressionParse+0x306>
  40bb36:	83 7d d0 2a          	cmpl   $0x2a,-0x30(%rbp)
  40bb3a:	7f 2a                	jg     40bb66 <ExpressionParse+0x306>
  40bb3c:	8b 45 d0             	mov    -0x30(%rbp),%eax
  40bb3f:	48 98                	cltq   
  40bb41:	48 c1 e0 04          	shl    $0x4,%rax
  40bb45:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bb4b:	0f b6 00             	movzbl (%rax),%eax
  40bb4e:	83 e0 0f             	and    $0xf,%eax
  40bb51:	0f b6 c0             	movzbl %al,%eax
  40bb54:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40bb57:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40bb5a:	3b 45 cc             	cmp    -0x34(%rbp),%eax
  40bb5d:	75 07                	jne    40bb66 <ExpressionParse+0x306>
  40bb5f:	c7 45 e8 ff ff ff ff 	movl   $0xffffffff,-0x18(%rbp)
  40bb66:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
  40bb6a:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40bb6d:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bb71:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bb78:	48 89 c7             	mov    %rax,%rdi
  40bb7b:	e8 9b f6 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40bb80:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40bb83:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40bb86:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
  40bb89:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40bb8c:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bb90:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bb97:	41 89 c8             	mov    %ecx,%r8d
  40bb9a:	89 d1                	mov    %edx,%ecx
  40bb9c:	ba 01 00 00 00       	mov    $0x1,%edx
  40bba1:	48 89 c7             	mov    %rax,%rdi
  40bba4:	e8 0e fa ff ff       	callq  40b5b7 <ExpressionStackPushOperator>
  40bba9:	e9 2d 06 00 00       	jmpq   40c1db <ExpressionParse+0x97b>
  40bbae:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bbb1:	48 98                	cltq   
  40bbb3:	48 c1 e0 04          	shl    $0x4,%rax
  40bbb7:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bbbd:	0f b6 00             	movzbl (%rax),%eax
  40bbc0:	c0 e8 04             	shr    $0x4,%al
  40bbc3:	84 c0                	test   %al,%al
  40bbc5:	0f 84 be 00 00 00    	je     40bc89 <ExpressionParse+0x429>
  40bbcb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bbce:	83 f8 28             	cmp    $0x28,%eax
  40bbd1:	74 05                	je     40bbd8 <ExpressionParse+0x378>
  40bbd3:	83 f8 2c             	cmp    $0x2c,%eax
  40bbd6:	75 4e                	jne    40bc26 <ExpressionParse+0x3c6>
  40bbd8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40bbdc:	75 25                	jne    40bc03 <ExpressionParse+0x3a3>
  40bbde:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  40bbe5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bbec:	48 89 d6             	mov    %rdx,%rsi
  40bbef:	48 89 c7             	mov    %rax,%rdi
  40bbf2:	e8 02 bf ff ff       	callq  407af9 <ParserCopy>
  40bbf7:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  40bbfe:	e9 41 02 00 00       	jmpq   40be44 <ExpressionParse+0x5e4>
  40bc03:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
  40bc07:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40bc0a:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bc0e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bc15:	48 89 c7             	mov    %rax,%rdi
  40bc18:	e8 fe f5 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40bc1d:	83 6d f4 14          	subl   $0x14,-0xc(%rbp)
  40bc21:	e9 1e 02 00 00       	jmpq   40be44 <ExpressionParse+0x5e4>
  40bc26:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bc29:	48 98                	cltq   
  40bc2b:	48 c1 e0 04          	shl    $0x4,%rax
  40bc2f:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bc35:	0f b6 00             	movzbl (%rax),%eax
  40bc38:	c0 e8 04             	shr    $0x4,%al
  40bc3b:	0f b6 d0             	movzbl %al,%edx
  40bc3e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40bc41:	01 d0                	add    %edx,%eax
  40bc43:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40bc46:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
  40bc4a:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40bc4d:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bc51:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bc58:	48 89 c7             	mov    %rax,%rdi
  40bc5b:	e8 bb f5 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40bc60:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40bc63:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40bc66:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bc6a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bc71:	41 89 c8             	mov    %ecx,%r8d
  40bc74:	89 d1                	mov    %edx,%ecx
  40bc76:	ba 03 00 00 00       	mov    $0x3,%edx
  40bc7b:	48 89 c7             	mov    %rax,%rdi
  40bc7e:	e8 34 f9 ff ff       	callq  40b5b7 <ExpressionStackPushOperator>
  40bc83:	90                   	nop
  40bc84:	e9 bb 01 00 00       	jmpq   40be44 <ExpressionParse+0x5e4>
  40bc89:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bc8c:	48 98                	cltq   
  40bc8e:	48 c1 e0 04          	shl    $0x4,%rax
  40bc92:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bc98:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40bc9c:	83 e0 0f             	and    $0xf,%eax
  40bc9f:	84 c0                	test   %al,%al
  40bca1:	0f 84 7f 01 00 00    	je     40be26 <ExpressionParse+0x5c6>
  40bca7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bcaa:	48 98                	cltq   
  40bcac:	48 c1 e0 04          	shl    $0x4,%rax
  40bcb0:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bcb6:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40bcba:	83 e0 0f             	and    $0xf,%eax
  40bcbd:	0f b6 d0             	movzbl %al,%edx
  40bcc0:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40bcc3:	01 d0                	add    %edx,%eax
  40bcc5:	89 45 f0             	mov    %eax,-0x10(%rbp)
  40bcc8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bccb:	48 98                	cltq   
  40bccd:	48 c1 e0 04          	shl    $0x4,%rax
  40bcd1:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bcd7:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40bcdb:	83 e0 0f             	and    $0xf,%eax
  40bcde:	3c 02                	cmp    $0x2,%al
  40bce0:	74 36                	je     40bd18 <ExpressionParse+0x4b8>
  40bce2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bce5:	48 98                	cltq   
  40bce7:	48 c1 e0 04          	shl    $0x4,%rax
  40bceb:	48 05 a0 f7 61 00    	add    $0x61f7a0,%rax
  40bcf1:	0f b6 40 01          	movzbl 0x1(%rax),%eax
  40bcf5:	83 e0 0f             	and    $0xf,%eax
  40bcf8:	3c 0e                	cmp    $0xe,%al
  40bcfa:	74 1c                	je     40bd18 <ExpressionParse+0x4b8>
  40bcfc:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
  40bd00:	8b 55 f0             	mov    -0x10(%rbp),%edx
  40bd03:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bd07:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bd0e:	48 89 c7             	mov    %rax,%rdi
  40bd11:	e8 05 f5 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40bd16:	eb 22                	jmp    40bd3a <ExpressionParse+0x4da>
  40bd18:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40bd1b:	8d 78 01             	lea    0x1(%rax),%edi
  40bd1e:	48 8d 55 ac          	lea    -0x54(%rbp),%rdx
  40bd22:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bd26:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bd2d:	48 89 d1             	mov    %rdx,%rcx
  40bd30:	89 fa                	mov    %edi,%edx
  40bd32:	48 89 c7             	mov    %rax,%rdi
  40bd35:	e8 e1 f4 ff ff       	callq  40b21b <ExpressionStackCollapse>
  40bd3a:	83 7d e4 29          	cmpl   $0x29,-0x1c(%rbp)
  40bd3e:	74 06                	je     40bd46 <ExpressionParse+0x4e6>
  40bd40:	83 7d e4 2a          	cmpl   $0x2a,-0x1c(%rbp)
  40bd44:	75 1e                	jne    40bd64 <ExpressionParse+0x504>
  40bd46:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40bd49:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40bd4d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bd54:	48 89 ce             	mov    %rcx,%rsi
  40bd57:	48 89 c7             	mov    %rax,%rdi
  40bd5a:	e8 e1 f8 ff ff       	callq  40b640 <ExpressionGetStructElement>
  40bd5f:	e9 af 00 00 00       	jmpq   40be13 <ExpressionParse+0x5b3>
  40bd64:	83 7d e4 0f          	cmpl   $0xf,-0x1c(%rbp)
  40bd68:	74 06                	je     40bd70 <ExpressionParse+0x510>
  40bd6a:	83 7d e4 10          	cmpl   $0x10,-0x1c(%rbp)
  40bd6e:	75 5f                	jne    40bdcf <ExpressionParse+0x56f>
  40bd70:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40bd74:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bd78:	48 8b 00             	mov    (%rax),%rax
  40bd7b:	8b 00                	mov    (%rax),%eax
  40bd7d:	85 c0                	test   %eax,%eax
  40bd7f:	74 4e                	je     40bdcf <ExpressionParse+0x56f>
  40bd81:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40bd85:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bd89:	48 8b 00             	mov    (%rax),%rax
  40bd8c:	8b 00                	mov    (%rax),%eax
  40bd8e:	83 f8 08             	cmp    $0x8,%eax
  40bd91:	77 3c                	ja     40bdcf <ExpressionParse+0x56f>
  40bd93:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40bd97:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bd9b:	48 89 c7             	mov    %rax,%rdi
  40bd9e:	e8 5f d4 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40bda3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40bda7:	83 7d e4 0f          	cmpl   $0xf,-0x1c(%rbp)
  40bdab:	75 07                	jne    40bdb4 <ExpressionParse+0x554>
  40bdad:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40bdb2:	75 0d                	jne    40bdc1 <ExpressionParse+0x561>
  40bdb4:	83 7d e4 10          	cmpl   $0x10,-0x1c(%rbp)
  40bdb8:	75 15                	jne    40bdcf <ExpressionParse+0x56f>
  40bdba:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40bdbf:	75 0e                	jne    40bdcf <ExpressionParse+0x56f>
  40bdc1:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40bdc4:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  40bdc7:	7d 06                	jge    40bdcf <ExpressionParse+0x56f>
  40bdc9:	8b 45 f0             	mov    -0x10(%rbp),%eax
  40bdcc:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40bdcf:	8b 4d f0             	mov    -0x10(%rbp),%ecx
  40bdd2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40bdd5:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bdd9:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bde0:	41 89 c8             	mov    %ecx,%r8d
  40bde3:	89 d1                	mov    %edx,%ecx
  40bde5:	ba 02 00 00 00       	mov    $0x2,%edx
  40bdea:	48 89 c7             	mov    %rax,%rdi
  40bded:	e8 c5 f7 ff ff       	callq  40b5b7 <ExpressionStackPushOperator>
  40bdf2:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40bdf9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40bdfc:	83 f8 0d             	cmp    $0xd,%eax
  40bdff:	74 07                	je     40be08 <ExpressionParse+0x5a8>
  40be01:	83 f8 0e             	cmp    $0xe,%eax
  40be04:	74 08                	je     40be0e <ExpressionParse+0x5ae>
  40be06:	eb 0b                	jmp    40be13 <ExpressionParse+0x5b3>
  40be08:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  40be0c:	eb 05                	jmp    40be13 <ExpressionParse+0x5b3>
  40be0e:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  40be12:	90                   	nop
  40be13:	83 7d e4 27          	cmpl   $0x27,-0x1c(%rbp)
  40be17:	0f 85 be 03 00 00    	jne    40c1db <ExpressionParse+0x97b>
  40be1d:	83 45 f4 14          	addl   $0x14,-0xc(%rbp)
  40be21:	e9 b5 03 00 00       	jmpq   40c1db <ExpressionParse+0x97b>
  40be26:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40be2d:	be ae 89 41 00       	mov    $0x4189ae,%esi
  40be32:	48 89 c7             	mov    %rax,%rdi
  40be35:	b8 00 00 00 00       	mov    $0x0,%eax
  40be3a:	e8 9f 48 00 00       	callq  4106de <ProgramFail>
  40be3f:	e9 97 03 00 00       	jmpq   40c1db <ExpressionParse+0x97b>
  40be44:	e9 92 03 00 00       	jmpq   40c1db <ExpressionParse+0x97b>
  40be49:	83 7d e4 2d          	cmpl   $0x2d,-0x1c(%rbp)
  40be4d:	0f 85 23 02 00 00    	jne    40c076 <ExpressionParse+0x816>
  40be53:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40be57:	75 19                	jne    40be72 <ExpressionParse+0x612>
  40be59:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40be60:	be dd 89 41 00       	mov    $0x4189dd,%esi
  40be65:	48 89 c7             	mov    %rax,%rdi
  40be68:	b8 00 00 00 00       	mov    $0x0,%eax
  40be6d:	e8 6c 48 00 00       	callq  4106de <ProgramFail>
  40be72:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40be79:	ba 00 00 00 00       	mov    $0x0,%edx
  40be7e:	be 00 00 00 00       	mov    $0x0,%esi
  40be83:	48 89 c7             	mov    %rax,%rdi
  40be86:	e8 fe a1 ff ff       	callq  406089 <LexGetToken>
  40be8b:	83 f8 2b             	cmp    $0x2b,%eax
  40be8e:	75 45                	jne    40bed5 <ExpressionParse+0x675>
  40be90:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40be97:	8b 40 1c             	mov    0x1c(%rax),%eax
  40be9a:	85 c0                	test   %eax,%eax
  40be9c:	75 0f                	jne    40bead <ExpressionParse+0x64d>
  40be9e:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40bea1:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  40bea4:	7d 07                	jge    40bead <ExpressionParse+0x64d>
  40bea6:	b9 01 00 00 00       	mov    $0x1,%ecx
  40beab:	eb 05                	jmp    40beb2 <ExpressionParse+0x652>
  40bead:	b9 00 00 00 00       	mov    $0x0,%ecx
  40beb2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40beb6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40beba:	48 8b 10             	mov    (%rax),%rdx
  40bebd:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40bec1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bec8:	48 89 c7             	mov    %rax,%rdi
  40becb:	e8 d0 07 00 00       	callq  40c6a0 <ExpressionParseFunctionCall>
  40bed0:	e9 86 01 00 00       	jmpq   40c05b <ExpressionParse+0x7fb>
  40bed5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bedc:	8b 40 1c             	mov    0x1c(%rax),%eax
  40bedf:	85 c0                	test   %eax,%eax
  40bee1:	0f 85 59 01 00 00    	jne    40c040 <ExpressionParse+0x7e0>
  40bee7:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
  40beee:	00 
  40beef:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40bef3:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bef7:	48 8b 10             	mov    (%rax),%rdx
  40befa:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bf01:	48 8b 00             	mov    (%rax),%rax
  40bf04:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  40bf08:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40bf0f:	48 89 c7             	mov    %rax,%rdi
  40bf12:	e8 73 38 00 00       	callq  40f78a <VariableGet>
  40bf17:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40bf1b:	48 8b 00             	mov    (%rax),%rax
  40bf1e:	8b 00                	mov    (%rax),%eax
  40bf20:	83 f8 0a             	cmp    $0xa,%eax
  40bf23:	0f 85 c2 00 00 00    	jne    40bfeb <ExpressionParse+0x78b>
  40bf29:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40bf2d:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bf31:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40bf35:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40bf3c:	48 89 d6             	mov    %rdx,%rsi
  40bf3f:	48 89 c7             	mov    %rax,%rdi
  40bf42:	e8 b2 bb ff ff       	callq  407af9 <ParserCopy>
  40bf47:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bf4e:	8b 40 1c             	mov    0x1c(%rax),%eax
  40bf51:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  40bf57:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40bf5b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40bf5f:	8b 00                	mov    (%rax),%eax
  40bf61:	85 c0                	test   %eax,%eax
  40bf63:	74 19                	je     40bf7e <ExpressionParse+0x71e>
  40bf65:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40bf6c:	be fa 89 41 00       	mov    $0x4189fa,%esi
  40bf71:	48 89 c7             	mov    %rax,%rdi
  40bf74:	b8 00 00 00 00       	mov    $0x0,%eax
  40bf79:	e8 60 47 00 00       	callq  4106de <ProgramFail>
  40bf7e:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
  40bf82:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40bf89:	48 89 d6             	mov    %rdx,%rsi
  40bf8c:	48 89 c7             	mov    %rax,%rdi
  40bf8f:	e8 cc f8 ff ff       	callq  40b860 <ExpressionParse>
  40bf94:	85 c0                	test   %eax,%eax
  40bf96:	74 1e                	je     40bfb6 <ExpressionParse+0x756>
  40bf98:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40bf9f:	ba 00 00 00 00       	mov    $0x0,%edx
  40bfa4:	be 00 00 00 00       	mov    $0x0,%esi
  40bfa9:	48 89 c7             	mov    %rax,%rdi
  40bfac:	e8 d8 a0 ff ff       	callq  406089 <LexGetToken>
  40bfb1:	83 f8 5f             	cmp    $0x5f,%eax
  40bfb4:	74 19                	je     40bfcf <ExpressionParse+0x76f>
  40bfb6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40bfbd:	be 12 8a 41 00       	mov    $0x418a12,%esi
  40bfc2:	48 89 c7             	mov    %rax,%rdi
  40bfc5:	b8 00 00 00 00       	mov    $0x0,%eax
  40bfca:	e8 0f 47 00 00       	callq  4106de <ProgramFail>
  40bfcf:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40bfd3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40bfd7:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bfde:	48 89 ce             	mov    %rcx,%rsi
  40bfe1:	48 89 c7             	mov    %rax,%rdi
  40bfe4:	e8 7f d4 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40bfe9:	eb 70                	jmp    40c05b <ExpressionParse+0x7fb>
  40bfeb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40bfef:	48 8b 10             	mov    (%rax),%rdx
  40bff2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40bff9:	48 8b 00             	mov    (%rax),%rax
  40bffc:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  40c002:	48 39 c2             	cmp    %rax,%rdx
  40c005:	75 1b                	jne    40c022 <ExpressionParse+0x7c2>
  40c007:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c00e:	be 28 8a 41 00       	mov    $0x418a28,%esi
  40c013:	48 89 c7             	mov    %rax,%rdi
  40c016:	b8 00 00 00 00       	mov    $0x0,%eax
  40c01b:	e8 be 46 00 00       	callq  4106de <ProgramFail>
  40c020:	eb 39                	jmp    40c05b <ExpressionParse+0x7fb>
  40c022:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40c026:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40c02a:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c031:	b9 00 00 00 00       	mov    $0x0,%ecx
  40c036:	48 89 c7             	mov    %rax,%rdi
  40c039:	e8 32 d5 ff ff       	callq  409570 <ExpressionStackPushLValue>
  40c03e:	eb 1b                	jmp    40c05b <ExpressionParse+0x7fb>
  40c040:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40c044:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c04b:	ba 00 00 00 00       	mov    $0x0,%edx
  40c050:	48 89 ce             	mov    %rcx,%rsi
  40c053:	48 89 c7             	mov    %rax,%rdi
  40c056:	e8 0c d6 ff ff       	callq  409667 <ExpressionPushInt>
  40c05b:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40c05e:	39 45 f0             	cmp    %eax,-0x10(%rbp)
  40c061:	7f 07                	jg     40c06a <ExpressionParse+0x80a>
  40c063:	c7 45 ac 20 4e 00 00 	movl   $0x4e20,-0x54(%rbp)
  40c06a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c071:	e9 66 01 00 00       	jmpq   40c1dc <ExpressionParse+0x97c>
  40c076:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c079:	83 f8 2c             	cmp    $0x2c,%eax
  40c07c:	7e 4d                	jle    40c0cb <ExpressionParse+0x86b>
  40c07e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c081:	83 f8 31             	cmp    $0x31,%eax
  40c084:	7f 45                	jg     40c0cb <ExpressionParse+0x86b>
  40c086:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40c08a:	75 19                	jne    40c0a5 <ExpressionParse+0x845>
  40c08c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c093:	be 49 8a 41 00       	mov    $0x418a49,%esi
  40c098:	48 89 c7             	mov    %rax,%rdi
  40c09b:	b8 00 00 00 00       	mov    $0x0,%eax
  40c0a0:	e8 39 46 00 00       	callq  4106de <ProgramFail>
  40c0a5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c0ac:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40c0b0:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40c0b4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c0bb:	48 89 ce             	mov    %rcx,%rsi
  40c0be:	48 89 c7             	mov    %rax,%rdi
  40c0c1:	e8 5c d4 ff ff       	callq  409522 <ExpressionStackPushValue>
  40c0c6:	e9 11 01 00 00       	jmpq   40c1dc <ExpressionParse+0x97c>
  40c0cb:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40c0cf:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  40c0d2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c0d9:	89 ce                	mov    %ecx,%esi
  40c0db:	48 89 c7             	mov    %rax,%rdi
  40c0de:	e8 89 d0 ff ff       	callq  40916c <IsTypeToken>
  40c0e3:	85 c0                	test   %eax,%eax
  40c0e5:	0f 84 ce 00 00 00    	je     40c1b9 <ExpressionParse+0x959>
  40c0eb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40c0ef:	75 19                	jne    40c10a <ExpressionParse+0x8aa>
  40c0f1:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c0f8:	be 61 8a 41 00       	mov    $0x418a61,%esi
  40c0fd:	48 89 c7             	mov    %rax,%rdi
  40c100:	b8 00 00 00 00       	mov    $0x0,%eax
  40c105:	e8 d4 45 00 00       	callq  4106de <ProgramFail>
  40c10a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40c111:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  40c118:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c11f:	48 89 d6             	mov    %rdx,%rsi
  40c122:	48 89 c7             	mov    %rax,%rdi
  40c125:	e8 cf b9 ff ff       	callq  407af9 <ParserCopy>
  40c12a:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
  40c131:	48 8d b5 78 ff ff ff 	lea    -0x88(%rbp),%rsi
  40c138:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c13f:	b9 00 00 00 00       	mov    $0x0,%ecx
  40c144:	48 89 c7             	mov    %rax,%rdi
  40c147:	e8 da 26 00 00       	callq  40e826 <TypeParse>
  40c14c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c153:	48 8b 00             	mov    (%rax),%rax
  40c156:	48 8d 90 08 0d 00 00 	lea    0xd08(%rax),%rdx
  40c15d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c164:	48 8b 00             	mov    (%rax),%rax
  40c167:	48 8b b5 c8 fe ff ff 	mov    -0x138(%rbp),%rsi
  40c16e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c174:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40c17a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40c17f:	48 89 c7             	mov    %rax,%rdi
  40c182:	e8 8e 2a 00 00       	callq  40ec15 <VariableAllocValueFromType>
  40c187:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40c18b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40c18f:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c193:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  40c19a:	48 89 10             	mov    %rdx,(%rax)
  40c19d:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c1a1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
  40c1a5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c1ac:	48 89 ce             	mov    %rcx,%rsi
  40c1af:	48 89 c7             	mov    %rax,%rdi
  40c1b2:	e8 b1 d2 ff ff       	callq  409468 <ExpressionStackPushValueNode>
  40c1b7:	eb 23                	jmp    40c1dc <ExpressionParse+0x97c>
  40c1b9:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
  40c1c0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c1c7:	48 89 d6             	mov    %rdx,%rsi
  40c1ca:	48 89 c7             	mov    %rax,%rdi
  40c1cd:	e8 27 b9 ff ff       	callq  407af9 <ParserCopy>
  40c1d2:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  40c1d9:	eb 01                	jmp    40c1dc <ExpressionParse+0x97c>
  40c1db:	90                   	nop
  40c1dc:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40c1e0:	0f 84 d4 f6 ff ff    	je     40b8ba <ExpressionParse+0x5a>
  40c1e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40c1ea:	7e 19                	jle    40c205 <ExpressionParse+0x9a5>
  40c1ec:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c1f3:	be c9 89 41 00       	mov    $0x4189c9,%esi
  40c1f8:	48 89 c7             	mov    %rax,%rdi
  40c1fb:	b8 00 00 00 00       	mov    $0x0,%eax
  40c200:	e8 d9 44 00 00       	callq  4106de <ProgramFail>
  40c205:	48 8d 55 ac          	lea    -0x54(%rbp),%rdx
  40c209:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
  40c20d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c214:	48 89 d1             	mov    %rdx,%rcx
  40c217:	ba 00 00 00 00       	mov    $0x0,%edx
  40c21c:	48 89 c7             	mov    %rax,%rdi
  40c21f:	e8 f7 ef ff ff       	callq  40b21b <ExpressionStackCollapse>
  40c224:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c228:	48 85 c0             	test   %rax,%rax
  40c22b:	0f 84 a3 00 00 00    	je     40c2d4 <ExpressionParse+0xa74>
  40c231:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c238:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c23b:	85 c0                	test   %eax,%eax
  40c23d:	75 63                	jne    40c2a2 <ExpressionParse+0xa42>
  40c23f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c243:	0f b6 40 16          	movzbl 0x16(%rax),%eax
  40c247:	84 c0                	test   %al,%al
  40c249:	75 0c                	jne    40c257 <ExpressionParse+0x9f7>
  40c24b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c24f:	48 8b 00             	mov    (%rax),%rax
  40c252:	48 85 c0             	test   %rax,%rax
  40c255:	74 19                	je     40c270 <ExpressionParse+0xa10>
  40c257:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c25e:	be c6 86 41 00       	mov    $0x4186c6,%esi
  40c263:	48 89 c7             	mov    %rax,%rdi
  40c266:	b8 00 00 00 00       	mov    $0x0,%eax
  40c26b:	e8 6e 44 00 00       	callq  4106de <ProgramFail>
  40c270:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c274:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40c278:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
  40c27f:	48 89 10             	mov    %rdx,(%rax)
  40c282:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
  40c286:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c28d:	48 8b 00             	mov    (%rax),%rax
  40c290:	ba 18 00 00 00       	mov    $0x18,%edx
  40c295:	48 89 ce             	mov    %rcx,%rsi
  40c298:	48 89 c7             	mov    %rax,%rdi
  40c29b:	e8 ee 0c 00 00       	callq  40cf8e <HeapPopStack>
  40c2a0:	eb 32                	jmp    40c2d4 <ExpressionParse+0xa74>
  40c2a2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c2a6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c2aa:	48 89 c7             	mov    %rax,%rdi
  40c2ad:	e8 58 10 00 00       	callq  40d30a <TypeStackSizeValue>
  40c2b2:	83 c0 40             	add    $0x40,%eax
  40c2b5:	89 c2                	mov    %eax,%edx
  40c2b7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c2bb:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40c2bf:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40c2c6:	48 8b 00             	mov    (%rax),%rax
  40c2c9:	48 89 ce             	mov    %rcx,%rsi
  40c2cc:	48 89 c7             	mov    %rax,%rdi
  40c2cf:	e8 ba 0c 00 00       	callq  40cf8e <HeapPopStack>
  40c2d4:	bf 78 8a 41 00       	mov    $0x418a78,%edi
  40c2d9:	b8 00 00 00 00       	mov    $0x0,%eax
  40c2de:	e8 30 ce ff ff       	callq  409113 <debugf>
  40c2e3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40c2e7:	48 85 c0             	test   %rax,%rax
  40c2ea:	0f 95 c0             	setne  %al
  40c2ed:	0f b6 c0             	movzbl %al,%eax
  40c2f0:	c9                   	leaveq 
  40c2f1:	c3                   	retq   

000000000040c2f2 <ExpressionParseMacroCall>:
  40c2f2:	55                   	push   %rbp
  40c2f3:	48 89 e5             	mov    %rsp,%rbp
  40c2f6:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  40c2fd:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  40c304:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  40c30b:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  40c312:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  40c319:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40c320:	00 
  40c321:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
  40c328:	00 
  40c329:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c330:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c333:	85 c0                	test   %eax,%eax
  40c335:	0f 85 98 00 00 00    	jne    40c3d3 <ExpressionParseMacroCall+0xe1>
  40c33b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c342:	48 8b 00             	mov    (%rax),%rax
  40c345:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  40c34c:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40c353:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c35a:	48 89 ce             	mov    %rcx,%rsi
  40c35d:	48 89 c7             	mov    %rax,%rdi
  40c360:	e8 60 d1 ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40c365:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40c36c:	48 8b 00             	mov    (%rax),%rax
  40c36f:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c373:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40c377:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c37e:	48 8b 00             	mov    (%rax),%rax
  40c381:	48 89 c7             	mov    %rax,%rdi
  40c384:	e8 af 0c 00 00       	callq  40d038 <HeapPushStackFrame>
  40c389:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c390:	8b 00                	mov    (%rax),%eax
  40c392:	48 98                	cltq   
  40c394:	c1 e0 03             	shl    $0x3,%eax
  40c397:	89 c2                	mov    %eax,%edx
  40c399:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c3a0:	48 8b 00             	mov    (%rax),%rax
  40c3a3:	89 d6                	mov    %edx,%esi
  40c3a5:	48 89 c7             	mov    %rax,%rdi
  40c3a8:	e8 2a 0b 00 00       	callq  40ced7 <HeapAllocStack>
  40c3ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40c3b1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40c3b6:	75 39                	jne    40c3f1 <ExpressionParseMacroCall+0xff>
  40c3b8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c3bf:	be 91 8a 41 00       	mov    $0x418a91,%esi
  40c3c4:	48 89 c7             	mov    %rax,%rdi
  40c3c7:	b8 00 00 00 00       	mov    $0x0,%eax
  40c3cc:	e8 0d 43 00 00       	callq  4106de <ProgramFail>
  40c3d1:	eb 1e                	jmp    40c3f1 <ExpressionParseMacroCall+0xff>
  40c3d3:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40c3da:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c3e1:	ba 00 00 00 00       	mov    $0x0,%edx
  40c3e6:	48 89 ce             	mov    %rcx,%rsi
  40c3e9:	48 89 c7             	mov    %rax,%rdi
  40c3ec:	e8 76 d2 ff ff       	callq  409667 <ExpressionPushInt>
  40c3f1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40c3f8:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  40c3fc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c403:	48 89 d6             	mov    %rdx,%rsi
  40c406:	48 89 c7             	mov    %rax,%rdi
  40c409:	e8 52 f4 ff ff       	callq  40b860 <ExpressionParse>
  40c40e:	85 c0                	test   %eax,%eax
  40c410:	0f 84 a0 00 00 00    	je     40c4b6 <ExpressionParseMacroCall+0x1c4>
  40c416:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c41d:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c420:	85 c0                	test   %eax,%eax
  40c422:	75 4b                	jne    40c46f <ExpressionParseMacroCall+0x17d>
  40c424:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c42b:	8b 00                	mov    (%rax),%eax
  40c42d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  40c430:	7d 1d                	jge    40c44f <ExpressionParseMacroCall+0x15d>
  40c432:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40c435:	48 98                	cltq   
  40c437:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40c43e:	00 
  40c43f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c443:	48 01 c2             	add    %rax,%rdx
  40c446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40c44a:	48 89 02             	mov    %rax,(%rdx)
  40c44d:	eb 20                	jmp    40c46f <ExpressionParseMacroCall+0x17d>
  40c44f:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  40c456:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c45d:	be 9f 8a 41 00       	mov    $0x418a9f,%esi
  40c462:	48 89 c7             	mov    %rax,%rdi
  40c465:	b8 00 00 00 00       	mov    $0x0,%eax
  40c46a:	e8 6f 42 00 00       	callq  4106de <ProgramFail>
  40c46f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  40c473:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c47a:	ba 01 00 00 00       	mov    $0x1,%edx
  40c47f:	be 00 00 00 00       	mov    $0x0,%esi
  40c484:	48 89 c7             	mov    %rax,%rdi
  40c487:	e8 fd 9b ff ff       	callq  406089 <LexGetToken>
  40c48c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40c48f:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
  40c493:	74 3d                	je     40c4d2 <ExpressionParseMacroCall+0x1e0>
  40c495:	83 7d e8 2c          	cmpl   $0x2c,-0x18(%rbp)
  40c499:	74 37                	je     40c4d2 <ExpressionParseMacroCall+0x1e0>
  40c49b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c4a2:	be ba 8a 41 00       	mov    $0x418aba,%esi
  40c4a7:	48 89 c7             	mov    %rax,%rdi
  40c4aa:	b8 00 00 00 00       	mov    $0x0,%eax
  40c4af:	e8 2a 42 00 00       	callq  4106de <ProgramFail>
  40c4b4:	eb 1c                	jmp    40c4d2 <ExpressionParseMacroCall+0x1e0>
  40c4b6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c4bd:	ba 01 00 00 00       	mov    $0x1,%edx
  40c4c2:	be 00 00 00 00       	mov    $0x0,%esi
  40c4c7:	48 89 c7             	mov    %rax,%rdi
  40c4ca:	e8 ba 9b ff ff       	callq  406089 <LexGetToken>
  40c4cf:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40c4d2:	83 7d e8 2c          	cmpl   $0x2c,-0x18(%rbp)
  40c4d6:	0f 85 1c ff ff ff    	jne    40c3f8 <ExpressionParseMacroCall+0x106>
  40c4dc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c4e3:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c4e6:	85 c0                	test   %eax,%eax
  40c4e8:	0f 85 af 01 00 00    	jne    40c69d <ExpressionParseMacroCall+0x3ab>
  40c4ee:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c4f5:	8b 00                	mov    (%rax),%eax
  40c4f7:	39 45 ec             	cmp    %eax,-0x14(%rbp)
  40c4fa:	7d 20                	jge    40c51c <ExpressionParseMacroCall+0x22a>
  40c4fc:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  40c503:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c50a:	be c9 8a 41 00       	mov    $0x418ac9,%esi
  40c50f:	48 89 c7             	mov    %rax,%rdi
  40c512:	b8 00 00 00 00       	mov    $0x0,%eax
  40c517:	e8 c2 41 00 00       	callq  4106de <ProgramFail>
  40c51c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c523:	48 8b 40 18          	mov    0x18(%rax),%rax
  40c527:	48 85 c0             	test   %rax,%rax
  40c52a:	75 20                	jne    40c54c <ExpressionParseMacroCall+0x25a>
  40c52c:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
  40c533:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c53a:	be e6 8a 41 00       	mov    $0x418ae6,%esi
  40c53f:	48 89 c7             	mov    %rax,%rdi
  40c542:	b8 00 00 00 00       	mov    $0x0,%eax
  40c547:	e8 92 41 00 00       	callq  4106de <ProgramFail>
  40c54c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c553:	48 8d 50 10          	lea    0x10(%rax),%rdx
  40c557:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  40c55b:	48 89 d6             	mov    %rdx,%rsi
  40c55e:	48 89 c7             	mov    %rax,%rdi
  40c561:	e8 93 b5 ff ff       	callq  407af9 <ParserCopy>
  40c566:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c56d:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c570:	89 45 9c             	mov    %eax,-0x64(%rbp)
  40c573:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  40c57a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c581:	ba 00 00 00 00       	mov    $0x0,%edx
  40c586:	48 89 ce             	mov    %rcx,%rsi
  40c589:	48 89 c7             	mov    %rax,%rdi
  40c58c:	e8 e7 34 00 00       	callq  40fa78 <VariableStackFrameAdd>
  40c591:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c598:	48 8b 00             	mov    (%rax),%rax
  40c59b:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40c5a2:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40c5a5:	89 50 60             	mov    %edx,0x60(%rax)
  40c5a8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c5af:	48 8b 00             	mov    (%rax),%rax
  40c5b2:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40c5b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40c5bd:	48 89 50 50          	mov    %rdx,0x50(%rax)
  40c5c1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  40c5c8:	eb 5b                	jmp    40c625 <ExpressionParseMacroCall+0x333>
  40c5ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40c5cd:	48 98                	cltq   
  40c5cf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40c5d6:	00 
  40c5d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40c5db:	48 01 d0             	add    %rdx,%rax
  40c5de:	48 8b 08             	mov    (%rax),%rcx
  40c5e1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c5e8:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c5ec:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40c5ef:	48 63 d2             	movslq %edx,%rdx
  40c5f2:	48 c1 e2 03          	shl    $0x3,%rdx
  40c5f6:	48 01 d0             	add    %rdx,%rax
  40c5f9:	48 8b 10             	mov    (%rax),%rdx
  40c5fc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c603:	48 8b 00             	mov    (%rax),%rax
  40c606:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  40c60d:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40c613:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40c619:	48 89 c7             	mov    %rax,%rdi
  40c61c:	e8 b8 2b 00 00       	callq  40f1d9 <VariableDefine>
  40c621:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  40c625:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c62c:	8b 00                	mov    (%rax),%eax
  40c62e:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  40c631:	7c 97                	jl     40c5ca <ExpressionParseMacroCall+0x2d8>
  40c633:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
  40c637:	48 8d 45 80          	lea    -0x80(%rbp),%rax
  40c63b:	48 89 d6             	mov    %rdx,%rsi
  40c63e:	48 89 c7             	mov    %rax,%rdi
  40c641:	e8 1a f2 ff ff       	callq  40b860 <ExpressionParse>
  40c646:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40c64a:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  40c651:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40c655:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c65c:	48 83 ec 08          	sub    $0x8,%rsp
  40c660:	6a 00                	pushq  $0x0
  40c662:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c668:	49 89 c8             	mov    %rcx,%r8
  40c66b:	b9 01 00 00 00       	mov    $0x1,%ecx
  40c670:	48 89 c7             	mov    %rax,%rdi
  40c673:	e8 bd d2 ff ff       	callq  409935 <ExpressionAssign>
  40c678:	48 83 c4 10          	add    $0x10,%rsp
  40c67c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c683:	48 89 c7             	mov    %rax,%rdi
  40c686:	e8 de 34 00 00       	callq  40fb69 <VariableStackFramePop>
  40c68b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40c692:	48 8b 00             	mov    (%rax),%rax
  40c695:	48 89 c7             	mov    %rax,%rdi
  40c698:	e8 ef 09 00 00       	callq  40d08c <HeapPopStackFrame>
  40c69d:	90                   	nop
  40c69e:	c9                   	leaveq 
  40c69f:	c3                   	retq   

000000000040c6a0 <ExpressionParseFunctionCall>:
  40c6a0:	55                   	push   %rbp
  40c6a1:	48 89 e5             	mov    %rsp,%rbp
  40c6a4:	53                   	push   %rbx
  40c6a5:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
  40c6ac:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  40c6b3:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  40c6ba:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
  40c6c1:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
  40c6c7:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  40c6ce:	00 
  40c6cf:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
  40c6d6:	00 
  40c6d7:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
  40c6de:	00 
  40c6df:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c6e6:	ba 01 00 00 00       	mov    $0x1,%edx
  40c6eb:	be 00 00 00 00       	mov    $0x0,%esi
  40c6f0:	48 89 c7             	mov    %rax,%rdi
  40c6f3:	e8 91 99 ff ff       	callq  406089 <LexGetToken>
  40c6f8:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40c6fb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c702:	8b 40 1c             	mov    0x1c(%rax),%eax
  40c705:	89 45 d0             	mov    %eax,-0x30(%rbp)
  40c708:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  40c70f:	0f 84 21 01 00 00    	je     40c836 <ExpressionParseFunctionCall+0x196>
  40c715:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c71c:	48 8b 00             	mov    (%rax),%rax
  40c71f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40c723:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40c72a:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  40c731:	48 89 c7             	mov    %rax,%rdi
  40c734:	e8 51 30 00 00       	callq  40f78a <VariableGet>
  40c739:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c73d:	48 8b 00             	mov    (%rax),%rax
  40c740:	8b 00                	mov    (%rax),%eax
  40c742:	83 f8 0a             	cmp    $0xa,%eax
  40c745:	75 2d                	jne    40c774 <ExpressionParseFunctionCall+0xd4>
  40c747:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c74b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c74f:	48 89 c1             	mov    %rax,%rcx
  40c752:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40c759:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  40c760:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c767:	48 89 c7             	mov    %rax,%rdi
  40c76a:	e8 83 fb ff ff       	callq  40c2f2 <ExpressionParseMacroCall>
  40c76f:	e9 57 05 00 00       	jmpq   40cccb <ExpressionParseFunctionCall+0x62b>
  40c774:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c778:	48 8b 00             	mov    (%rax),%rax
  40c77b:	8b 00                	mov    (%rax),%eax
  40c77d:	83 f8 09             	cmp    $0x9,%eax
  40c780:	74 20                	je     40c7a2 <ExpressionParseFunctionCall+0x102>
  40c782:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c786:	48 8b 10             	mov    (%rax),%rdx
  40c789:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c790:	be f8 8a 41 00       	mov    $0x418af8,%esi
  40c795:	48 89 c7             	mov    %rax,%rdi
  40c798:	b8 00 00 00 00       	mov    $0x0,%eax
  40c79d:	e8 3c 3f 00 00       	callq  4106de <ProgramFail>
  40c7a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c7a6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c7aa:	48 8b 10             	mov    (%rax),%rdx
  40c7ad:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40c7b4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c7bb:	48 89 ce             	mov    %rcx,%rsi
  40c7be:	48 89 c7             	mov    %rax,%rdi
  40c7c1:	e8 ff cc ff ff       	callq  4094c5 <ExpressionStackPushValueByType>
  40c7c6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40c7cd:	48 8b 00             	mov    (%rax),%rax
  40c7d0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c7d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40c7d8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c7df:	48 8b 00             	mov    (%rax),%rax
  40c7e2:	48 89 c7             	mov    %rax,%rdi
  40c7e5:	e8 4e 08 00 00       	callq  40d038 <HeapPushStackFrame>
  40c7ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c7ee:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c7f2:	8b 40 08             	mov    0x8(%rax),%eax
  40c7f5:	48 98                	cltq   
  40c7f7:	c1 e0 03             	shl    $0x3,%eax
  40c7fa:	89 c2                	mov    %eax,%edx
  40c7fc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c803:	48 8b 00             	mov    (%rax),%rax
  40c806:	89 d6                	mov    %edx,%esi
  40c808:	48 89 c7             	mov    %rax,%rdi
  40c80b:	e8 c7 06 00 00       	callq  40ced7 <HeapAllocStack>
  40c810:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40c814:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40c819:	75 47                	jne    40c862 <ExpressionParseFunctionCall+0x1c2>
  40c81b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c822:	be 91 8a 41 00       	mov    $0x418a91,%esi
  40c827:	48 89 c7             	mov    %rax,%rdi
  40c82a:	b8 00 00 00 00       	mov    $0x0,%eax
  40c82f:	e8 aa 3e 00 00       	callq  4106de <ProgramFail>
  40c834:	eb 2c                	jmp    40c862 <ExpressionParseFunctionCall+0x1c2>
  40c836:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
  40c83d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c844:	ba 00 00 00 00       	mov    $0x0,%edx
  40c849:	48 89 ce             	mov    %rcx,%rsi
  40c84c:	48 89 c7             	mov    %rax,%rdi
  40c84f:	e8 13 ce ff ff       	callq  409667 <ExpressionPushInt>
  40c854:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c85b:	c7 40 1c 01 00 00 00 	movl   $0x1,0x1c(%rax)
  40c862:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  40c869:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  40c870:	74 6f                	je     40c8e1 <ExpressionParseFunctionCall+0x241>
  40c872:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c876:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c87a:	8b 40 08             	mov    0x8(%rax),%eax
  40c87d:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  40c880:	7d 5f                	jge    40c8e1 <ExpressionParseFunctionCall+0x241>
  40c882:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c886:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c88a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40c88e:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40c891:	48 63 d2             	movslq %edx,%rdx
  40c894:	48 c1 e2 03          	shl    $0x3,%rdx
  40c898:	48 01 d0             	add    %rdx,%rax
  40c89b:	48 8b 10             	mov    (%rax),%rdx
  40c89e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c8a5:	48 8b 00             	mov    (%rax),%rax
  40c8a8:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40c8ab:	48 63 c9             	movslq %ecx,%rcx
  40c8ae:	48 8d 34 cd 00 00 00 	lea    0x0(,%rcx,8),%rsi
  40c8b5:	00 
  40c8b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40c8ba:	48 8d 1c 0e          	lea    (%rsi,%rcx,1),%rbx
  40c8be:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  40c8c5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40c8cb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40c8d1:	b9 00 00 00 00       	mov    $0x0,%ecx
  40c8d6:	48 89 c7             	mov    %rax,%rdi
  40c8d9:	e8 37 23 00 00       	callq  40ec15 <VariableAllocValueFromType>
  40c8de:	48 89 03             	mov    %rax,(%rbx)
  40c8e1:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
  40c8e5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c8ec:	48 89 d6             	mov    %rdx,%rsi
  40c8ef:	48 89 c7             	mov    %rax,%rdi
  40c8f2:	e8 69 ef ff ff       	callq  40b860 <ExpressionParse>
  40c8f7:	85 c0                	test   %eax,%eax
  40c8f9:	0f 84 f7 00 00 00    	je     40c9f6 <ExpressionParseFunctionCall+0x356>
  40c8ff:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  40c906:	0f 84 a3 00 00 00    	je     40c9af <ExpressionParseFunctionCall+0x30f>
  40c90c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c910:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c914:	8b 40 08             	mov    0x8(%rax),%eax
  40c917:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  40c91a:	7d 64                	jge    40c980 <ExpressionParseFunctionCall+0x2e0>
  40c91c:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40c91f:	8d 78 01             	lea    0x1(%rax),%edi
  40c922:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c926:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40c929:	48 98                	cltq   
  40c92b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  40c932:	00 
  40c933:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40c937:	48 01 c8             	add    %rcx,%rax
  40c93a:	48 8b 30             	mov    (%rax),%rsi
  40c93d:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx
  40c944:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c94b:	48 83 ec 08          	sub    $0x8,%rsp
  40c94f:	6a 00                	pushq  $0x0
  40c951:	41 89 f9             	mov    %edi,%r9d
  40c954:	49 89 c8             	mov    %rcx,%r8
  40c957:	b9 01 00 00 00       	mov    $0x1,%ecx
  40c95c:	48 89 c7             	mov    %rax,%rdi
  40c95f:	e8 d1 cf ff ff       	callq  409935 <ExpressionAssign>
  40c964:	48 83 c4 10          	add    $0x10,%rsp
  40c968:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40c96c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c973:	48 89 d6             	mov    %rdx,%rsi
  40c976:	48 89 c7             	mov    %rax,%rdi
  40c979:	e8 1d 30 00 00       	callq  40f99b <VariableStackPop>
  40c97e:	eb 2f                	jmp    40c9af <ExpressionParseFunctionCall+0x30f>
  40c980:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40c984:	48 8b 40 08          	mov    0x8(%rax),%rax
  40c988:	8b 40 0c             	mov    0xc(%rax),%eax
  40c98b:	85 c0                	test   %eax,%eax
  40c98d:	75 20                	jne    40c9af <ExpressionParseFunctionCall+0x30f>
  40c98f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40c996:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c99d:	be 9f 8a 41 00       	mov    $0x418a9f,%esi
  40c9a2:	48 89 c7             	mov    %rax,%rdi
  40c9a5:	b8 00 00 00 00       	mov    $0x0,%eax
  40c9aa:	e8 2f 3d 00 00       	callq  4106de <ProgramFail>
  40c9af:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
  40c9b3:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c9ba:	ba 01 00 00 00       	mov    $0x1,%edx
  40c9bf:	be 00 00 00 00       	mov    $0x0,%esi
  40c9c4:	48 89 c7             	mov    %rax,%rdi
  40c9c7:	e8 bd 96 ff ff       	callq  406089 <LexGetToken>
  40c9cc:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40c9cf:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
  40c9d3:	74 3d                	je     40ca12 <ExpressionParseFunctionCall+0x372>
  40c9d5:	83 7d d8 2c          	cmpl   $0x2c,-0x28(%rbp)
  40c9d9:	74 37                	je     40ca12 <ExpressionParseFunctionCall+0x372>
  40c9db:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c9e2:	be ba 8a 41 00       	mov    $0x418aba,%esi
  40c9e7:	48 89 c7             	mov    %rax,%rdi
  40c9ea:	b8 00 00 00 00       	mov    $0x0,%eax
  40c9ef:	e8 ea 3c 00 00       	callq  4106de <ProgramFail>
  40c9f4:	eb 1c                	jmp    40ca12 <ExpressionParseFunctionCall+0x372>
  40c9f6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40c9fd:	ba 01 00 00 00       	mov    $0x1,%edx
  40ca02:	be 00 00 00 00       	mov    $0x0,%esi
  40ca07:	48 89 c7             	mov    %rax,%rdi
  40ca0a:	e8 7a 96 ff ff       	callq  406089 <LexGetToken>
  40ca0f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  40ca12:	83 7d d8 2c          	cmpl   $0x2c,-0x28(%rbp)
  40ca16:	0f 85 4d fe ff ff    	jne    40c869 <ExpressionParseFunctionCall+0x1c9>
  40ca1c:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  40ca23:	0f 84 95 02 00 00    	je     40ccbe <ExpressionParseFunctionCall+0x61e>
  40ca29:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ca2d:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ca31:	8b 40 08             	mov    0x8(%rax),%eax
  40ca34:	39 45 dc             	cmp    %eax,-0x24(%rbp)
  40ca37:	7d 20                	jge    40ca59 <ExpressionParseFunctionCall+0x3b9>
  40ca39:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ca40:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40ca47:	be c9 8a 41 00       	mov    $0x418ac9,%esi
  40ca4c:	48 89 c7             	mov    %rax,%rdi
  40ca4f:	b8 00 00 00 00       	mov    $0x0,%eax
  40ca54:	e8 85 3c 00 00       	callq  4106de <ProgramFail>
  40ca59:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ca5d:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ca61:	48 8b 40 20          	mov    0x20(%rax),%rax
  40ca65:	48 85 c0             	test   %rax,%rax
  40ca68:	0f 85 15 02 00 00    	jne    40cc83 <ExpressionParseFunctionCall+0x5e3>
  40ca6e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40ca75:	8b 40 40             	mov    0x40(%rax),%eax
  40ca78:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40ca7b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ca7f:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ca83:	48 8b 40 30          	mov    0x30(%rax),%rax
  40ca87:	48 85 c0             	test   %rax,%rax
  40ca8a:	75 20                	jne    40caac <ExpressionParseFunctionCall+0x40c>
  40ca8c:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  40ca93:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40ca9a:	be e6 8a 41 00       	mov    $0x418ae6,%esi
  40ca9f:	48 89 c7             	mov    %rax,%rdi
  40caa2:	b8 00 00 00 00       	mov    $0x0,%eax
  40caa7:	e8 32 3c 00 00       	callq  4106de <ProgramFail>
  40caac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cab0:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cab4:	48 8d 50 28          	lea    0x28(%rax),%rdx
  40cab8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  40cabf:	48 89 d6             	mov    %rdx,%rsi
  40cac2:	48 89 c7             	mov    %rax,%rdi
  40cac5:	e8 2f b0 ff ff       	callq  407af9 <ParserCopy>
  40caca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cace:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cad2:	48 8b 40 20          	mov    0x20(%rax),%rax
  40cad6:	48 85 c0             	test   %rax,%rax
  40cad9:	74 0d                	je     40cae8 <ExpressionParseFunctionCall+0x448>
  40cadb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cadf:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cae3:	8b 40 08             	mov    0x8(%rax),%eax
  40cae6:	eb 05                	jmp    40caed <ExpressionParseFunctionCall+0x44d>
  40cae8:	b8 00 00 00 00       	mov    $0x0,%eax
  40caed:	48 8b b5 58 ff ff ff 	mov    -0xa8(%rbp),%rsi
  40caf4:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
  40cafb:	89 c2                	mov    %eax,%edx
  40cafd:	48 89 cf             	mov    %rcx,%rdi
  40cb00:	e8 73 2f 00 00       	callq  40fa78 <VariableStackFrameAdd>
  40cb05:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cb0c:	48 8b 00             	mov    (%rax),%rax
  40cb0f:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40cb16:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40cb19:	89 50 60             	mov    %edx,0x60(%rax)
  40cb1c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cb23:	48 8b 00             	mov    (%rax),%rax
  40cb26:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40cb2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40cb31:	48 89 50 50          	mov    %rdx,0x50(%rax)
  40cb35:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cb3c:	c7 40 40 ff ff ff ff 	movl   $0xffffffff,0x40(%rax)
  40cb43:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  40cb4a:	eb 5c                	jmp    40cba8 <ExpressionParseFunctionCall+0x508>
  40cb4c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40cb4f:	48 98                	cltq   
  40cb51:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40cb58:	00 
  40cb59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40cb5d:	48 01 d0             	add    %rdx,%rax
  40cb60:	48 8b 08             	mov    (%rax),%rcx
  40cb63:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cb67:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cb6b:	48 8b 40 18          	mov    0x18(%rax),%rax
  40cb6f:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40cb72:	48 63 d2             	movslq %edx,%rdx
  40cb75:	48 c1 e2 03          	shl    $0x3,%rdx
  40cb79:	48 01 d0             	add    %rdx,%rax
  40cb7c:	48 8b 10             	mov    (%rax),%rdx
  40cb7f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cb86:	48 8b 00             	mov    (%rax),%rax
  40cb89:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
  40cb90:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40cb96:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40cb9c:	48 89 c7             	mov    %rax,%rdi
  40cb9f:	e8 35 26 00 00       	callq  40f1d9 <VariableDefine>
  40cba4:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  40cba8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cbac:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cbb0:	8b 40 08             	mov    0x8(%rax),%eax
  40cbb3:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  40cbb6:	7c 94                	jl     40cb4c <ExpressionParseFunctionCall+0x4ac>
  40cbb8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cbbf:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40cbc2:	89 50 40             	mov    %edx,0x40(%rax)
  40cbc5:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  40cbcc:	be 01 00 00 00       	mov    $0x1,%esi
  40cbd1:	48 89 c7             	mov    %rax,%rdi
  40cbd4:	e8 a5 b4 ff ff       	callq  40807e <ParseStatement>
  40cbd9:	83 f8 02             	cmp    $0x2,%eax
  40cbdc:	74 19                	je     40cbf7 <ExpressionParseFunctionCall+0x557>
  40cbde:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  40cbe5:	be 1a 8b 41 00       	mov    $0x418b1a,%esi
  40cbea:	48 89 c7             	mov    %rax,%rdi
  40cbed:	b8 00 00 00 00       	mov    $0x0,%eax
  40cbf2:	e8 e7 3a 00 00       	callq  4106de <ProgramFail>
  40cbf7:	83 bd 54 ff ff ff 00 	cmpl   $0x0,-0xac(%rbp)
  40cbfe:	74 72                	je     40cc72 <ExpressionParseFunctionCall+0x5d2>
  40cc00:	8b 45 8c             	mov    -0x74(%rbp),%eax
  40cc03:	85 c0                	test   %eax,%eax
  40cc05:	75 46                	jne    40cc4d <ExpressionParseFunctionCall+0x5ad>
  40cc07:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cc0b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cc0f:	48 8b 10             	mov    (%rax),%rdx
  40cc12:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cc19:	48 8b 00             	mov    (%rax),%rax
  40cc1c:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  40cc22:	48 39 c2             	cmp    %rax,%rdx
  40cc25:	74 26                	je     40cc4d <ExpressionParseFunctionCall+0x5ad>
  40cc27:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cc2b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cc2f:	48 8b 10             	mov    (%rax),%rdx
  40cc32:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  40cc39:	be 38 8b 41 00       	mov    $0x418b38,%esi
  40cc3e:	48 89 c7             	mov    %rax,%rdi
  40cc41:	b8 00 00 00 00       	mov    $0x0,%eax
  40cc46:	e8 93 3a 00 00       	callq  4106de <ProgramFail>
  40cc4b:	eb 25                	jmp    40cc72 <ExpressionParseFunctionCall+0x5d2>
  40cc4d:	8b 45 8c             	mov    -0x74(%rbp),%eax
  40cc50:	83 f8 06             	cmp    $0x6,%eax
  40cc53:	75 1d                	jne    40cc72 <ExpressionParseFunctionCall+0x5d2>
  40cc55:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40cc59:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  40cc60:	be 67 8b 41 00       	mov    $0x418b67,%esi
  40cc65:	48 89 c7             	mov    %rax,%rdi
  40cc68:	b8 00 00 00 00       	mov    $0x0,%eax
  40cc6d:	e8 6c 3a 00 00       	callq  4106de <ProgramFail>
  40cc72:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cc79:	48 89 c7             	mov    %rax,%rdi
  40cc7c:	e8 e8 2e 00 00       	callq  40fb69 <VariableStackFramePop>
  40cc81:	eb 29                	jmp    40ccac <ExpressionParseFunctionCall+0x60c>
  40cc83:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40cc87:	48 8b 40 08          	mov    0x8(%rax),%rax
  40cc8b:	4c 8b 40 20          	mov    0x20(%rax),%r8
  40cc8f:	8b 4d dc             	mov    -0x24(%rbp),%ecx
  40cc92:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40cc96:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40cc9a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40cca1:	48 89 c7             	mov    %rax,%rdi
  40cca4:	b8 00 00 00 00       	mov    $0x0,%eax
  40cca9:	41 ff d0             	callq  *%r8
  40ccac:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40ccb3:	48 8b 00             	mov    (%rax),%rax
  40ccb6:	48 89 c7             	mov    %rax,%rdi
  40ccb9:	e8 ce 03 00 00       	callq  40d08c <HeapPopStackFrame>
  40ccbe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40ccc5:	8b 55 d0             	mov    -0x30(%rbp),%edx
  40ccc8:	89 50 1c             	mov    %edx,0x1c(%rax)
  40cccb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40cccf:	c9                   	leaveq 
  40ccd0:	c3                   	retq   

000000000040ccd1 <ExpressionParseInt>:
  40ccd1:	55                   	push   %rbp
  40ccd2:	48 89 e5             	mov    %rsp,%rbp
  40ccd5:	48 83 ec 20          	sub    $0x20,%rsp
  40ccd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ccdd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40cce4:	00 
  40cce5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
  40cce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cced:	48 89 d6             	mov    %rdx,%rsi
  40ccf0:	48 89 c7             	mov    %rax,%rdi
  40ccf3:	e8 68 eb ff ff       	callq  40b860 <ExpressionParse>
  40ccf8:	85 c0                	test   %eax,%eax
  40ccfa:	75 16                	jne    40cd12 <ExpressionParseInt+0x41>
  40ccfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd00:	be 12 8a 41 00       	mov    $0x418a12,%esi
  40cd05:	48 89 c7             	mov    %rax,%rdi
  40cd08:	b8 00 00 00 00       	mov    $0x0,%eax
  40cd0d:	e8 cc 39 00 00       	callq  4106de <ProgramFail>
  40cd12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd16:	8b 40 1c             	mov    0x1c(%rax),%eax
  40cd19:	85 c0                	test   %eax,%eax
  40cd1b:	75 5b                	jne    40cd78 <ExpressionParseInt+0xa7>
  40cd1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40cd21:	48 8b 00             	mov    (%rax),%rax
  40cd24:	8b 00                	mov    (%rax),%eax
  40cd26:	85 c0                	test   %eax,%eax
  40cd28:	74 0e                	je     40cd38 <ExpressionParseInt+0x67>
  40cd2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40cd2e:	48 8b 00             	mov    (%rax),%rax
  40cd31:	8b 00                	mov    (%rax),%eax
  40cd33:	83 f8 08             	cmp    $0x8,%eax
  40cd36:	76 1d                	jbe    40cd55 <ExpressionParseInt+0x84>
  40cd38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40cd3c:	48 8b 10             	mov    (%rax),%rdx
  40cd3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd43:	be 88 8b 41 00       	mov    $0x418b88,%esi
  40cd48:	48 89 c7             	mov    %rax,%rdi
  40cd4b:	b8 00 00 00 00       	mov    $0x0,%eax
  40cd50:	e8 89 39 00 00       	callq  4106de <ProgramFail>
  40cd55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40cd59:	48 89 c7             	mov    %rax,%rdi
  40cd5c:	e8 a1 c4 ff ff       	callq  409202 <ExpressionCoerceInteger>
  40cd61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40cd65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40cd69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cd6d:	48 89 d6             	mov    %rdx,%rsi
  40cd70:	48 89 c7             	mov    %rax,%rdi
  40cd73:	e8 23 2c 00 00       	callq  40f99b <VariableStackPop>
  40cd78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cd7c:	c9                   	leaveq 
  40cd7d:	c3                   	retq   

000000000040cd7e <HeapInit>:
  40cd7e:	55                   	push   %rbp
  40cd7f:	48 89 e5             	mov    %rsp,%rbp
  40cd82:	48 83 ec 20          	sub    $0x20,%rsp
  40cd86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40cd8a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40cd8d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40cd94:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40cd97:	48 98                	cltq   
  40cd99:	48 89 c7             	mov    %rax,%rdi
  40cd9c:	e8 7f 61 ff ff       	callq  402f20 <malloc@plt>
  40cda1:	48 89 c2             	mov    %rax,%rdx
  40cda4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cda8:	48 89 90 20 0a 00 00 	mov    %rdx,0xa20(%rax)
  40cdaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cdb3:	48 c7 80 28 0a 00 00 	movq   $0x0,0xa28(%rax)
  40cdba:	00 00 00 00 
  40cdbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cdc2:	48 c7 80 30 0a 00 00 	movq   $0x0,0xa30(%rax)
  40cdc9:	00 00 00 00 
  40cdcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cdd1:	48 c7 80 38 0a 00 00 	movq   $0x0,0xa38(%rax)
  40cdd8:	00 00 00 00 
  40cddc:	eb 04                	jmp    40cde2 <HeapInit+0x64>
  40cdde:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40cde2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cde6:	48 8b 90 20 0a 00 00 	mov    0xa20(%rax),%rdx
  40cded:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40cdf0:	48 98                	cltq   
  40cdf2:	48 01 d0             	add    %rdx,%rax
  40cdf5:	83 e0 07             	and    $0x7,%eax
  40cdf8:	48 85 c0             	test   %rax,%rax
  40cdfb:	75 e1                	jne    40cdde <HeapInit+0x60>
  40cdfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce01:	48 8b 90 20 0a 00 00 	mov    0xa20(%rax),%rdx
  40ce08:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40ce0b:	48 98                	cltq   
  40ce0d:	48 01 c2             	add    %rax,%rdx
  40ce10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce14:	48 89 90 30 0a 00 00 	mov    %rdx,0xa30(%rax)
  40ce1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce1f:	48 8b 90 20 0a 00 00 	mov    0xa20(%rax),%rdx
  40ce26:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40ce29:	48 98                	cltq   
  40ce2b:	48 01 c2             	add    %rax,%rdx
  40ce2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce32:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40ce39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce3d:	48 8b 80 30 0a 00 00 	mov    0xa30(%rax),%rax
  40ce44:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40ce4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce4f:	48 8b 80 20 0a 00 00 	mov    0xa20(%rax),%rax
  40ce56:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40ce59:	48 63 ca             	movslq %edx,%rcx
  40ce5c:	8b 55 f8             	mov    -0x8(%rbp),%edx
  40ce5f:	48 63 d2             	movslq %edx,%rdx
  40ce62:	48 01 ca             	add    %rcx,%rdx
  40ce65:	48 83 ea 08          	sub    $0x8,%rdx
  40ce69:	48 01 c2             	add    %rax,%rdx
  40ce6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce70:	48 89 90 28 0a 00 00 	mov    %rdx,0xa28(%rax)
  40ce77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce7b:	48 c7 80 80 0a 00 00 	movq   $0x0,0xa80(%rax)
  40ce82:	00 00 00 00 
  40ce86:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40ce8d:	eb 1d                	jmp    40ceac <HeapInit+0x12e>
  40ce8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ce93:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40ce96:	48 63 d2             	movslq %edx,%rdx
  40ce99:	48 81 c2 48 01 00 00 	add    $0x148,%rdx
  40cea0:	48 c7 04 d0 00 00 00 	movq   $0x0,(%rax,%rdx,8)
  40cea7:	00 
  40cea8:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40ceac:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)
  40ceb0:	7e dd                	jle    40ce8f <HeapInit+0x111>
  40ceb2:	90                   	nop
  40ceb3:	c9                   	leaveq 
  40ceb4:	c3                   	retq   

000000000040ceb5 <HeapCleanup>:
  40ceb5:	55                   	push   %rbp
  40ceb6:	48 89 e5             	mov    %rsp,%rbp
  40ceb9:	48 83 ec 10          	sub    $0x10,%rsp
  40cebd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40cec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cec5:	48 8b 80 20 0a 00 00 	mov    0xa20(%rax),%rax
  40cecc:	48 89 c7             	mov    %rax,%rdi
  40cecf:	e8 7c 5a ff ff       	callq  402950 <free@plt>
  40ced4:	90                   	nop
  40ced5:	c9                   	leaveq 
  40ced6:	c3                   	retq   

000000000040ced7 <HeapAllocStack>:
  40ced7:	55                   	push   %rbp
  40ced8:	48 89 e5             	mov    %rsp,%rbp
  40cedb:	48 83 ec 20          	sub    $0x20,%rsp
  40cedf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40cee3:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  40cee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ceea:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40cef1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40cef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cef9:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40cf00:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40cf03:	48 63 d2             	movslq %edx,%rdx
  40cf06:	48 83 c2 07          	add    $0x7,%rdx
  40cf0a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
  40cf0e:	48 01 d0             	add    %rdx,%rax
  40cf11:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40cf15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cf19:	48 8b 80 28 0a 00 00 	mov    0xa28(%rax),%rax
  40cf20:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
  40cf24:	76 07                	jbe    40cf2d <HeapAllocStack+0x56>
  40cf26:	b8 00 00 00 00       	mov    $0x0,%eax
  40cf2b:	eb 2a                	jmp    40cf57 <HeapAllocStack+0x80>
  40cf2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cf31:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40cf35:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40cf3c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40cf3f:	48 63 d0             	movslq %eax,%rdx
  40cf42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf46:	be 00 00 00 00       	mov    $0x0,%esi
  40cf4b:	48 89 c7             	mov    %rax,%rdi
  40cf4e:	e8 0d 5d ff ff       	callq  402c60 <memset@plt>
  40cf53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf57:	c9                   	leaveq 
  40cf58:	c3                   	retq   

000000000040cf59 <HeapUnpopStack>:
  40cf59:	55                   	push   %rbp
  40cf5a:	48 89 e5             	mov    %rsp,%rbp
  40cf5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40cf61:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40cf64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf68:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40cf6f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40cf72:	48 63 d2             	movslq %edx,%rdx
  40cf75:	48 83 c2 07          	add    $0x7,%rdx
  40cf79:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
  40cf7d:	48 01 c2             	add    %rax,%rdx
  40cf80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40cf84:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40cf8b:	90                   	nop
  40cf8c:	5d                   	pop    %rbp
  40cf8d:	c3                   	retq   

000000000040cf8e <HeapPopStack>:
  40cf8e:	55                   	push   %rbp
  40cf8f:	48 89 e5             	mov    %rsp,%rbp
  40cf92:	48 83 ec 30          	sub    $0x30,%rsp
  40cf96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40cf9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40cf9e:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40cfa1:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40cfa4:	83 c0 07             	add    $0x7,%eax
  40cfa7:	83 e0 f8             	and    $0xfffffff8,%eax
  40cfaa:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40cfad:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40cfb0:	48 63 d0             	movslq %eax,%rdx
  40cfb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cfb7:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40cfbe:	48 89 c1             	mov    %rax,%rcx
  40cfc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cfc5:	48 8b 80 20 0a 00 00 	mov    0xa20(%rax),%rax
  40cfcc:	48 29 c1             	sub    %rax,%rcx
  40cfcf:	48 89 c8             	mov    %rcx,%rax
  40cfd2:	48 39 c2             	cmp    %rax,%rdx
  40cfd5:	7e 07                	jle    40cfde <HeapPopStack+0x50>
  40cfd7:	b8 00 00 00 00       	mov    $0x0,%eax
  40cfdc:	eb 58                	jmp    40d036 <HeapPopStack+0xa8>
  40cfde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cfe2:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40cfe9:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40cfec:	48 63 d2             	movslq %edx,%rdx
  40cfef:	48 f7 da             	neg    %rdx
  40cff2:	48 01 c2             	add    %rax,%rdx
  40cff5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40cff9:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40d000:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40d005:	74 2a                	je     40d031 <HeapPopStack+0xa3>
  40d007:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d00b:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40d012:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
  40d016:	74 19                	je     40d031 <HeapPopStack+0xa3>
  40d018:	b9 00 8c 41 00       	mov    $0x418c00,%ecx
  40d01d:	ba 66 00 00 00       	mov    $0x66,%edx
  40d022:	be c8 8b 41 00       	mov    $0x418bc8,%esi
  40d027:	bf d0 8b 41 00       	mov    $0x418bd0,%edi
  40d02c:	e8 ff 5b ff ff       	callq  402c30 <__assert_fail@plt>
  40d031:	b8 01 00 00 00       	mov    $0x1,%eax
  40d036:	c9                   	leaveq 
  40d037:	c3                   	retq   

000000000040d038 <HeapPushStackFrame>:
  40d038:	55                   	push   %rbp
  40d039:	48 89 e5             	mov    %rsp,%rbp
  40d03c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d044:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40d04b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40d04f:	48 8b 92 30 0a 00 00 	mov    0xa30(%rdx),%rdx
  40d056:	48 89 10             	mov    %rdx,(%rax)
  40d059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d05d:	48 8b 90 38 0a 00 00 	mov    0xa38(%rax),%rdx
  40d064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d068:	48 89 90 30 0a 00 00 	mov    %rdx,0xa30(%rax)
  40d06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d073:	48 8b 80 38 0a 00 00 	mov    0xa38(%rax),%rax
  40d07a:	48 8d 50 08          	lea    0x8(%rax),%rdx
  40d07e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d082:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40d089:	90                   	nop
  40d08a:	5d                   	pop    %rbp
  40d08b:	c3                   	retq   

000000000040d08c <HeapPopStackFrame>:
  40d08c:	55                   	push   %rbp
  40d08d:	48 89 e5             	mov    %rsp,%rbp
  40d090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d098:	48 8b 80 30 0a 00 00 	mov    0xa30(%rax),%rax
  40d09f:	48 8b 00             	mov    (%rax),%rax
  40d0a2:	48 85 c0             	test   %rax,%rax
  40d0a5:	74 36                	je     40d0dd <HeapPopStackFrame+0x51>
  40d0a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0ab:	48 8b 90 30 0a 00 00 	mov    0xa30(%rax),%rdx
  40d0b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0b6:	48 89 90 38 0a 00 00 	mov    %rdx,0xa38(%rax)
  40d0bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0c1:	48 8b 80 30 0a 00 00 	mov    0xa30(%rax),%rax
  40d0c8:	48 8b 10             	mov    (%rax),%rdx
  40d0cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d0cf:	48 89 90 30 0a 00 00 	mov    %rdx,0xa30(%rax)
  40d0d6:	b8 01 00 00 00       	mov    $0x1,%eax
  40d0db:	eb 05                	jmp    40d0e2 <HeapPopStackFrame+0x56>
  40d0dd:	b8 00 00 00 00       	mov    $0x0,%eax
  40d0e2:	5d                   	pop    %rbp
  40d0e3:	c3                   	retq   

000000000040d0e4 <HeapAllocMem>:
  40d0e4:	55                   	push   %rbp
  40d0e5:	48 89 e5             	mov    %rsp,%rbp
  40d0e8:	48 83 ec 10          	sub    $0x10,%rsp
  40d0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d0f0:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40d0f3:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40d0f6:	48 98                	cltq   
  40d0f8:	be 01 00 00 00       	mov    $0x1,%esi
  40d0fd:	48 89 c7             	mov    %rax,%rdi
  40d100:	e8 bb 5c ff ff       	callq  402dc0 <calloc@plt>
  40d105:	c9                   	leaveq 
  40d106:	c3                   	retq   

000000000040d107 <HeapFreeMem>:
  40d107:	55                   	push   %rbp
  40d108:	48 89 e5             	mov    %rsp,%rbp
  40d10b:	48 83 ec 10          	sub    $0x10,%rsp
  40d10f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d113:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40d117:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d11b:	48 89 c7             	mov    %rax,%rdi
  40d11e:	e8 2d 58 ff ff       	callq  402950 <free@plt>
  40d123:	90                   	nop
  40d124:	c9                   	leaveq 
  40d125:	c3                   	retq   

000000000040d126 <TypeAdd>:
  40d126:	55                   	push   %rbp
  40d127:	48 89 e5             	mov    %rsp,%rbp
  40d12a:	48 83 ec 40          	sub    $0x40,%rsp
  40d12e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d132:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40d136:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40d13a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40d13d:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40d141:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
  40d145:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40d149:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d14d:	b9 01 00 00 00       	mov    $0x1,%ecx
  40d152:	ba 40 00 00 00       	mov    $0x40,%edx
  40d157:	48 89 c7             	mov    %rax,%rdi
  40d15a:	e8 9b 19 00 00       	callq  40eafa <VariableAlloc>
  40d15f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d167:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40d16a:	89 10                	mov    %edx,(%rax)
  40d16c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d170:	8b 55 d0             	mov    -0x30(%rbp),%edx
  40d173:	89 50 04             	mov    %edx,0x4(%rax)
  40d176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d17a:	8b 55 10             	mov    0x10(%rbp),%edx
  40d17d:	89 50 08             	mov    %edx,0x8(%rax)
  40d180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d184:	8b 55 18             	mov    0x18(%rbp),%edx
  40d187:	89 50 0c             	mov    %edx,0xc(%rax)
  40d18a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d18e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40d192:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40d196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d19a:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  40d1a1:	00 
  40d1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1a6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40d1aa:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40d1ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1b2:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  40d1b9:	00 
  40d1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1be:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%rax)
  40d1c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d1c9:	48 8b 50 20          	mov    0x20(%rax),%rdx
  40d1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1d1:	48 89 50 28          	mov    %rdx,0x28(%rax)
  40d1d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d1d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40d1dd:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40d1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d1e5:	c9                   	leaveq 
  40d1e6:	c3                   	retq   

000000000040d1e7 <TypeGetMatching>:
  40d1e7:	55                   	push   %rbp
  40d1e8:	48 89 e5             	mov    %rsp,%rbp
  40d1eb:	48 83 ec 40          	sub    $0x40,%rsp
  40d1ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d1f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40d1f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40d1fb:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40d1fe:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
  40d202:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
  40d206:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d20a:	48 8b 40 20          	mov    0x20(%rax),%rax
  40d20e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40d212:	eb 0c                	jmp    40d220 <TypeGetMatching+0x39>
  40d214:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d218:	48 8b 40 28          	mov    0x28(%rax),%rax
  40d21c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40d220:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40d225:	74 25                	je     40d24c <TypeGetMatching+0x65>
  40d227:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d22b:	8b 00                	mov    (%rax),%eax
  40d22d:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  40d230:	75 e2                	jne    40d214 <TypeGetMatching+0x2d>
  40d232:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d236:	8b 40 04             	mov    0x4(%rax),%eax
  40d239:	39 45 d0             	cmp    %eax,-0x30(%rbp)
  40d23c:	75 d6                	jne    40d214 <TypeGetMatching+0x2d>
  40d23e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d242:	48 8b 40 10          	mov    0x10(%rax),%rax
  40d246:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
  40d24a:	75 c8                	jne    40d214 <TypeGetMatching+0x2d>
  40d24c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40d251:	74 29                	je     40d27c <TypeGetMatching+0x95>
  40d253:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  40d257:	74 09                	je     40d262 <TypeGetMatching+0x7b>
  40d259:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d25d:	e9 a6 00 00 00       	jmpq   40d308 <TypeGetMatching+0x121>
  40d262:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40d266:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d26a:	be 10 8c 41 00       	mov    $0x418c10,%esi
  40d26f:	48 89 c7             	mov    %rax,%rdi
  40d272:	b8 00 00 00 00       	mov    $0x0,%eax
  40d277:	e8 62 34 00 00       	callq  4106de <ProgramFail>
  40d27c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40d27f:	83 f8 0c             	cmp    $0xc,%eax
  40d282:	74 1c                	je     40d2a0 <TypeGetMatching+0xb9>
  40d284:	83 f8 0f             	cmp    $0xf,%eax
  40d287:	74 33                	je     40d2bc <TypeGetMatching+0xd5>
  40d289:	83 f8 0b             	cmp    $0xb,%eax
  40d28c:	75 40                	jne    40d2ce <TypeGetMatching+0xe7>
  40d28e:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%rbp)
  40d295:	8b 05 31 36 21 00    	mov    0x213631(%rip),%eax        # 6208cc <PointerAlignBytes>
  40d29b:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40d29e:	eb 3d                	jmp    40d2dd <TypeGetMatching+0xf6>
  40d2a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d2a4:	8b 40 08             	mov    0x8(%rax),%eax
  40d2a7:	8b 55 d0             	mov    -0x30(%rbp),%edx
  40d2aa:	0f af c2             	imul   %edx,%eax
  40d2ad:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40d2b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d2b4:	8b 40 0c             	mov    0xc(%rax),%eax
  40d2b7:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40d2ba:	eb 21                	jmp    40d2dd <TypeGetMatching+0xf6>
  40d2bc:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
  40d2c3:	8b 05 07 36 21 00    	mov    0x213607(%rip),%eax        # 6208d0 <IntAlignBytes>
  40d2c9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40d2cc:	eb 0f                	jmp    40d2dd <TypeGetMatching+0xf6>
  40d2ce:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40d2d5:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40d2dc:	90                   	nop
  40d2dd:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
  40d2e1:	44 8b 45 d0          	mov    -0x30(%rbp),%r8d
  40d2e5:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  40d2e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40d2ec:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40d2f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d2f4:	8b 7d f8             	mov    -0x8(%rbp),%edi
  40d2f7:	57                   	push   %rdi
  40d2f8:	8b 7d fc             	mov    -0x4(%rbp),%edi
  40d2fb:	57                   	push   %rdi
  40d2fc:	48 89 c7             	mov    %rax,%rdi
  40d2ff:	e8 22 fe ff ff       	callq  40d126 <TypeAdd>
  40d304:	48 83 c4 10          	add    $0x10,%rsp
  40d308:	c9                   	leaveq 
  40d309:	c3                   	retq   

000000000040d30a <TypeStackSizeValue>:
  40d30a:	55                   	push   %rbp
  40d30b:	48 89 e5             	mov    %rsp,%rbp
  40d30e:	48 83 ec 10          	sub    $0x10,%rsp
  40d312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d316:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40d31b:	74 1f                	je     40d33c <TypeStackSizeValue+0x32>
  40d31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d321:	0f b6 40 19          	movzbl 0x19(%rax),%eax
  40d325:	84 c0                	test   %al,%al
  40d327:	74 13                	je     40d33c <TypeStackSizeValue+0x32>
  40d329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d32d:	be 00 00 00 00       	mov    $0x0,%esi
  40d332:	48 89 c7             	mov    %rax,%rdi
  40d335:	e8 09 00 00 00       	callq  40d343 <TypeSizeValue>
  40d33a:	eb 05                	jmp    40d341 <TypeStackSizeValue+0x37>
  40d33c:	b8 00 00 00 00       	mov    $0x0,%eax
  40d341:	c9                   	leaveq 
  40d342:	c3                   	retq   

000000000040d343 <TypeSizeValue>:
  40d343:	55                   	push   %rbp
  40d344:	48 89 e5             	mov    %rsp,%rbp
  40d347:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d34b:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40d34e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d352:	48 8b 00             	mov    (%rax),%rax
  40d355:	8b 00                	mov    (%rax),%eax
  40d357:	85 c0                	test   %eax,%eax
  40d359:	74 1b                	je     40d376 <TypeSizeValue+0x33>
  40d35b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d35f:	48 8b 00             	mov    (%rax),%rax
  40d362:	8b 00                	mov    (%rax),%eax
  40d364:	83 f8 08             	cmp    $0x8,%eax
  40d367:	77 0d                	ja     40d376 <TypeSizeValue+0x33>
  40d369:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  40d36d:	75 07                	jne    40d376 <TypeSizeValue+0x33>
  40d36f:	b8 08 00 00 00       	mov    $0x8,%eax
  40d374:	eb 35                	jmp    40d3ab <TypeSizeValue+0x68>
  40d376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d37a:	48 8b 00             	mov    (%rax),%rax
  40d37d:	8b 00                	mov    (%rax),%eax
  40d37f:	83 f8 0c             	cmp    $0xc,%eax
  40d382:	74 0c                	je     40d390 <TypeSizeValue+0x4d>
  40d384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d388:	48 8b 00             	mov    (%rax),%rax
  40d38b:	8b 40 08             	mov    0x8(%rax),%eax
  40d38e:	eb 1b                	jmp    40d3ab <TypeSizeValue+0x68>
  40d390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d394:	48 8b 00             	mov    (%rax),%rax
  40d397:	48 8b 40 18          	mov    0x18(%rax),%rax
  40d39b:	8b 50 08             	mov    0x8(%rax),%edx
  40d39e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3a2:	48 8b 00             	mov    (%rax),%rax
  40d3a5:	8b 40 04             	mov    0x4(%rax),%eax
  40d3a8:	0f af c2             	imul   %edx,%eax
  40d3ab:	5d                   	pop    %rbp
  40d3ac:	c3                   	retq   

000000000040d3ad <TypeSize>:
  40d3ad:	55                   	push   %rbp
  40d3ae:	48 89 e5             	mov    %rsp,%rbp
  40d3b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d3b5:	89 75 f4             	mov    %esi,-0xc(%rbp)
  40d3b8:	89 55 f0             	mov    %edx,-0x10(%rbp)
  40d3bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3bf:	8b 00                	mov    (%rax),%eax
  40d3c1:	85 c0                	test   %eax,%eax
  40d3c3:	74 18                	je     40d3dd <TypeSize+0x30>
  40d3c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3c9:	8b 00                	mov    (%rax),%eax
  40d3cb:	83 f8 08             	cmp    $0x8,%eax
  40d3ce:	77 0d                	ja     40d3dd <TypeSize+0x30>
  40d3d0:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  40d3d4:	75 07                	jne    40d3dd <TypeSize+0x30>
  40d3d6:	b8 08 00 00 00       	mov    $0x8,%eax
  40d3db:	eb 23                	jmp    40d400 <TypeSize+0x53>
  40d3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3e1:	8b 00                	mov    (%rax),%eax
  40d3e3:	83 f8 0c             	cmp    $0xc,%eax
  40d3e6:	74 09                	je     40d3f1 <TypeSize+0x44>
  40d3e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3ec:	8b 40 08             	mov    0x8(%rax),%eax
  40d3ef:	eb 0f                	jmp    40d400 <TypeSize+0x53>
  40d3f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d3f5:	48 8b 40 18          	mov    0x18(%rax),%rax
  40d3f9:	8b 40 08             	mov    0x8(%rax),%eax
  40d3fc:	0f af 45 f4          	imul   -0xc(%rbp),%eax
  40d400:	5d                   	pop    %rbp
  40d401:	c3                   	retq   

000000000040d402 <TypeAddBaseType>:
  40d402:	55                   	push   %rbp
  40d403:	48 89 e5             	mov    %rsp,%rbp
  40d406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d40a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40d40e:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40d411:	89 4d e8             	mov    %ecx,-0x18(%rbp)
  40d414:	44 89 45 e4          	mov    %r8d,-0x1c(%rbp)
  40d418:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d41c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40d41f:	89 10                	mov    %edx,(%rax)
  40d421:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d425:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  40d42c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d430:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40d433:	89 50 08             	mov    %edx,0x8(%rax)
  40d436:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d43a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40d43d:	89 50 0c             	mov    %edx,0xc(%rax)
  40d440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d444:	48 8b 90 f8 13 00 00 	mov    0x13f8(%rax),%rdx
  40d44b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d44f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40d453:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d457:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  40d45e:	00 
  40d45f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d463:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  40d46a:	00 
  40d46b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d46f:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  40d476:	00 
  40d477:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d47b:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
  40d482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d486:	48 8b 90 a8 0a 00 00 	mov    0xaa8(%rax),%rdx
  40d48d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d491:	48 89 50 28          	mov    %rdx,0x28(%rax)
  40d495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d499:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40d49d:	48 89 90 a8 0a 00 00 	mov    %rdx,0xaa8(%rax)
  40d4a4:	90                   	nop
  40d4a5:	5d                   	pop    %rbp
  40d4a6:	c3                   	retq   

000000000040d4a7 <TypeInit>:
  40d4a7:	55                   	push   %rbp
  40d4a8:	48 89 e5             	mov    %rsp,%rbp
  40d4ab:	48 83 ec 40          	sub    $0x40,%rsp
  40d4af:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40d4b3:	c7 05 13 34 21 00 04 	movl   $0x4,0x213413(%rip)        # 6208d0 <IntAlignBytes>
  40d4ba:	00 00 00 
  40d4bd:	c7 05 05 34 21 00 08 	movl   $0x8,0x213405(%rip)        # 6208cc <PointerAlignBytes>
  40d4c4:	00 00 00 
  40d4c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d4cb:	48 c7 80 a8 0a 00 00 	movq   $0x0,0xaa8(%rax)
  40d4d2:	00 00 00 00 
  40d4d6:	8b 15 f4 33 21 00    	mov    0x2133f4(%rip),%edx        # 6208d0 <IntAlignBytes>
  40d4dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d4e0:	48 8d b0 c8 0a 00 00 	lea    0xac8(%rax),%rsi
  40d4e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d4eb:	41 89 d0             	mov    %edx,%r8d
  40d4ee:	b9 04 00 00 00       	mov    $0x4,%ecx
  40d4f3:	ba 01 00 00 00       	mov    $0x1,%edx
  40d4f8:	48 89 c7             	mov    %rax,%rdi
  40d4fb:	e8 02 ff ff ff       	callq  40d402 <TypeAddBaseType>
  40d500:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d504:	48 8d b0 08 0b 00 00 	lea    0xb08(%rax),%rsi
  40d50b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d50f:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  40d515:	b9 02 00 00 00       	mov    $0x2,%ecx
  40d51a:	ba 02 00 00 00       	mov    $0x2,%edx
  40d51f:	48 89 c7             	mov    %rax,%rdi
  40d522:	e8 db fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d527:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d52b:	48 8d b0 48 0b 00 00 	lea    0xb48(%rax),%rsi
  40d532:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d536:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40d53c:	b9 01 00 00 00       	mov    $0x1,%ecx
  40d541:	ba 03 00 00 00       	mov    $0x3,%edx
  40d546:	48 89 c7             	mov    %rax,%rdi
  40d549:	e8 b4 fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d54e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d552:	48 8d b0 88 0b 00 00 	lea    0xb88(%rax),%rsi
  40d559:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d55d:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  40d563:	b9 08 00 00 00       	mov    $0x8,%ecx
  40d568:	ba 04 00 00 00       	mov    $0x4,%edx
  40d56d:	48 89 c7             	mov    %rax,%rdi
  40d570:	e8 8d fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d575:	8b 15 55 33 21 00    	mov    0x213355(%rip),%edx        # 6208d0 <IntAlignBytes>
  40d57b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d57f:	48 8d b0 c8 0b 00 00 	lea    0xbc8(%rax),%rsi
  40d586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d58a:	41 89 d0             	mov    %edx,%r8d
  40d58d:	b9 04 00 00 00       	mov    $0x4,%ecx
  40d592:	ba 05 00 00 00       	mov    $0x5,%edx
  40d597:	48 89 c7             	mov    %rax,%rdi
  40d59a:	e8 63 fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d59f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5a3:	48 8d b0 08 0c 00 00 	lea    0xc08(%rax),%rsi
  40d5aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5ae:	41 b8 02 00 00 00    	mov    $0x2,%r8d
  40d5b4:	b9 02 00 00 00       	mov    $0x2,%ecx
  40d5b9:	ba 06 00 00 00       	mov    $0x6,%edx
  40d5be:	48 89 c7             	mov    %rax,%rdi
  40d5c1:	e8 3c fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d5c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5ca:	48 8d b0 48 0c 00 00 	lea    0xc48(%rax),%rsi
  40d5d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5d5:	41 b8 08 00 00 00    	mov    $0x8,%r8d
  40d5db:	b9 08 00 00 00       	mov    $0x8,%ecx
  40d5e0:	ba 08 00 00 00       	mov    $0x8,%edx
  40d5e5:	48 89 c7             	mov    %rax,%rdi
  40d5e8:	e8 15 fe ff ff       	callq  40d402 <TypeAddBaseType>
  40d5ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5f1:	48 8d b0 88 0c 00 00 	lea    0xc88(%rax),%rsi
  40d5f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d5fc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40d602:	b9 01 00 00 00       	mov    $0x1,%ecx
  40d607:	ba 07 00 00 00       	mov    $0x7,%edx
  40d60c:	48 89 c7             	mov    %rax,%rdi
  40d60f:	e8 ee fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d614:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d618:	48 8d b0 c8 0c 00 00 	lea    0xcc8(%rax),%rsi
  40d61f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d623:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40d629:	b9 00 00 00 00       	mov    $0x0,%ecx
  40d62e:	ba 00 00 00 00       	mov    $0x0,%edx
  40d633:	48 89 c7             	mov    %rax,%rdi
  40d636:	e8 c7 fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d63b:	8b 15 8f 32 21 00    	mov    0x21328f(%rip),%edx        # 6208d0 <IntAlignBytes>
  40d641:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d645:	48 8d b0 48 0d 00 00 	lea    0xd48(%rax),%rsi
  40d64c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d650:	41 89 d0             	mov    %edx,%r8d
  40d653:	b9 04 00 00 00       	mov    $0x4,%ecx
  40d658:	ba 09 00 00 00       	mov    $0x9,%edx
  40d65d:	48 89 c7             	mov    %rax,%rdi
  40d660:	e8 9d fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d665:	8b 15 65 32 21 00    	mov    0x213265(%rip),%edx        # 6208d0 <IntAlignBytes>
  40d66b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d66f:	48 8d b0 88 0d 00 00 	lea    0xd88(%rax),%rsi
  40d676:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d67a:	41 89 d0             	mov    %edx,%r8d
  40d67d:	b9 04 00 00 00       	mov    $0x4,%ecx
  40d682:	ba 0a 00 00 00       	mov    $0xa,%edx
  40d687:	48 89 c7             	mov    %rax,%rdi
  40d68a:	e8 73 fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d68f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d693:	48 8d b0 08 0e 00 00 	lea    0xe08(%rax),%rsi
  40d69a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d69e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  40d6a4:	b9 00 00 00 00       	mov    $0x0,%ecx
  40d6a9:	ba 10 00 00 00       	mov    $0x10,%edx
  40d6ae:	48 89 c7             	mov    %rax,%rdi
  40d6b1:	e8 4c fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d6b6:	8b 15 10 32 21 00    	mov    0x213210(%rip),%edx        # 6208cc <PointerAlignBytes>
  40d6bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d6c0:	48 8d b0 08 0d 00 00 	lea    0xd08(%rax),%rsi
  40d6c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d6cb:	41 89 d0             	mov    %edx,%r8d
  40d6ce:	b9 08 00 00 00       	mov    $0x8,%ecx
  40d6d3:	ba 11 00 00 00       	mov    $0x11,%edx
  40d6d8:	48 89 c7             	mov    %rax,%rdi
  40d6db:	e8 22 fd ff ff       	callq  40d402 <TypeAddBaseType>
  40d6e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d6e4:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  40d6eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d6ef:	48 8d 90 48 0b 00 00 	lea    0xb48(%rax),%rdx
  40d6f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d6fa:	6a 01                	pushq  $0x1
  40d6fc:	6a 01                	pushq  $0x1
  40d6fe:	49 89 c9             	mov    %rcx,%r9
  40d701:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d707:	b9 0c 00 00 00       	mov    $0xc,%ecx
  40d70c:	be 00 00 00 00       	mov    $0x0,%esi
  40d711:	48 89 c7             	mov    %rax,%rdi
  40d714:	e8 0d fa ff ff       	callq  40d126 <TypeAdd>
  40d719:	48 83 c4 10          	add    $0x10,%rsp
  40d71d:	48 89 c2             	mov    %rax,%rdx
  40d720:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d724:	48 89 90 58 0e 00 00 	mov    %rdx,0xe58(%rax)
  40d72b:	8b 15 9b 31 21 00    	mov    0x21319b(%rip),%edx        # 6208cc <PointerAlignBytes>
  40d731:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d735:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  40d73c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d740:	48 8d b0 48 0b 00 00 	lea    0xb48(%rax),%rsi
  40d747:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d74b:	52                   	push   %rdx
  40d74c:	6a 08                	pushq  $0x8
  40d74e:	49 89 c9             	mov    %rcx,%r9
  40d751:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d757:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40d75c:	48 89 f2             	mov    %rsi,%rdx
  40d75f:	be 00 00 00 00       	mov    $0x0,%esi
  40d764:	48 89 c7             	mov    %rax,%rdi
  40d767:	e8 ba f9 ff ff       	callq  40d126 <TypeAdd>
  40d76c:	48 83 c4 10          	add    $0x10,%rsp
  40d770:	48 89 c2             	mov    %rax,%rdx
  40d773:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d777:	48 89 90 48 0e 00 00 	mov    %rdx,0xe48(%rax)
  40d77e:	8b 0d 48 31 21 00    	mov    0x213148(%rip),%ecx        # 6208cc <PointerAlignBytes>
  40d784:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d788:	48 8b b0 f8 13 00 00 	mov    0x13f8(%rax),%rsi
  40d78f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d793:	48 8b 90 48 0e 00 00 	mov    0xe48(%rax),%rdx
  40d79a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d79e:	51                   	push   %rcx
  40d79f:	6a 08                	pushq  $0x8
  40d7a1:	49 89 f1             	mov    %rsi,%r9
  40d7a4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d7aa:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40d7af:	be 00 00 00 00       	mov    $0x0,%esi
  40d7b4:	48 89 c7             	mov    %rax,%rdi
  40d7b7:	e8 6a f9 ff ff       	callq  40d126 <TypeAdd>
  40d7bc:	48 83 c4 10          	add    $0x10,%rsp
  40d7c0:	48 89 c2             	mov    %rax,%rdx
  40d7c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d7c7:	48 89 90 50 0e 00 00 	mov    %rdx,0xe50(%rax)
  40d7ce:	8b 15 f8 30 21 00    	mov    0x2130f8(%rip),%edx        # 6208cc <PointerAlignBytes>
  40d7d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d7d8:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  40d7df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d7e3:	48 8d b0 c8 0c 00 00 	lea    0xcc8(%rax),%rsi
  40d7ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d7ee:	52                   	push   %rdx
  40d7ef:	6a 08                	pushq  $0x8
  40d7f1:	49 89 c9             	mov    %rcx,%r9
  40d7f4:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d7fa:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40d7ff:	48 89 f2             	mov    %rsi,%rdx
  40d802:	be 00 00 00 00       	mov    $0x0,%esi
  40d807:	48 89 c7             	mov    %rax,%rdi
  40d80a:	e8 17 f9 ff ff       	callq  40d126 <TypeAdd>
  40d80f:	48 83 c4 10          	add    $0x10,%rsp
  40d813:	48 89 c2             	mov    %rax,%rdx
  40d816:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40d81a:	48 89 90 60 0e 00 00 	mov    %rdx,0xe60(%rax)
  40d821:	90                   	nop
  40d822:	c9                   	leaveq 
  40d823:	c3                   	retq   

000000000040d824 <TypeCleanupNode>:
  40d824:	55                   	push   %rbp
  40d825:	48 89 e5             	mov    %rsp,%rbp
  40d828:	48 83 ec 20          	sub    $0x20,%rsp
  40d82c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40d830:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40d834:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40d838:	48 8b 40 20          	mov    0x20(%rax),%rax
  40d83c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d840:	e9 80 00 00 00       	jmpq   40d8c5 <TypeCleanupNode+0xa1>
  40d845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d849:	48 8b 40 28          	mov    0x28(%rax),%rax
  40d84d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40d851:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40d855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d859:	48 89 d6             	mov    %rdx,%rsi
  40d85c:	48 89 c7             	mov    %rax,%rdi
  40d85f:	e8 c0 ff ff ff       	callq  40d824 <TypeCleanupNode>
  40d864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d868:	8b 40 38             	mov    0x38(%rax),%eax
  40d86b:	85 c0                	test   %eax,%eax
  40d86d:	74 4e                	je     40d8bd <TypeCleanupNode+0x99>
  40d86f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d873:	48 8b 40 30          	mov    0x30(%rax),%rax
  40d877:	48 85 c0             	test   %rax,%rax
  40d87a:	74 2e                	je     40d8aa <TypeCleanupNode+0x86>
  40d87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d880:	48 8b 50 30          	mov    0x30(%rax),%rdx
  40d884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d888:	48 89 d6             	mov    %rdx,%rsi
  40d88b:	48 89 c7             	mov    %rax,%rdi
  40d88e:	e8 9c 11 00 00       	callq  40ea2f <VariableTableCleanup>
  40d893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d897:	48 8b 50 30          	mov    0x30(%rax),%rdx
  40d89b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d89f:	48 89 d6             	mov    %rdx,%rsi
  40d8a2:	48 89 c7             	mov    %rax,%rdi
  40d8a5:	e8 5d f8 ff ff       	callq  40d107 <HeapFreeMem>
  40d8aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40d8ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40d8b2:	48 89 d6             	mov    %rdx,%rsi
  40d8b5:	48 89 c7             	mov    %rax,%rdi
  40d8b8:	e8 4a f8 ff ff       	callq  40d107 <HeapFreeMem>
  40d8bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40d8c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40d8c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40d8ca:	0f 85 75 ff ff ff    	jne    40d845 <TypeCleanupNode+0x21>
  40d8d0:	90                   	nop
  40d8d1:	c9                   	leaveq 
  40d8d2:	c3                   	retq   

000000000040d8d3 <TypeCleanup>:
  40d8d3:	55                   	push   %rbp
  40d8d4:	48 89 e5             	mov    %rsp,%rbp
  40d8d7:	48 83 ec 10          	sub    $0x10,%rsp
  40d8db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40d8df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d8e3:	48 8d 90 88 0a 00 00 	lea    0xa88(%rax),%rdx
  40d8ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40d8ee:	48 89 d6             	mov    %rdx,%rsi
  40d8f1:	48 89 c7             	mov    %rax,%rdi
  40d8f4:	e8 2b ff ff ff       	callq  40d824 <TypeCleanupNode>
  40d8f9:	90                   	nop
  40d8fa:	c9                   	leaveq 
  40d8fb:	c3                   	retq   

000000000040d8fc <TypeParseStruct>:
  40d8fc:	55                   	push   %rbp
  40d8fd:	48 89 e5             	mov    %rsp,%rbp
  40d900:	53                   	push   %rbx
  40d901:	48 83 ec 68          	sub    $0x68,%rsp
  40d905:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  40d909:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40d90d:	89 55 9c             	mov    %edx,-0x64(%rbp)
  40d910:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40d914:	48 8b 00             	mov    (%rax),%rax
  40d917:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40d91b:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40d91f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40d923:	ba 00 00 00 00       	mov    $0x0,%edx
  40d928:	48 89 ce             	mov    %rcx,%rsi
  40d92b:	48 89 c7             	mov    %rax,%rdi
  40d92e:	e8 56 87 ff ff       	callq  406089 <LexGetToken>
  40d933:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40d936:	83 7d e4 2d          	cmpl   $0x2d,-0x1c(%rbp)
  40d93a:	75 42                	jne    40d97e <TypeParseStruct+0x82>
  40d93c:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  40d940:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40d944:	ba 01 00 00 00       	mov    $0x1,%edx
  40d949:	48 89 ce             	mov    %rcx,%rsi
  40d94c:	48 89 c7             	mov    %rax,%rdi
  40d94f:	e8 35 87 ff ff       	callq  406089 <LexGetToken>
  40d954:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40d958:	48 8b 40 08          	mov    0x8(%rax),%rax
  40d95c:	48 8b 00             	mov    (%rax),%rax
  40d95f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40d963:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40d967:	ba 00 00 00 00       	mov    $0x0,%edx
  40d96c:	be 00 00 00 00       	mov    $0x0,%esi
  40d971:	48 89 c7             	mov    %rax,%rdi
  40d974:	e8 10 87 ff ff       	callq  406089 <LexGetToken>
  40d979:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40d97c:	eb 15                	jmp    40d993 <TypeParseStruct+0x97>
  40d97e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d982:	be 70 fa 61 00       	mov    $0x61fa70,%esi
  40d987:	48 89 c7             	mov    %rax,%rdi
  40d98a:	e8 96 34 00 00       	callq  410e25 <PlatformMakeTempName>
  40d98f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40d993:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
  40d997:	74 07                	je     40d9a0 <TypeParseStruct+0xa4>
  40d999:	bf 0d 00 00 00       	mov    $0xd,%edi
  40d99e:	eb 05                	jmp    40d9a5 <TypeParseStruct+0xa9>
  40d9a0:	bf 0e 00 00 00       	mov    $0xe,%edi
  40d9a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40d9a9:	48 8b 00             	mov    (%rax),%rax
  40d9ac:	48 8d 90 88 0a 00 00 	lea    0xa88(%rax),%rdx
  40d9b3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40d9b7:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  40d9bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40d9bf:	48 83 ec 08          	sub    $0x8,%rsp
  40d9c3:	6a 01                	pushq  $0x1
  40d9c5:	49 89 c9             	mov    %rcx,%r9
  40d9c8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40d9ce:	89 f9                	mov    %edi,%ecx
  40d9d0:	48 89 c7             	mov    %rax,%rdi
  40d9d3:	e8 0f f8 ff ff       	callq  40d1e7 <TypeGetMatching>
  40d9d8:	48 83 c4 10          	add    $0x10,%rsp
  40d9dc:	48 89 c2             	mov    %rax,%rdx
  40d9df:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40d9e3:	48 89 10             	mov    %rdx,(%rax)
  40d9e6:	83 7d e4 34          	cmpl   $0x34,-0x1c(%rbp)
  40d9ea:	75 2d                	jne    40da19 <TypeParseStruct+0x11d>
  40d9ec:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40d9f0:	48 8b 00             	mov    (%rax),%rax
  40d9f3:	48 8b 40 30          	mov    0x30(%rax),%rax
  40d9f7:	48 85 c0             	test   %rax,%rax
  40d9fa:	74 1d                	je     40da19 <TypeParseStruct+0x11d>
  40d9fc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40da00:	48 8b 10             	mov    (%rax),%rdx
  40da03:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40da07:	be 38 8c 41 00       	mov    $0x418c38,%esi
  40da0c:	48 89 c7             	mov    %rax,%rdi
  40da0f:	b8 00 00 00 00       	mov    $0x0,%eax
  40da14:	e8 c5 2c 00 00       	callq  4106de <ProgramFail>
  40da19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40da1d:	ba 00 00 00 00       	mov    $0x0,%edx
  40da22:	be 00 00 00 00       	mov    $0x0,%esi
  40da27:	48 89 c7             	mov    %rax,%rdi
  40da2a:	e8 5a 86 ff ff       	callq  406089 <LexGetToken>
  40da2f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40da32:	83 7d e4 34          	cmpl   $0x34,-0x1c(%rbp)
  40da36:	0f 85 48 03 00 00    	jne    40dd84 <TypeParseStruct+0x488>
  40da3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40da40:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40da47:	48 85 c0             	test   %rax,%rax
  40da4a:	74 16                	je     40da62 <TypeParseStruct+0x166>
  40da4c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40da50:	be 60 8c 41 00       	mov    $0x418c60,%esi
  40da55:	48 89 c7             	mov    %rax,%rdi
  40da58:	b8 00 00 00 00       	mov    $0x0,%eax
  40da5d:	e8 7c 2c 00 00       	callq  4106de <ProgramFail>
  40da62:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40da66:	ba 01 00 00 00       	mov    $0x1,%edx
  40da6b:	be 00 00 00 00       	mov    $0x0,%esi
  40da70:	48 89 c7             	mov    %rax,%rdi
  40da73:	e8 11 86 ff ff       	callq  406089 <LexGetToken>
  40da78:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40da7c:	48 8b 18             	mov    (%rax),%rbx
  40da7f:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  40da83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40da87:	b9 01 00 00 00       	mov    $0x1,%ecx
  40da8c:	ba c8 01 00 00       	mov    $0x1c8,%edx
  40da91:	48 89 c7             	mov    %rax,%rdi
  40da94:	e8 61 10 00 00       	callq  40eafa <VariableAlloc>
  40da99:	48 89 43 30          	mov    %rax,0x30(%rbx)
  40da9d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40daa1:	48 8b 00             	mov    (%rax),%rax
  40daa4:	48 8b 50 30          	mov    0x30(%rax),%rdx
  40daa8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40daac:	48 8b 00             	mov    (%rax),%rax
  40daaf:	48 8b 40 30          	mov    0x30(%rax),%rax
  40dab3:	48 83 c2 10          	add    $0x10,%rdx
  40dab7:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40dabb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dabf:	48 8b 00             	mov    (%rax),%rax
  40dac2:	48 8b 40 30          	mov    0x30(%rax),%rax
  40dac6:	48 8d 70 10          	lea    0x10(%rax),%rsi
  40daca:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dace:	48 8b 00             	mov    (%rax),%rax
  40dad1:	48 8b 40 30          	mov    0x30(%rax),%rax
  40dad5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40dada:	ba 0b 00 00 00       	mov    $0xb,%edx
  40dadf:	48 89 c7             	mov    %rax,%rdi
  40dae2:	e8 1e 5c ff ff       	callq  403705 <TableInitTable>
  40dae7:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  40daeb:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi
  40daef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40daf3:	b9 00 00 00 00       	mov    $0x0,%ecx
  40daf8:	48 89 c7             	mov    %rax,%rdi
  40dafb:	e8 26 0d 00 00       	callq  40e826 <TypeParse>
  40db00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40db04:	48 85 c0             	test   %rax,%rax
  40db07:	74 09                	je     40db12 <TypeParseStruct+0x216>
  40db09:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
  40db0d:	48 85 c0             	test   %rax,%rax
  40db10:	75 16                	jne    40db28 <TypeParseStruct+0x22c>
  40db12:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40db16:	be 8d 8c 41 00       	mov    $0x418c8d,%esi
  40db1b:	48 89 c7             	mov    %rax,%rdi
  40db1e:	b8 00 00 00 00       	mov    $0x0,%eax
  40db23:	e8 b6 2b 00 00       	callq  4106de <ProgramFail>
  40db28:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
  40db2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40db30:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40db36:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40db3c:	b9 00 00 00 00       	mov    $0x0,%ecx
  40db41:	ba 04 00 00 00       	mov    $0x4,%edx
  40db46:	48 89 c7             	mov    %rax,%rdi
  40db49:	e8 17 10 00 00       	callq  40eb65 <VariableAllocValueAndData>
  40db4e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  40db52:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40db56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40db5a:	48 89 10             	mov    %rdx,(%rax)
  40db5d:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
  40db61:	0f 84 91 00 00 00    	je     40dbf8 <TypeParseStruct+0x2fc>
  40db67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40db6b:	48 8b 00             	mov    (%rax),%rax
  40db6e:	8b 40 0c             	mov    0xc(%rax),%eax
  40db71:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40db74:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40db78:	48 8b 00             	mov    (%rax),%rax
  40db7b:	8b 40 08             	mov    0x8(%rax),%eax
  40db7e:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40db81:	83 ea 01             	sub    $0x1,%edx
  40db84:	21 d0                	and    %edx,%eax
  40db86:	85 c0                	test   %eax,%eax
  40db88:	74 2f                	je     40dbb9 <TypeParseStruct+0x2bd>
  40db8a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40db8e:	48 8b 00             	mov    (%rax),%rax
  40db91:	8b 50 08             	mov    0x8(%rax),%edx
  40db94:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40db98:	48 8b 00             	mov    (%rax),%rax
  40db9b:	8b 40 08             	mov    0x8(%rax),%eax
  40db9e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40dba1:	83 e9 01             	sub    $0x1,%ecx
  40dba4:	21 c1                	and    %eax,%ecx
  40dba6:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40dba9:	29 c8                	sub    %ecx,%eax
  40dbab:	89 c1                	mov    %eax,%ecx
  40dbad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dbb1:	48 8b 00             	mov    (%rax),%rax
  40dbb4:	01 ca                	add    %ecx,%edx
  40dbb6:	89 50 08             	mov    %edx,0x8(%rax)
  40dbb9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dbbd:	48 8b 10             	mov    (%rax),%rdx
  40dbc0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dbc4:	48 8b 40 08          	mov    0x8(%rax),%rax
  40dbc8:	8b 52 08             	mov    0x8(%rdx),%edx
  40dbcb:	89 10                	mov    %edx,(%rax)
  40dbcd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dbd1:	be 01 00 00 00       	mov    $0x1,%esi
  40dbd6:	48 89 c7             	mov    %rax,%rdi
  40dbd9:	e8 65 f7 ff ff       	callq  40d343 <TypeSizeValue>
  40dbde:	89 c1                	mov    %eax,%ecx
  40dbe0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dbe4:	48 8b 00             	mov    (%rax),%rax
  40dbe7:	8b 50 08             	mov    0x8(%rax),%edx
  40dbea:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dbee:	48 8b 00             	mov    (%rax),%rax
  40dbf1:	01 ca                	add    %ecx,%edx
  40dbf3:	89 50 08             	mov    %edx,0x8(%rax)
  40dbf6:	eb 41                	jmp    40dc39 <TypeParseStruct+0x33d>
  40dbf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dbfc:	48 8b 40 08          	mov    0x8(%rax),%rax
  40dc00:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40dc06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dc0a:	48 8b 00             	mov    (%rax),%rax
  40dc0d:	8b 50 08             	mov    0x8(%rax),%edx
  40dc10:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dc14:	48 8b 00             	mov    (%rax),%rax
  40dc17:	8b 40 08             	mov    0x8(%rax),%eax
  40dc1a:	39 c2                	cmp    %eax,%edx
  40dc1c:	7e 1b                	jle    40dc39 <TypeParseStruct+0x33d>
  40dc1e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dc22:	48 8b 18             	mov    (%rax),%rbx
  40dc25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dc29:	be 01 00 00 00       	mov    $0x1,%esi
  40dc2e:	48 89 c7             	mov    %rax,%rdi
  40dc31:	e8 0d f7 ff ff       	callq  40d343 <TypeSizeValue>
  40dc36:	89 43 08             	mov    %eax,0x8(%rbx)
  40dc39:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dc3d:	48 8b 00             	mov    (%rax),%rax
  40dc40:	8b 50 0c             	mov    0xc(%rax),%edx
  40dc43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dc47:	48 8b 00             	mov    (%rax),%rax
  40dc4a:	8b 40 0c             	mov    0xc(%rax),%eax
  40dc4d:	39 c2                	cmp    %eax,%edx
  40dc4f:	7d 14                	jge    40dc65 <TypeParseStruct+0x369>
  40dc51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40dc55:	48 8b 10             	mov    (%rax),%rdx
  40dc58:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dc5c:	48 8b 00             	mov    (%rax),%rax
  40dc5f:	8b 52 0c             	mov    0xc(%rdx),%edx
  40dc62:	89 50 0c             	mov    %edx,0xc(%rax)
  40dc65:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dc69:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  40dc6d:	0f bf f8             	movswl %ax,%edi
  40dc70:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dc74:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  40dc78:	44 0f bf c8          	movswl %ax,%r9d
  40dc7c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dc80:	4c 8b 40 10          	mov    0x10(%rax),%r8
  40dc84:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40dc88:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dc8c:	48 8b 00             	mov    (%rax),%rax
  40dc8f:	48 8b 70 30          	mov    0x30(%rax),%rsi
  40dc93:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  40dc97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40dc9b:	48 83 ec 08          	sub    $0x8,%rsp
  40dc9f:	57                   	push   %rdi
  40dca0:	48 89 c7             	mov    %rax,%rdi
  40dca3:	e8 3a 5b ff ff       	callq  4037e2 <TableSet>
  40dca8:	48 83 c4 10          	add    $0x10,%rsp
  40dcac:	85 c0                	test   %eax,%eax
  40dcae:	75 1a                	jne    40dcca <TypeParseStruct+0x3ce>
  40dcb0:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  40dcb4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dcb8:	be a4 8c 41 00       	mov    $0x418ca4,%esi
  40dcbd:	48 89 c7             	mov    %rax,%rdi
  40dcc0:	b8 00 00 00 00       	mov    $0x0,%eax
  40dcc5:	e8 14 2a 00 00       	callq  4106de <ProgramFail>
  40dcca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dcce:	ba 01 00 00 00       	mov    $0x1,%edx
  40dcd3:	be 00 00 00 00       	mov    $0x0,%esi
  40dcd8:	48 89 c7             	mov    %rax,%rdi
  40dcdb:	e8 a9 83 ff ff       	callq  406089 <LexGetToken>
  40dce0:	83 f8 32             	cmp    $0x32,%eax
  40dce3:	74 16                	je     40dcfb <TypeParseStruct+0x3ff>
  40dce5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dce9:	be c0 8c 41 00       	mov    $0x418cc0,%esi
  40dcee:	48 89 c7             	mov    %rax,%rdi
  40dcf1:	b8 00 00 00 00       	mov    $0x0,%eax
  40dcf6:	e8 e3 29 00 00       	callq  4106de <ProgramFail>
  40dcfb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dcff:	ba 00 00 00 00       	mov    $0x0,%edx
  40dd04:	be 00 00 00 00       	mov    $0x0,%esi
  40dd09:	48 89 c7             	mov    %rax,%rdi
  40dd0c:	e8 78 83 ff ff       	callq  406089 <LexGetToken>
  40dd11:	83 f8 35             	cmp    $0x35,%eax
  40dd14:	0f 85 cd fd ff ff    	jne    40dae7 <TypeParseStruct+0x1eb>
  40dd1a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dd1e:	48 8b 00             	mov    (%rax),%rax
  40dd21:	8b 40 0c             	mov    0xc(%rax),%eax
  40dd24:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40dd27:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dd2b:	48 8b 00             	mov    (%rax),%rax
  40dd2e:	8b 40 08             	mov    0x8(%rax),%eax
  40dd31:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40dd34:	83 ea 01             	sub    $0x1,%edx
  40dd37:	21 d0                	and    %edx,%eax
  40dd39:	85 c0                	test   %eax,%eax
  40dd3b:	74 2f                	je     40dd6c <TypeParseStruct+0x470>
  40dd3d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dd41:	48 8b 00             	mov    (%rax),%rax
  40dd44:	8b 50 08             	mov    0x8(%rax),%edx
  40dd47:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dd4b:	48 8b 00             	mov    (%rax),%rax
  40dd4e:	8b 40 08             	mov    0x8(%rax),%eax
  40dd51:	8b 4d cc             	mov    -0x34(%rbp),%ecx
  40dd54:	83 e9 01             	sub    $0x1,%ecx
  40dd57:	21 c1                	and    %eax,%ecx
  40dd59:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40dd5c:	29 c8                	sub    %ecx,%eax
  40dd5e:	89 c1                	mov    %eax,%ecx
  40dd60:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40dd64:	48 8b 00             	mov    (%rax),%rax
  40dd67:	01 ca                	add    %ecx,%edx
  40dd69:	89 50 08             	mov    %edx,0x8(%rax)
  40dd6c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40dd70:	ba 01 00 00 00       	mov    $0x1,%edx
  40dd75:	be 00 00 00 00       	mov    $0x0,%esi
  40dd7a:	48 89 c7             	mov    %rax,%rdi
  40dd7d:	e8 07 83 ff ff       	callq  406089 <LexGetToken>
  40dd82:	eb 01                	jmp    40dd85 <TypeParseStruct+0x489>
  40dd84:	90                   	nop
  40dd85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40dd89:	c9                   	leaveq 
  40dd8a:	c3                   	retq   

000000000040dd8b <TypeCreateOpaqueStruct>:
  40dd8b:	55                   	push   %rbp
  40dd8c:	48 89 e5             	mov    %rsp,%rbp
  40dd8f:	48 83 ec 30          	sub    $0x30,%rsp
  40dd93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40dd97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40dd9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40dd9f:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40dda2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dda6:	48 8d 90 88 0a 00 00 	lea    0xa88(%rax),%rdx
  40ddad:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40ddb1:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40ddb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ddb9:	48 83 ec 08          	sub    $0x8,%rsp
  40ddbd:	6a 00                	pushq  $0x0
  40ddbf:	49 89 c9             	mov    %rcx,%r9
  40ddc2:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40ddc8:	b9 0d 00 00 00       	mov    $0xd,%ecx
  40ddcd:	48 89 c7             	mov    %rax,%rdi
  40ddd0:	e8 12 f4 ff ff       	callq  40d1e7 <TypeGetMatching>
  40ddd5:	48 83 c4 10          	add    $0x10,%rsp
  40ddd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40dddd:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40dde1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dde5:	b9 01 00 00 00       	mov    $0x1,%ecx
  40ddea:	ba c8 01 00 00       	mov    $0x1c8,%edx
  40ddef:	48 89 c7             	mov    %rax,%rdi
  40ddf2:	e8 03 0d 00 00       	callq  40eafa <VariableAlloc>
  40ddf7:	48 89 c2             	mov    %rax,%rdx
  40ddfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ddfe:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40de02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de06:	48 8b 50 30          	mov    0x30(%rax),%rdx
  40de0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de0e:	48 8b 40 30          	mov    0x30(%rax),%rax
  40de12:	48 83 c2 10          	add    $0x10,%rdx
  40de16:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40de1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de1e:	48 8b 40 30          	mov    0x30(%rax),%rax
  40de22:	48 8d 70 10          	lea    0x10(%rax),%rsi
  40de26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de2a:	48 8b 40 30          	mov    0x30(%rax),%rax
  40de2e:	b9 01 00 00 00       	mov    $0x1,%ecx
  40de33:	ba 0b 00 00 00       	mov    $0xb,%edx
  40de38:	48 89 c7             	mov    %rax,%rdi
  40de3b:	e8 c5 58 ff ff       	callq  403705 <TableInitTable>
  40de40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de44:	8b 55 d4             	mov    -0x2c(%rbp),%edx
  40de47:	89 50 08             	mov    %edx,0x8(%rax)
  40de4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40de4e:	c9                   	leaveq 
  40de4f:	c3                   	retq   

000000000040de50 <TypeParseEnum>:
  40de50:	55                   	push   %rbp
  40de51:	48 89 e5             	mov    %rsp,%rbp
  40de54:	48 83 ec 70          	sub    $0x70,%rsp
  40de58:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  40de5c:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  40de60:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  40de67:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40de6b:	48 8b 00             	mov    (%rax),%rax
  40de6e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40de72:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40de76:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40de7a:	ba 00 00 00 00       	mov    $0x0,%edx
  40de7f:	48 89 ce             	mov    %rcx,%rsi
  40de82:	48 89 c7             	mov    %rax,%rdi
  40de85:	e8 ff 81 ff ff       	callq  406089 <LexGetToken>
  40de8a:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40de8d:	83 7d fc 2d          	cmpl   $0x2d,-0x4(%rbp)
  40de91:	75 42                	jne    40ded5 <TypeParseEnum+0x85>
  40de93:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40de97:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40de9b:	ba 01 00 00 00       	mov    $0x1,%edx
  40dea0:	48 89 ce             	mov    %rcx,%rsi
  40dea3:	48 89 c7             	mov    %rax,%rdi
  40dea6:	e8 de 81 ff ff       	callq  406089 <LexGetToken>
  40deab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40deaf:	48 8b 40 08          	mov    0x8(%rax),%rax
  40deb3:	48 8b 00             	mov    (%rax),%rax
  40deb6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40deba:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40debe:	ba 00 00 00 00       	mov    $0x0,%edx
  40dec3:	be 00 00 00 00       	mov    $0x0,%esi
  40dec8:	48 89 c7             	mov    %rax,%rdi
  40decb:	e8 b9 81 ff ff       	callq  406089 <LexGetToken>
  40ded0:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40ded3:	eb 15                	jmp    40deea <TypeParseEnum+0x9a>
  40ded5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ded9:	be 77 fa 61 00       	mov    $0x61fa77,%esi
  40dede:	48 89 c7             	mov    %rax,%rdi
  40dee1:	e8 3f 2f 00 00       	callq  410e25 <PlatformMakeTempName>
  40dee6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40deea:	83 7d fc 34          	cmpl   $0x34,-0x4(%rbp)
  40deee:	0f 95 c0             	setne  %al
  40def1:	0f b6 d0             	movzbl %al,%edx
  40def4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40def8:	48 8d b8 88 0a 00 00 	lea    0xa88(%rax),%rdi
  40deff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  40df03:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  40df07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40df0b:	48 83 ec 08          	sub    $0x8,%rsp
  40df0f:	52                   	push   %rdx
  40df10:	49 89 c9             	mov    %rcx,%r9
  40df13:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40df19:	b9 0f 00 00 00       	mov    $0xf,%ecx
  40df1e:	48 89 fa             	mov    %rdi,%rdx
  40df21:	48 89 c7             	mov    %rax,%rdi
  40df24:	e8 be f2 ff ff       	callq  40d1e7 <TypeGetMatching>
  40df29:	48 83 c4 10          	add    $0x10,%rsp
  40df2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40df31:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  40df38:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40df3c:	48 89 10             	mov    %rdx,(%rax)
  40df3f:	83 7d fc 34          	cmpl   $0x34,-0x4(%rbp)
  40df43:	74 33                	je     40df78 <TypeParseEnum+0x128>
  40df45:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40df49:	48 8b 00             	mov    (%rax),%rax
  40df4c:	48 8b 40 30          	mov    0x30(%rax),%rax
  40df50:	48 85 c0             	test   %rax,%rax
  40df53:	0f 85 8c 01 00 00    	jne    40e0e5 <TypeParseEnum+0x295>
  40df59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40df5d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40df61:	be d3 8c 41 00       	mov    $0x418cd3,%esi
  40df66:	48 89 c7             	mov    %rax,%rdi
  40df69:	b8 00 00 00 00       	mov    $0x0,%eax
  40df6e:	e8 6b 27 00 00       	callq  4106de <ProgramFail>
  40df73:	e9 6e 01 00 00       	jmpq   40e0e6 <TypeParseEnum+0x296>
  40df78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40df7c:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40df83:	48 85 c0             	test   %rax,%rax
  40df86:	74 16                	je     40df9e <TypeParseEnum+0x14e>
  40df88:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40df8c:	be f0 8c 41 00       	mov    $0x418cf0,%esi
  40df91:	48 89 c7             	mov    %rax,%rdi
  40df94:	b8 00 00 00 00       	mov    $0x0,%eax
  40df99:	e8 40 27 00 00       	callq  4106de <ProgramFail>
  40df9e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40dfa2:	ba 01 00 00 00       	mov    $0x1,%edx
  40dfa7:	be 00 00 00 00       	mov    $0x0,%esi
  40dfac:	48 89 c7             	mov    %rax,%rdi
  40dfaf:	e8 d5 80 ff ff       	callq  406089 <LexGetToken>
  40dfb4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  40dfb8:	48 8b 00             	mov    (%rax),%rax
  40dfbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40dfbf:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40dfc3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40dfc7:	ba 28 00 00 00       	mov    $0x28,%edx
  40dfcc:	be 00 00 00 00       	mov    $0x0,%esi
  40dfd1:	48 89 c7             	mov    %rax,%rdi
  40dfd4:	e8 87 4c ff ff       	callq  402c60 <memset@plt>
  40dfd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40dfdd:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  40dfe3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  40dfe7:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
  40dfeb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  40dfef:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  40dff3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40dff7:	ba 01 00 00 00       	mov    $0x1,%edx
  40dffc:	48 89 ce             	mov    %rcx,%rsi
  40dfff:	48 89 c7             	mov    %rax,%rdi
  40e002:	e8 82 80 ff ff       	callq  406089 <LexGetToken>
  40e007:	83 f8 2d             	cmp    $0x2d,%eax
  40e00a:	74 16                	je     40e022 <TypeParseEnum+0x1d2>
  40e00c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e010:	be 15 8d 41 00       	mov    $0x418d15,%esi
  40e015:	48 89 c7             	mov    %rax,%rdi
  40e018:	b8 00 00 00 00       	mov    $0x0,%eax
  40e01d:	e8 bc 26 00 00       	callq  4106de <ProgramFail>
  40e022:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40e026:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e02a:	48 8b 00             	mov    (%rax),%rax
  40e02d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40e031:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e035:	ba 00 00 00 00       	mov    $0x0,%edx
  40e03a:	be 00 00 00 00       	mov    $0x0,%esi
  40e03f:	48 89 c7             	mov    %rax,%rdi
  40e042:	e8 42 80 ff ff       	callq  406089 <LexGetToken>
  40e047:	83 f8 02             	cmp    $0x2,%eax
  40e04a:	75 25                	jne    40e071 <TypeParseEnum+0x221>
  40e04c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e050:	ba 01 00 00 00       	mov    $0x1,%edx
  40e055:	be 00 00 00 00       	mov    $0x0,%esi
  40e05a:	48 89 c7             	mov    %rax,%rdi
  40e05d:	e8 27 80 ff ff       	callq  406089 <LexGetToken>
  40e062:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e066:	48 89 c7             	mov    %rax,%rdi
  40e069:	e8 63 ec ff ff       	callq  40ccd1 <ExpressionParseInt>
  40e06e:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40e071:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
  40e075:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40e079:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  40e07d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e081:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40e087:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40e08d:	48 89 c7             	mov    %rax,%rdi
  40e090:	e8 44 11 00 00       	callq  40f1d9 <VariableDefine>
  40e095:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e099:	ba 01 00 00 00       	mov    $0x1,%edx
  40e09e:	be 00 00 00 00       	mov    $0x0,%esi
  40e0a3:	48 89 c7             	mov    %rax,%rdi
  40e0a6:	e8 de 7f ff ff       	callq  406089 <LexGetToken>
  40e0ab:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e0ae:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40e0b2:	74 1c                	je     40e0d0 <TypeParseEnum+0x280>
  40e0b4:	83 7d fc 35          	cmpl   $0x35,-0x4(%rbp)
  40e0b8:	74 16                	je     40e0d0 <TypeParseEnum+0x280>
  40e0ba:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e0be:	be 29 8d 41 00       	mov    $0x418d29,%esi
  40e0c3:	48 89 c7             	mov    %rax,%rdi
  40e0c6:	b8 00 00 00 00       	mov    $0x0,%eax
  40e0cb:	e8 0e 26 00 00       	callq  4106de <ProgramFail>
  40e0d0:	8b 45 ac             	mov    -0x54(%rbp),%eax
  40e0d3:	83 c0 01             	add    $0x1,%eax
  40e0d6:	89 45 ac             	mov    %eax,-0x54(%rbp)
  40e0d9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40e0dd:	0f 84 0c ff ff ff    	je     40dfef <TypeParseEnum+0x19f>
  40e0e3:	eb 01                	jmp    40e0e6 <TypeParseEnum+0x296>
  40e0e5:	90                   	nop
  40e0e6:	c9                   	leaveq 
  40e0e7:	c3                   	retq   

000000000040e0e8 <TypeParseFront>:
  40e0e8:	55                   	push   %rbp
  40e0e9:	48 89 e5             	mov    %rsp,%rbp
  40e0ec:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  40e0f3:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  40e0fa:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  40e101:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  40e108:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40e10f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40e116:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e11d:	48 8b 00             	mov    (%rax),%rax
  40e120:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40e124:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e12b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40e132:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  40e139:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40e13d:	48 89 d6             	mov    %rdx,%rsi
  40e140:	48 89 c7             	mov    %rax,%rdi
  40e143:	e8 b1 99 ff ff       	callq  407af9 <ParserCopy>
  40e148:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  40e14c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e153:	ba 01 00 00 00       	mov    $0x1,%edx
  40e158:	48 89 ce             	mov    %rcx,%rsi
  40e15b:	48 89 c7             	mov    %rax,%rdi
  40e15e:	e8 26 7f ff ff       	callq  406089 <LexGetToken>
  40e163:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e166:	eb 2b                	jmp    40e193 <TypeParseFront+0xab>
  40e168:	83 7d fc 3f          	cmpl   $0x3f,-0x4(%rbp)
  40e16c:	75 07                	jne    40e175 <TypeParseFront+0x8d>
  40e16e:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
  40e175:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  40e179:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e180:	ba 01 00 00 00       	mov    $0x1,%edx
  40e185:	48 89 ce             	mov    %rcx,%rsi
  40e188:	48 89 c7             	mov    %rax,%rdi
  40e18b:	e8 f9 7e ff ff       	callq  406089 <LexGetToken>
  40e190:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e193:	83 7d fc 3f          	cmpl   $0x3f,-0x4(%rbp)
  40e197:	74 cf                	je     40e168 <TypeParseFront+0x80>
  40e199:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
  40e19d:	74 c9                	je     40e168 <TypeParseFront+0x80>
  40e19f:	83 7d fc 41          	cmpl   $0x41,-0x4(%rbp)
  40e1a3:	74 c3                	je     40e168 <TypeParseFront+0x80>
  40e1a5:	83 7d fc 42          	cmpl   $0x42,-0x4(%rbp)
  40e1a9:	74 bd                	je     40e168 <TypeParseFront+0x80>
  40e1ab:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
  40e1b2:	00 
  40e1b3:	74 0c                	je     40e1c1 <TypeParseFront+0xd9>
  40e1b5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  40e1bc:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40e1bf:	89 10                	mov    %edx,(%rax)
  40e1c1:	83 7d fc 3d          	cmpl   $0x3d,-0x4(%rbp)
  40e1c5:	74 0a                	je     40e1d1 <TypeParseFront+0xe9>
  40e1c7:	83 7d fc 45          	cmpl   $0x45,-0x4(%rbp)
  40e1cb:	0f 85 9d 00 00 00    	jne    40e26e <TypeParseFront+0x186>
  40e1d1:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  40e1d5:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e1dc:	ba 00 00 00 00       	mov    $0x0,%edx
  40e1e1:	48 89 ce             	mov    %rcx,%rsi
  40e1e4:	48 89 c7             	mov    %rax,%rdi
  40e1e7:	e8 9d 7e ff ff       	callq  406089 <LexGetToken>
  40e1ec:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40e1ef:	83 7d fc 45          	cmpl   $0x45,-0x4(%rbp)
  40e1f3:	0f 94 c0             	sete   %al
  40e1f6:	0f b6 c0             	movzbl %al,%eax
  40e1f9:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40e1fc:	83 7d e4 36          	cmpl   $0x36,-0x1c(%rbp)
  40e200:	74 4e                	je     40e250 <TypeParseFront+0x168>
  40e202:	83 7d e4 3c          	cmpl   $0x3c,-0x1c(%rbp)
  40e206:	74 48                	je     40e250 <TypeParseFront+0x168>
  40e208:	83 7d e4 3e          	cmpl   $0x3e,-0x1c(%rbp)
  40e20c:	74 42                	je     40e250 <TypeParseFront+0x168>
  40e20e:	83 7d e4 37          	cmpl   $0x37,-0x1c(%rbp)
  40e212:	74 3c                	je     40e250 <TypeParseFront+0x168>
  40e214:	83 7d fc 45          	cmpl   $0x45,-0x4(%rbp)
  40e218:	75 17                	jne    40e231 <TypeParseFront+0x149>
  40e21a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e21e:	48 8d 90 c8 0b 00 00 	lea    0xbc8(%rax),%rdx
  40e225:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e22c:	48 89 10             	mov    %rdx,(%rax)
  40e22f:	eb 15                	jmp    40e246 <TypeParseFront+0x15e>
  40e231:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e235:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  40e23c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e243:	48 89 10             	mov    %rdx,(%rax)
  40e246:	b8 01 00 00 00       	mov    $0x1,%eax
  40e24b:	e9 ed 01 00 00       	jmpq   40e43d <TypeParseFront+0x355>
  40e250:	48 8d 4d 88          	lea    -0x78(%rbp),%rcx
  40e254:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e25b:	ba 01 00 00 00       	mov    $0x1,%edx
  40e260:	48 89 ce             	mov    %rcx,%rsi
  40e263:	48 89 c7             	mov    %rax,%rdi
  40e266:	e8 1e 7e ff ff       	callq  406089 <LexGetToken>
  40e26b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40e26e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40e271:	83 e8 2d             	sub    $0x2d,%eax
  40e274:	83 f8 17             	cmp    $0x17,%eax
  40e277:	0f 87 9e 01 00 00    	ja     40e41b <TypeParseFront+0x333>
  40e27d:	89 c0                	mov    %eax,%eax
  40e27f:	48 8b 04 c5 50 8d 41 	mov    0x418d50(,%rax,8),%rax
  40e286:	00 
  40e287:	ff e0                	jmpq   *%rax
  40e289:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40e28d:	74 0c                	je     40e29b <TypeParseFront+0x1b3>
  40e28f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e293:	48 05 c8 0b 00 00    	add    $0xbc8,%rax
  40e299:	eb 0a                	jmp    40e2a5 <TypeParseFront+0x1bd>
  40e29b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e29f:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  40e2a5:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e2ac:	48 89 02             	mov    %rax,(%rdx)
  40e2af:	e9 84 01 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e2b4:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40e2b8:	74 0c                	je     40e2c6 <TypeParseFront+0x1de>
  40e2ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e2be:	48 05 08 0c 00 00    	add    $0xc08,%rax
  40e2c4:	eb 0a                	jmp    40e2d0 <TypeParseFront+0x1e8>
  40e2c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e2ca:	48 05 08 0b 00 00    	add    $0xb08,%rax
  40e2d0:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e2d7:	48 89 02             	mov    %rax,(%rdx)
  40e2da:	e9 59 01 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e2df:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40e2e3:	74 0c                	je     40e2f1 <TypeParseFront+0x209>
  40e2e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e2e9:	48 05 88 0c 00 00    	add    $0xc88,%rax
  40e2ef:	eb 0a                	jmp    40e2fb <TypeParseFront+0x213>
  40e2f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e2f5:	48 05 48 0b 00 00    	add    $0xb48,%rax
  40e2fb:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e302:	48 89 02             	mov    %rax,(%rdx)
  40e305:	e9 2e 01 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e30a:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40e30e:	74 0c                	je     40e31c <TypeParseFront+0x234>
  40e310:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e314:	48 05 48 0c 00 00    	add    $0xc48,%rax
  40e31a:	eb 0a                	jmp    40e326 <TypeParseFront+0x23e>
  40e31c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e320:	48 05 88 0b 00 00    	add    $0xb88,%rax
  40e326:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e32d:	48 89 02             	mov    %rax,(%rdx)
  40e330:	e9 03 01 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e339:	48 8d 90 c8 0c 00 00 	lea    0xcc8(%rax),%rdx
  40e340:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e347:	48 89 10             	mov    %rdx,(%rax)
  40e34a:	e9 e9 00 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e34f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e356:	48 8b 00             	mov    (%rax),%rax
  40e359:	48 85 c0             	test   %rax,%rax
  40e35c:	74 19                	je     40e377 <TypeParseFront+0x28f>
  40e35e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e365:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e36a:	48 89 c7             	mov    %rax,%rdi
  40e36d:	b8 00 00 00 00       	mov    $0x0,%eax
  40e372:	e8 67 23 00 00       	callq  4106de <ProgramFail>
  40e377:	83 7d fc 43          	cmpl   $0x43,-0x4(%rbp)
  40e37b:	0f 94 c0             	sete   %al
  40e37e:	0f b6 d0             	movzbl %al,%edx
  40e381:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
  40e388:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e38f:	48 89 ce             	mov    %rcx,%rsi
  40e392:	48 89 c7             	mov    %rax,%rdi
  40e395:	e8 62 f5 ff ff       	callq  40d8fc <TypeParseStruct>
  40e39a:	e9 99 00 00 00       	jmpq   40e438 <TypeParseFront+0x350>
  40e39f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e3a6:	48 8b 00             	mov    (%rax),%rax
  40e3a9:	48 85 c0             	test   %rax,%rax
  40e3ac:	74 19                	je     40e3c7 <TypeParseFront+0x2df>
  40e3ae:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e3b5:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e3ba:	48 89 c7             	mov    %rax,%rdi
  40e3bd:	b8 00 00 00 00       	mov    $0x0,%eax
  40e3c2:	e8 17 23 00 00       	callq  4106de <ProgramFail>
  40e3c7:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40e3ce:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e3d5:	48 89 d6             	mov    %rdx,%rsi
  40e3d8:	48 89 c7             	mov    %rax,%rdi
  40e3db:	e8 70 fa ff ff       	callq  40de50 <TypeParseEnum>
  40e3e0:	eb 56                	jmp    40e438 <TypeParseFront+0x350>
  40e3e2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e3e6:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e3ea:	48 8b 10             	mov    (%rax),%rdx
  40e3ed:	48 8d 4d 80          	lea    -0x80(%rbp),%rcx
  40e3f1:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  40e3f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e3fc:	48 89 c7             	mov    %rax,%rdi
  40e3ff:	e8 86 13 00 00       	callq  40f78a <VariableGet>
  40e404:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e408:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e40c:	48 8b 10             	mov    (%rax),%rdx
  40e40f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  40e416:	48 89 10             	mov    %rdx,(%rax)
  40e419:	eb 1d                	jmp    40e438 <TypeParseFront+0x350>
  40e41b:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  40e41f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40e426:	48 89 d6             	mov    %rdx,%rsi
  40e429:	48 89 c7             	mov    %rax,%rdi
  40e42c:	e8 c8 96 ff ff       	callq  407af9 <ParserCopy>
  40e431:	b8 00 00 00 00       	mov    $0x0,%eax
  40e436:	eb 05                	jmp    40e43d <TypeParseFront+0x355>
  40e438:	b8 01 00 00 00       	mov    $0x1,%eax
  40e43d:	c9                   	leaveq 
  40e43e:	c3                   	retq   

000000000040e43f <TypeParseBack>:
  40e43f:	55                   	push   %rbp
  40e440:	48 89 e5             	mov    %rsp,%rbp
  40e443:	53                   	push   %rbx
  40e444:	48 83 ec 78          	sub    $0x78,%rsp
  40e448:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  40e44c:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
  40e450:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40e454:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40e458:	48 89 d6             	mov    %rdx,%rsi
  40e45b:	48 89 c7             	mov    %rax,%rdi
  40e45e:	e8 96 96 ff ff       	callq  407af9 <ParserCopy>
  40e463:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e467:	ba 01 00 00 00       	mov    $0x1,%edx
  40e46c:	be 00 00 00 00       	mov    $0x0,%esi
  40e471:	48 89 c7             	mov    %rax,%rdi
  40e474:	e8 10 7c ff ff       	callq  406089 <LexGetToken>
  40e479:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40e47c:	83 7d ec 27          	cmpl   $0x27,-0x14(%rbp)
  40e480:	0f 85 38 01 00 00    	jne    40e5be <TypeParseBack+0x17f>
  40e486:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e48a:	ba 00 00 00 00       	mov    $0x0,%edx
  40e48f:	be 00 00 00 00       	mov    $0x0,%esi
  40e494:	48 89 c7             	mov    %rax,%rdi
  40e497:	e8 ed 7b ff ff       	callq  406089 <LexGetToken>
  40e49c:	83 f8 28             	cmp    $0x28,%eax
  40e49f:	75 6a                	jne    40e50b <TypeParseBack+0xcc>
  40e4a1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e4a5:	ba 01 00 00 00       	mov    $0x1,%edx
  40e4aa:	be 00 00 00 00       	mov    $0x0,%esi
  40e4af:	48 89 c7             	mov    %rax,%rdi
  40e4b2:	e8 d2 7b ff ff       	callq  406089 <LexGetToken>
  40e4b7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e4bb:	48 8b 00             	mov    (%rax),%rax
  40e4be:	48 8b 98 f8 13 00 00 	mov    0x13f8(%rax),%rbx
  40e4c5:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40e4c9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e4cd:	48 89 d6             	mov    %rdx,%rsi
  40e4d0:	48 89 c7             	mov    %rax,%rdi
  40e4d3:	e8 67 ff ff ff       	callq  40e43f <TypeParseBack>
  40e4d8:	48 89 c2             	mov    %rax,%rdx
  40e4db:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e4df:	48 8b 00             	mov    (%rax),%rax
  40e4e2:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  40e4e6:	48 83 ec 08          	sub    $0x8,%rsp
  40e4ea:	6a 01                	pushq  $0x1
  40e4ec:	49 89 d9             	mov    %rbx,%r9
  40e4ef:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40e4f5:	b9 0c 00 00 00       	mov    $0xc,%ecx
  40e4fa:	48 89 c7             	mov    %rax,%rdi
  40e4fd:	e8 e5 ec ff ff       	callq  40d1e7 <TypeGetMatching>
  40e502:	48 83 c4 10          	add    $0x10,%rsp
  40e506:	e9 ca 00 00 00       	jmpq   40e5d5 <TypeParseBack+0x196>
  40e50b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e50f:	8b 40 1c             	mov    0x1c(%rax),%eax
  40e512:	89 45 e8             	mov    %eax,-0x18(%rbp)
  40e515:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e519:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
  40e520:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e524:	48 89 c7             	mov    %rax,%rdi
  40e527:	e8 a5 e7 ff ff       	callq  40ccd1 <ExpressionParseInt>
  40e52c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40e52f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e533:	8b 55 e8             	mov    -0x18(%rbp),%edx
  40e536:	89 50 1c             	mov    %edx,0x1c(%rax)
  40e539:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e53d:	ba 01 00 00 00       	mov    $0x1,%edx
  40e542:	be 00 00 00 00       	mov    $0x0,%esi
  40e547:	48 89 c7             	mov    %rax,%rdi
  40e54a:	e8 3a 7b ff ff       	callq  406089 <LexGetToken>
  40e54f:	83 f8 28             	cmp    $0x28,%eax
  40e552:	74 16                	je     40e56a <TypeParseBack+0x12b>
  40e554:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e558:	be 10 8e 41 00       	mov    $0x418e10,%esi
  40e55d:	48 89 c7             	mov    %rax,%rdi
  40e560:	b8 00 00 00 00       	mov    $0x0,%eax
  40e565:	e8 74 21 00 00       	callq  4106de <ProgramFail>
  40e56a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e56e:	48 8b 00             	mov    (%rax),%rax
  40e571:	48 8b 98 f8 13 00 00 	mov    0x13f8(%rax),%rbx
  40e578:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40e57c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e580:	48 89 d6             	mov    %rdx,%rsi
  40e583:	48 89 c7             	mov    %rax,%rdi
  40e586:	e8 b4 fe ff ff       	callq  40e43f <TypeParseBack>
  40e58b:	48 89 c7             	mov    %rax,%rdi
  40e58e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e592:	48 8b 00             	mov    (%rax),%rax
  40e595:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  40e598:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  40e59c:	48 83 ec 08          	sub    $0x8,%rsp
  40e5a0:	6a 01                	pushq  $0x1
  40e5a2:	49 89 d9             	mov    %rbx,%r9
  40e5a5:	41 89 d0             	mov    %edx,%r8d
  40e5a8:	b9 0c 00 00 00       	mov    $0xc,%ecx
  40e5ad:	48 89 fa             	mov    %rdi,%rdx
  40e5b0:	48 89 c7             	mov    %rax,%rdi
  40e5b3:	e8 2f ec ff ff       	callq  40d1e7 <TypeGetMatching>
  40e5b8:	48 83 c4 10          	add    $0x10,%rsp
  40e5bc:	eb 17                	jmp    40e5d5 <TypeParseBack+0x196>
  40e5be:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
  40e5c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e5c6:	48 89 d6             	mov    %rdx,%rsi
  40e5c9:	48 89 c7             	mov    %rax,%rdi
  40e5cc:	e8 28 95 ff ff       	callq  407af9 <ParserCopy>
  40e5d1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e5d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  40e5d9:	c9                   	leaveq 
  40e5da:	c3                   	retq   

000000000040e5db <TypeParseIdentPart>:
  40e5db:	55                   	push   %rbp
  40e5dc:	48 89 e5             	mov    %rsp,%rbp
  40e5df:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  40e5e3:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  40e5e7:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  40e5eb:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
  40e5ef:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
  40e5f3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40e5fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e5fe:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  40e602:	48 89 10             	mov    %rdx,(%rax)
  40e605:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e609:	48 8b 00             	mov    (%rax),%rax
  40e60c:	48 8b 90 f8 13 00 00 	mov    0x13f8(%rax),%rdx
  40e613:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e617:	48 89 10             	mov    %rdx,(%rax)
  40e61a:	e9 9e 01 00 00       	jmpq   40e7bd <TypeParseIdentPart+0x1e2>
  40e61f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40e623:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40e627:	48 89 d6             	mov    %rdx,%rsi
  40e62a:	48 89 c7             	mov    %rax,%rdi
  40e62d:	e8 c7 94 ff ff       	callq  407af9 <ParserCopy>
  40e632:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
  40e636:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e63a:	ba 01 00 00 00       	mov    $0x1,%edx
  40e63f:	48 89 ce             	mov    %rcx,%rsi
  40e642:	48 89 c7             	mov    %rax,%rdi
  40e645:	e8 3f 7a ff ff       	callq  406089 <LexGetToken>
  40e64a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40e64d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40e650:	83 f8 2b             	cmp    $0x2b,%eax
  40e653:	74 13                	je     40e668 <TypeParseIdentPart+0x8d>
  40e655:	83 f8 2d             	cmp    $0x2d,%eax
  40e658:	0f 84 ed 00 00 00    	je     40e74b <TypeParseIdentPart+0x170>
  40e65e:	83 f8 1e             	cmp    $0x1e,%eax
  40e661:	74 7a                	je     40e6dd <TypeParseIdentPart+0x102>
  40e663:	e9 3a 01 00 00       	jmpq   40e7a2 <TypeParseIdentPart+0x1c7>
  40e668:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e66c:	48 8b 00             	mov    (%rax),%rax
  40e66f:	48 85 c0             	test   %rax,%rax
  40e672:	74 16                	je     40e68a <TypeParseIdentPart+0xaf>
  40e674:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e678:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e67d:	48 89 c7             	mov    %rax,%rdi
  40e680:	b8 00 00 00 00       	mov    $0x0,%eax
  40e685:	e8 54 20 00 00       	callq  4106de <ProgramFail>
  40e68a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  40e68e:	48 8b 75 88          	mov    -0x78(%rbp),%rsi
  40e692:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e696:	b9 00 00 00 00       	mov    $0x0,%ecx
  40e69b:	48 89 c7             	mov    %rax,%rdi
  40e69e:	e8 83 01 00 00       	callq  40e826 <TypeParse>
  40e6a3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e6a7:	ba 01 00 00 00       	mov    $0x1,%edx
  40e6ac:	be 00 00 00 00       	mov    $0x0,%esi
  40e6b1:	48 89 c7             	mov    %rax,%rdi
  40e6b4:	e8 d0 79 ff ff       	callq  406089 <LexGetToken>
  40e6b9:	83 f8 2c             	cmp    $0x2c,%eax
  40e6bc:	0f 84 fb 00 00 00    	je     40e7bd <TypeParseIdentPart+0x1e2>
  40e6c2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e6c6:	be 1d 8e 41 00       	mov    $0x418e1d,%esi
  40e6cb:	48 89 c7             	mov    %rax,%rdi
  40e6ce:	b8 00 00 00 00       	mov    $0x0,%eax
  40e6d3:	e8 06 20 00 00       	callq  4106de <ProgramFail>
  40e6d8:	e9 e0 00 00 00       	jmpq   40e7bd <TypeParseIdentPart+0x1e2>
  40e6dd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e6e1:	48 8b 00             	mov    (%rax),%rax
  40e6e4:	48 85 c0             	test   %rax,%rax
  40e6e7:	75 16                	jne    40e6ff <TypeParseIdentPart+0x124>
  40e6e9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e6ed:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e6f2:	48 89 c7             	mov    %rax,%rdi
  40e6f5:	b8 00 00 00 00       	mov    $0x0,%eax
  40e6fa:	e8 df 1f 00 00       	callq  4106de <ProgramFail>
  40e6ff:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e703:	48 8b 00             	mov    (%rax),%rax
  40e706:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  40e70d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e711:	48 8b 10             	mov    (%rax),%rdx
  40e714:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e718:	48 8b 00             	mov    (%rax),%rax
  40e71b:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
  40e71f:	48 83 ec 08          	sub    $0x8,%rsp
  40e723:	6a 01                	pushq  $0x1
  40e725:	49 89 c9             	mov    %rcx,%r9
  40e728:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40e72e:	b9 0b 00 00 00       	mov    $0xb,%ecx
  40e733:	48 89 c7             	mov    %rax,%rdi
  40e736:	e8 ac ea ff ff       	callq  40d1e7 <TypeGetMatching>
  40e73b:	48 83 c4 10          	add    $0x10,%rsp
  40e73f:	48 89 c2             	mov    %rax,%rdx
  40e742:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e746:	48 89 10             	mov    %rdx,(%rax)
  40e749:	eb 72                	jmp    40e7bd <TypeParseIdentPart+0x1e2>
  40e74b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e74f:	48 8b 00             	mov    (%rax),%rax
  40e752:	48 85 c0             	test   %rax,%rax
  40e755:	74 1a                	je     40e771 <TypeParseIdentPart+0x196>
  40e757:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e75b:	48 8b 10             	mov    (%rax),%rdx
  40e75e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e762:	48 8b 00             	mov    (%rax),%rax
  40e765:	48 8b 80 f8 13 00 00 	mov    0x13f8(%rax),%rax
  40e76c:	48 39 c2             	cmp    %rax,%rdx
  40e76f:	74 16                	je     40e787 <TypeParseIdentPart+0x1ac>
  40e771:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e775:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e77a:	48 89 c7             	mov    %rax,%rdi
  40e77d:	b8 00 00 00 00       	mov    $0x0,%eax
  40e782:	e8 57 1f 00 00       	callq  4106de <ProgramFail>
  40e787:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
  40e78b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e78f:	48 8b 10             	mov    (%rax),%rdx
  40e792:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e796:	48 89 10             	mov    %rdx,(%rax)
  40e799:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40e7a0:	eb 1b                	jmp    40e7bd <TypeParseIdentPart+0x1e2>
  40e7a2:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
  40e7a6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e7aa:	48 89 d6             	mov    %rdx,%rsi
  40e7ad:	48 89 c7             	mov    %rax,%rdi
  40e7b0:	e8 44 93 ff ff       	callq  407af9 <ParserCopy>
  40e7b5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  40e7bc:	90                   	nop
  40e7bd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40e7c1:	0f 84 58 fe ff ff    	je     40e61f <TypeParseIdentPart+0x44>
  40e7c7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e7cb:	48 8b 00             	mov    (%rax),%rax
  40e7ce:	48 85 c0             	test   %rax,%rax
  40e7d1:	75 16                	jne    40e7e9 <TypeParseIdentPart+0x20e>
  40e7d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e7d7:	be 38 8d 41 00       	mov    $0x418d38,%esi
  40e7dc:	48 89 c7             	mov    %rax,%rdi
  40e7df:	b8 00 00 00 00       	mov    $0x0,%eax
  40e7e4:	e8 f5 1e 00 00       	callq  4106de <ProgramFail>
  40e7e9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  40e7ed:	48 8b 10             	mov    (%rax),%rdx
  40e7f0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e7f4:	48 8b 00             	mov    (%rax),%rax
  40e7f7:	48 8b 80 f8 13 00 00 	mov    0x13f8(%rax),%rax
  40e7fe:	48 39 c2             	cmp    %rax,%rdx
  40e801:	74 20                	je     40e823 <TypeParseIdentPart+0x248>
  40e803:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e807:	48 8b 10             	mov    (%rax),%rdx
  40e80a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
  40e80e:	48 89 d6             	mov    %rdx,%rsi
  40e811:	48 89 c7             	mov    %rax,%rdi
  40e814:	e8 26 fc ff ff       	callq  40e43f <TypeParseBack>
  40e819:	48 89 c2             	mov    %rax,%rdx
  40e81c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
  40e820:	48 89 10             	mov    %rdx,(%rax)
  40e823:	90                   	nop
  40e824:	c9                   	leaveq 
  40e825:	c3                   	retq   

000000000040e826 <TypeParse>:
  40e826:	55                   	push   %rbp
  40e827:	48 89 e5             	mov    %rsp,%rbp
  40e82a:	48 83 ec 30          	sub    $0x30,%rsp
  40e82e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40e832:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40e836:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40e83a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40e83e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40e842:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
  40e846:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e84a:	48 89 ce             	mov    %rcx,%rsi
  40e84d:	48 89 c7             	mov    %rax,%rdi
  40e850:	e8 93 f8 ff ff       	callq  40e0e8 <TypeParseFront>
  40e855:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40e859:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40e85d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40e861:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40e865:	48 89 c7             	mov    %rax,%rdi
  40e868:	e8 6e fd ff ff       	callq  40e5db <TypeParseIdentPart>
  40e86d:	90                   	nop
  40e86e:	c9                   	leaveq 
  40e86f:	c3                   	retq   

000000000040e870 <TypeIsForwardDeclared>:
  40e870:	55                   	push   %rbp
  40e871:	48 89 e5             	mov    %rsp,%rbp
  40e874:	48 83 ec 10          	sub    $0x10,%rsp
  40e878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e87c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40e880:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e884:	8b 00                	mov    (%rax),%eax
  40e886:	83 f8 0c             	cmp    $0xc,%eax
  40e889:	75 19                	jne    40e8a4 <TypeIsForwardDeclared+0x34>
  40e88b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e88f:	48 8b 50 18          	mov    0x18(%rax),%rdx
  40e893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e897:	48 89 d6             	mov    %rdx,%rsi
  40e89a:	48 89 c7             	mov    %rax,%rdi
  40e89d:	e8 ce ff ff ff       	callq  40e870 <TypeIsForwardDeclared>
  40e8a2:	eb 2f                	jmp    40e8d3 <TypeIsForwardDeclared+0x63>
  40e8a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e8a8:	8b 00                	mov    (%rax),%eax
  40e8aa:	83 f8 0d             	cmp    $0xd,%eax
  40e8ad:	74 0b                	je     40e8ba <TypeIsForwardDeclared+0x4a>
  40e8af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e8b3:	8b 00                	mov    (%rax),%eax
  40e8b5:	83 f8 0e             	cmp    $0xe,%eax
  40e8b8:	75 14                	jne    40e8ce <TypeIsForwardDeclared+0x5e>
  40e8ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e8be:	48 8b 40 30          	mov    0x30(%rax),%rax
  40e8c2:	48 85 c0             	test   %rax,%rax
  40e8c5:	75 07                	jne    40e8ce <TypeIsForwardDeclared+0x5e>
  40e8c7:	b8 01 00 00 00       	mov    $0x1,%eax
  40e8cc:	eb 05                	jmp    40e8d3 <TypeIsForwardDeclared+0x63>
  40e8ce:	b8 00 00 00 00       	mov    $0x0,%eax
  40e8d3:	c9                   	leaveq 
  40e8d4:	c3                   	retq   

000000000040e8d5 <VariableInit>:
  40e8d5:	55                   	push   %rbp
  40e8d6:	48 89 e5             	mov    %rsp,%rbp
  40e8d9:	48 83 ec 10          	sub    $0x10,%rsp
  40e8dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e8e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e8e5:	48 8d 70 18          	lea    0x18(%rax),%rsi
  40e8e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e8ed:	b9 01 00 00 00       	mov    $0x1,%ecx
  40e8f2:	ba 61 00 00 00       	mov    $0x61,%edx
  40e8f7:	48 89 c7             	mov    %rax,%rdi
  40e8fa:	e8 06 4e ff ff       	callq  403705 <TableInitTable>
  40e8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e903:	48 8d b0 00 07 00 00 	lea    0x700(%rax),%rsi
  40e90a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e90e:	48 05 f0 06 00 00    	add    $0x6f0,%rax
  40e914:	b9 01 00 00 00       	mov    $0x1,%ecx
  40e919:	ba 61 00 00 00       	mov    $0x61,%edx
  40e91e:	48 89 c7             	mov    %rax,%rdi
  40e921:	e8 df 4d ff ff       	callq  403705 <TableInitTable>
  40e926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e92a:	48 c7 80 08 0a 00 00 	movq   $0x0,0xa08(%rax)
  40e931:	00 00 00 00 
  40e935:	90                   	nop
  40e936:	c9                   	leaveq 
  40e937:	c3                   	retq   

000000000040e938 <VariableFree>:
  40e938:	55                   	push   %rbp
  40e939:	48 89 e5             	mov    %rsp,%rbp
  40e93c:	48 83 ec 10          	sub    $0x10,%rsp
  40e940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40e944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40e948:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e94c:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  40e950:	84 c0                	test   %al,%al
  40e952:	75 10                	jne    40e964 <VariableFree+0x2c>
  40e954:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e958:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
  40e95c:	84 c0                	test   %al,%al
  40e95e:	0f 84 a9 00 00 00    	je     40ea0d <VariableFree+0xd5>
  40e964:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e968:	48 8b 00             	mov    (%rax),%rax
  40e96b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40e96f:	48 81 c2 48 0d 00 00 	add    $0xd48,%rdx
  40e976:	48 39 d0             	cmp    %rdx,%rax
  40e979:	75 3d                	jne    40e9b8 <VariableFree+0x80>
  40e97b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e97f:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e983:	48 8b 40 20          	mov    0x20(%rax),%rax
  40e987:	48 85 c0             	test   %rax,%rax
  40e98a:	75 2c                	jne    40e9b8 <VariableFree+0x80>
  40e98c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e990:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e994:	48 8b 40 30          	mov    0x30(%rax),%rax
  40e998:	48 85 c0             	test   %rax,%rax
  40e99b:	74 1b                	je     40e9b8 <VariableFree+0x80>
  40e99d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9a1:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e9a5:	48 8b 50 30          	mov    0x30(%rax),%rdx
  40e9a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9ad:	48 89 d6             	mov    %rdx,%rsi
  40e9b0:	48 89 c7             	mov    %rax,%rdi
  40e9b3:	e8 4f e7 ff ff       	callq  40d107 <HeapFreeMem>
  40e9b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9bc:	48 8b 00             	mov    (%rax),%rax
  40e9bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40e9c3:	48 81 c2 88 0d 00 00 	add    $0xd88,%rdx
  40e9ca:	48 39 d0             	cmp    %rdx,%rax
  40e9cd:	75 1b                	jne    40e9ea <VariableFree+0xb2>
  40e9cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9d3:	48 8b 40 08          	mov    0x8(%rax),%rax
  40e9d7:	48 8b 50 18          	mov    0x18(%rax),%rdx
  40e9db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40e9df:	48 89 d6             	mov    %rdx,%rsi
  40e9e2:	48 89 c7             	mov    %rax,%rdi
  40e9e5:	e8 1d e7 ff ff       	callq  40d107 <HeapFreeMem>
  40e9ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9ee:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
  40e9f2:	84 c0                	test   %al,%al
  40e9f4:	74 17                	je     40ea0d <VariableFree+0xd5>
  40e9f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40e9fa:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40e9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ea02:	48 89 d6             	mov    %rdx,%rsi
  40ea05:	48 89 c7             	mov    %rax,%rdi
  40ea08:	e8 fa e6 ff ff       	callq  40d107 <HeapFreeMem>
  40ea0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ea11:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  40ea15:	84 c0                	test   %al,%al
  40ea17:	74 13                	je     40ea2c <VariableFree+0xf4>
  40ea19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40ea1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ea21:	48 89 d6             	mov    %rdx,%rsi
  40ea24:	48 89 c7             	mov    %rax,%rdi
  40ea27:	e8 db e6 ff ff       	callq  40d107 <HeapFreeMem>
  40ea2c:	90                   	nop
  40ea2d:	c9                   	leaveq 
  40ea2e:	c3                   	retq   

000000000040ea2f <VariableTableCleanup>:
  40ea2f:	55                   	push   %rbp
  40ea30:	48 89 e5             	mov    %rsp,%rbp
  40ea33:	48 83 ec 30          	sub    $0x30,%rsp
  40ea37:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40ea3b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40ea3f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40ea46:	eb 66                	jmp    40eaae <VariableTableCleanup+0x7f>
  40ea48:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40ea4c:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ea50:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40ea53:	48 63 d2             	movslq %edx,%rdx
  40ea56:	48 c1 e2 03          	shl    $0x3,%rdx
  40ea5a:	48 01 d0             	add    %rdx,%rax
  40ea5d:	48 8b 00             	mov    (%rax),%rax
  40ea60:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40ea64:	eb 3d                	jmp    40eaa3 <VariableTableCleanup+0x74>
  40ea66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ea6a:	48 8b 00             	mov    (%rax),%rax
  40ea6d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40ea71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ea75:	48 8b 50 20          	mov    0x20(%rax),%rdx
  40ea79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ea7d:	48 89 d6             	mov    %rdx,%rsi
  40ea80:	48 89 c7             	mov    %rax,%rdi
  40ea83:	e8 b0 fe ff ff       	callq  40e938 <VariableFree>
  40ea88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40ea8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ea90:	48 89 d6             	mov    %rdx,%rsi
  40ea93:	48 89 c7             	mov    %rax,%rdi
  40ea96:	e8 6c e6 ff ff       	callq  40d107 <HeapFreeMem>
  40ea9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ea9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40eaa3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40eaa8:	75 bc                	jne    40ea66 <VariableTableCleanup+0x37>
  40eaaa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40eaae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40eab2:	0f b7 00             	movzwl (%rax),%eax
  40eab5:	98                   	cwtl   
  40eab6:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  40eab9:	7c 8d                	jl     40ea48 <VariableTableCleanup+0x19>
  40eabb:	90                   	nop
  40eabc:	c9                   	leaveq 
  40eabd:	c3                   	retq   

000000000040eabe <VariableCleanup>:
  40eabe:	55                   	push   %rbp
  40eabf:	48 89 e5             	mov    %rsp,%rbp
  40eac2:	48 83 ec 10          	sub    $0x10,%rsp
  40eac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40eaca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40eace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ead2:	48 89 d6             	mov    %rdx,%rsi
  40ead5:	48 89 c7             	mov    %rax,%rdi
  40ead8:	e8 52 ff ff ff       	callq  40ea2f <VariableTableCleanup>
  40eadd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eae1:	48 8d 90 f0 06 00 00 	lea    0x6f0(%rax),%rdx
  40eae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eaec:	48 89 d6             	mov    %rdx,%rsi
  40eaef:	48 89 c7             	mov    %rax,%rdi
  40eaf2:	e8 38 ff ff ff       	callq  40ea2f <VariableTableCleanup>
  40eaf7:	90                   	nop
  40eaf8:	c9                   	leaveq 
  40eaf9:	c3                   	retq   

000000000040eafa <VariableAlloc>:
  40eafa:	55                   	push   %rbp
  40eafb:	48 89 e5             	mov    %rsp,%rbp
  40eafe:	48 83 ec 30          	sub    $0x30,%rsp
  40eb02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40eb06:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40eb0a:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40eb0d:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40eb10:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)
  40eb14:	74 17                	je     40eb2d <VariableAlloc+0x33>
  40eb16:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40eb19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40eb1d:	89 d6                	mov    %edx,%esi
  40eb1f:	48 89 c7             	mov    %rax,%rdi
  40eb22:	e8 bd e5 ff ff       	callq  40d0e4 <HeapAllocMem>
  40eb27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40eb2b:	eb 15                	jmp    40eb42 <VariableAlloc+0x48>
  40eb2d:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40eb30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40eb34:	89 d6                	mov    %edx,%esi
  40eb36:	48 89 c7             	mov    %rax,%rdi
  40eb39:	e8 99 e3 ff ff       	callq  40ced7 <HeapAllocStack>
  40eb3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40eb42:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40eb47:	75 16                	jne    40eb5f <VariableAlloc+0x65>
  40eb49:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40eb4d:	be 30 8e 41 00       	mov    $0x418e30,%esi
  40eb52:	48 89 c7             	mov    %rax,%rdi
  40eb55:	b8 00 00 00 00       	mov    $0x0,%eax
  40eb5a:	e8 7f 1b 00 00       	callq  4106de <ProgramFail>
  40eb5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eb63:	c9                   	leaveq 
  40eb64:	c3                   	retq   

000000000040eb65 <VariableAllocValueAndData>:
  40eb65:	55                   	push   %rbp
  40eb66:	48 89 e5             	mov    %rsp,%rbp
  40eb69:	48 83 ec 40          	sub    $0x40,%rsp
  40eb6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40eb71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40eb75:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40eb78:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  40eb7b:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
  40eb7f:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
  40eb83:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40eb86:	83 c0 28             	add    $0x28,%eax
  40eb89:	89 c7                	mov    %eax,%edi
  40eb8b:	8b 55 cc             	mov    -0x34(%rbp),%edx
  40eb8e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40eb92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40eb96:	89 d1                	mov    %edx,%ecx
  40eb98:	89 fa                	mov    %edi,%edx
  40eb9a:	48 89 c7             	mov    %rax,%rdi
  40eb9d:	e8 58 ff ff ff       	callq  40eafa <VariableAlloc>
  40eba2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40eba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebaa:	48 8d 50 28          	lea    0x28(%rax),%rdx
  40ebae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebb2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40ebb6:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40ebb9:	89 c2                	mov    %eax,%edx
  40ebbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebbf:	88 50 18             	mov    %dl,0x18(%rax)
  40ebc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebc6:	c6 40 1a 00          	movb   $0x0,0x1a(%rax)
  40ebca:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
  40ebce:	0f 94 c0             	sete   %al
  40ebd1:	89 c2                	mov    %eax,%edx
  40ebd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebd7:	88 50 19             	mov    %dl,0x19(%rax)
  40ebda:	8b 45 d8             	mov    -0x28(%rbp),%eax
  40ebdd:	89 c2                	mov    %eax,%edx
  40ebdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebe3:	88 50 1b             	mov    %dl,0x1b(%rax)
  40ebe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ebea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40ebee:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40ebf2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40ebf7:	74 0e                	je     40ec07 <VariableAllocValueAndData+0xa2>
  40ebf9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ebfd:	8b 50 40             	mov    0x40(%rax),%edx
  40ec00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ec04:	89 50 1c             	mov    %edx,0x1c(%rax)
  40ec07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ec0b:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  40ec0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ec13:	c9                   	leaveq 
  40ec14:	c3                   	retq   

000000000040ec15 <VariableAllocValueFromType>:
  40ec15:	55                   	push   %rbp
  40ec16:	48 89 e5             	mov    %rsp,%rbp
  40ec19:	48 83 ec 40          	sub    $0x40,%rsp
  40ec1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40ec21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40ec25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40ec29:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40ec2c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  40ec30:	44 89 4d d0          	mov    %r9d,-0x30(%rbp)
  40ec34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ec38:	8b 48 04             	mov    0x4(%rax),%ecx
  40ec3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40ec3f:	ba 00 00 00 00       	mov    $0x0,%edx
  40ec44:	89 ce                	mov    %ecx,%esi
  40ec46:	48 89 c7             	mov    %rax,%rdi
  40ec49:	e8 5f e7 ff ff       	callq  40d3ad <TypeSize>
  40ec4e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40ec51:	44 8b 45 d0          	mov    -0x30(%rbp),%r8d
  40ec55:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40ec59:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
  40ec5c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40ec5f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40ec63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ec67:	45 89 c1             	mov    %r8d,%r9d
  40ec6a:	49 89 f8             	mov    %rdi,%r8
  40ec6d:	48 89 c7             	mov    %rax,%rdi
  40ec70:	e8 f0 fe ff ff       	callq  40eb65 <VariableAllocValueAndData>
  40ec75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40ec79:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40ec7d:	79 29                	jns    40eca8 <VariableAllocValueFromType+0x93>
  40ec7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ec83:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  40ec89:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  40ec8d:	74 19                	je     40eca8 <VariableAllocValueFromType+0x93>
  40ec8f:	b9 20 8f 41 00       	mov    $0x418f20,%ecx
  40ec94:	ba 6f 00 00 00       	mov    $0x6f,%edx
  40ec99:	be 3e 8e 41 00       	mov    $0x418e3e,%esi
  40ec9e:	bf 50 8e 41 00       	mov    $0x418e50,%edi
  40eca3:	e8 88 3f ff ff       	callq  402c30 <__assert_fail@plt>
  40eca8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ecac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ecb0:	48 89 10             	mov    %rdx,(%rax)
  40ecb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ecb7:	c9                   	leaveq 
  40ecb8:	c3                   	retq   

000000000040ecb9 <VariableAllocValueAndCopy>:
  40ecb9:	55                   	push   %rbp
  40ecba:	48 89 e5             	mov    %rsp,%rbp
  40ecbd:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
  40ecc4:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
  40eccb:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
  40ecd2:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
  40ecd9:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
  40ecdf:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ece6:	48 8b 00             	mov    (%rax),%rax
  40ece9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40eced:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ecf4:	be 01 00 00 00       	mov    $0x1,%esi
  40ecf9:	48 89 c7             	mov    %rax,%rdi
  40ecfc:	e8 42 e6 ff ff       	callq  40d343 <TypeSizeValue>
  40ed01:	89 45 f4             	mov    %eax,-0xc(%rbp)
  40ed04:	81 7d f4 00 01 00 00 	cmpl   $0x100,-0xc(%rbp)
  40ed0b:	7e 19                	jle    40ed26 <VariableAllocValueAndCopy+0x6d>
  40ed0d:	b9 40 8f 41 00       	mov    $0x418f40,%ecx
  40ed12:	ba 7d 00 00 00       	mov    $0x7d,%edx
  40ed17:	be 3e 8e 41 00       	mov    $0x418e3e,%esi
  40ed1c:	bf 72 8e 41 00       	mov    $0x418e72,%edi
  40ed21:	e8 0a 3f ff ff       	callq  402c30 <__assert_fail@plt>
  40ed26:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40ed29:	48 63 d0             	movslq %eax,%rdx
  40ed2c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ed33:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40ed37:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
  40ed3e:	48 89 ce             	mov    %rcx,%rsi
  40ed41:	48 89 c7             	mov    %rax,%rdi
  40ed44:	e8 37 41 ff ff       	callq  402e80 <memcpy@plt>
  40ed49:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ed50:	48 8b 78 10          	mov    0x10(%rax),%rdi
  40ed54:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
  40ed5b:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40ed5f:	0f be c8             	movsbl %al,%ecx
  40ed62:	44 8b 85 c4 fe ff ff 	mov    -0x13c(%rbp),%r8d
  40ed69:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40ed6c:	48 8b b5 d0 fe ff ff 	mov    -0x130(%rbp),%rsi
  40ed73:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
  40ed7a:	45 89 c1             	mov    %r8d,%r9d
  40ed7d:	49 89 f8             	mov    %rdi,%r8
  40ed80:	48 89 c7             	mov    %rax,%rdi
  40ed83:	e8 dd fd ff ff       	callq  40eb65 <VariableAllocValueAndData>
  40ed88:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40ed8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ed90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40ed94:	48 89 10             	mov    %rdx,(%rax)
  40ed97:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40ed9a:	48 63 d0             	movslq %eax,%rdx
  40ed9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40eda1:	48 8b 40 08          	mov    0x8(%rax),%rax
  40eda5:	48 8d 8d e0 fe ff ff 	lea    -0x120(%rbp),%rcx
  40edac:	48 89 ce             	mov    %rcx,%rsi
  40edaf:	48 89 c7             	mov    %rax,%rdi
  40edb2:	e8 c9 40 ff ff       	callq  402e80 <memcpy@plt>
  40edb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40edbb:	c9                   	leaveq 
  40edbc:	c3                   	retq   

000000000040edbd <VariableAllocValueFromExistingData>:
  40edbd:	55                   	push   %rbp
  40edbe:	48 89 e5             	mov    %rsp,%rbp
  40edc1:	48 83 ec 40          	sub    $0x40,%rsp
  40edc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40edc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40edcd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40edd1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  40edd4:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  40edd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40eddc:	48 8b 00             	mov    (%rax),%rax
  40eddf:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40ede3:	b9 00 00 00 00       	mov    $0x0,%ecx
  40ede8:	ba 28 00 00 00       	mov    $0x28,%edx
  40eded:	48 89 c7             	mov    %rax,%rdi
  40edf0:	e8 05 fd ff ff       	callq  40eafa <VariableAlloc>
  40edf5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40edf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40edfd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40ee01:	48 89 10             	mov    %rdx,(%rax)
  40ee04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee08:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40ee0c:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40ee10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee14:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  40ee18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee1c:	c6 40 1a 00          	movb   $0x0,0x1a(%rax)
  40ee20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee24:	c6 40 19 00          	movb   $0x0,0x19(%rax)
  40ee28:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40ee2b:	89 c2                	mov    %eax,%edx
  40ee2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee31:	88 50 1b             	mov    %dl,0x1b(%rax)
  40ee34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee38:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40ee3c:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40ee40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee44:	c9                   	leaveq 
  40ee45:	c3                   	retq   

000000000040ee46 <VariableAllocValueShared>:
  40ee46:	55                   	push   %rbp
  40ee47:	48 89 e5             	mov    %rsp,%rbp
  40ee4a:	48 83 ec 10          	sub    $0x10,%rsp
  40ee4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ee52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40ee56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ee5a:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40ee5e:	84 c0                	test   %al,%al
  40ee60:	74 06                	je     40ee68 <VariableAllocValueShared+0x22>
  40ee62:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40ee66:	eb 05                	jmp    40ee6d <VariableAllocValueShared+0x27>
  40ee68:	bf 00 00 00 00       	mov    $0x0,%edi
  40ee6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ee71:	0f b6 40 1b          	movzbl 0x1b(%rax),%eax
  40ee75:	0f be c8             	movsbl %al,%ecx
  40ee78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ee7c:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40ee80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ee84:	48 8b 30             	mov    (%rax),%rsi
  40ee87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ee8b:	49 89 f8             	mov    %rdi,%r8
  40ee8e:	48 89 c7             	mov    %rax,%rdi
  40ee91:	e8 27 ff ff ff       	callq  40edbd <VariableAllocValueFromExistingData>
  40ee96:	c9                   	leaveq 
  40ee97:	c3                   	retq   

000000000040ee98 <VariableRealloc>:
  40ee98:	55                   	push   %rbp
  40ee99:	48 89 e5             	mov    %rsp,%rbp
  40ee9c:	48 83 ec 20          	sub    $0x20,%rsp
  40eea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40eea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40eea8:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40eeab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40eeaf:	0f b6 40 1a          	movzbl 0x1a(%rax),%eax
  40eeb3:	84 c0                	test   %al,%al
  40eeb5:	74 1a                	je     40eed1 <VariableRealloc+0x39>
  40eeb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40eebb:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40eebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eec3:	48 8b 00             	mov    (%rax),%rax
  40eec6:	48 89 d6             	mov    %rdx,%rsi
  40eec9:	48 89 c7             	mov    %rax,%rdi
  40eecc:	e8 36 e2 ff ff       	callq  40d107 <HeapFreeMem>
  40eed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eed5:	48 8b 00             	mov    (%rax),%rax
  40eed8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40eedb:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  40eedf:	b9 01 00 00 00       	mov    $0x1,%ecx
  40eee4:	48 89 c7             	mov    %rax,%rdi
  40eee7:	e8 0e fc ff ff       	callq  40eafa <VariableAlloc>
  40eeec:	48 89 c2             	mov    %rax,%rdx
  40eeef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40eef3:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40eef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40eefb:	c6 40 1a 01          	movb   $0x1,0x1a(%rax)
  40eeff:	90                   	nop
  40ef00:	c9                   	leaveq 
  40ef01:	c3                   	retq   

000000000040ef02 <VariableScopeBegin>:
  40ef02:	55                   	push   %rbp
  40ef03:	48 89 e5             	mov    %rsp,%rbp
  40ef06:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40ef0a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40ef0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef12:	48 8b 00             	mov    (%rax),%rax
  40ef15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40ef19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ef1d:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40ef24:	48 85 c0             	test   %rax,%rax
  40ef27:	75 06                	jne    40ef2f <VariableScopeBegin+0x2d>
  40ef29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ef2d:	eb 0f                	jmp    40ef3e <VariableScopeBegin+0x3c>
  40ef2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40ef33:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40ef3a:	48 83 c0 68          	add    $0x68,%rax
  40ef3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40ef42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef46:	8b 40 40             	mov    0x40(%rax),%eax
  40ef49:	83 f8 ff             	cmp    $0xffffffff,%eax
  40ef4c:	75 0a                	jne    40ef58 <VariableScopeBegin+0x56>
  40ef4e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40ef53:	e9 dc 00 00 00       	jmpq   40f034 <VariableScopeBegin+0x132>
  40ef58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef5c:	8b 50 40             	mov    0x40(%rax),%edx
  40ef5f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40ef63:	89 10                	mov    %edx,(%rax)
  40ef65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef69:	48 8b 40 30          	mov    0x30(%rax),%rax
  40ef6d:	48 98                	cltq   
  40ef6f:	89 c2                	mov    %eax,%edx
  40ef71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef75:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ef79:	48 98                	cltq   
  40ef7b:	48 c1 e8 03          	shr    $0x3,%rax
  40ef7f:	0f af c2             	imul   %edx,%eax
  40ef82:	89 c2                	mov    %eax,%edx
  40ef84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40ef88:	89 50 40             	mov    %edx,0x40(%rax)
  40ef8b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40ef92:	e9 85 00 00 00       	jmpq   40f01c <VariableScopeBegin+0x11a>
  40ef97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ef9b:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ef9f:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40efa2:	48 63 d2             	movslq %edx,%rdx
  40efa5:	48 c1 e2 03          	shl    $0x3,%rdx
  40efa9:	48 01 d0             	add    %rdx,%rax
  40efac:	48 8b 00             	mov    (%rax),%rax
  40efaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40efb3:	eb 5c                	jmp    40f011 <VariableScopeBegin+0x10f>
  40efb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40efb9:	48 8b 00             	mov    (%rax),%rax
  40efbc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40efc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40efc4:	48 8b 40 20          	mov    0x20(%rax),%rax
  40efc8:	8b 50 1c             	mov    0x1c(%rax),%edx
  40efcb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40efcf:	8b 40 40             	mov    0x40(%rax),%eax
  40efd2:	39 c2                	cmp    %eax,%edx
  40efd4:	75 33                	jne    40f009 <VariableScopeBegin+0x107>
  40efd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40efda:	48 8b 40 20          	mov    0x20(%rax),%rax
  40efde:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  40efe2:	84 c0                	test   %al,%al
  40efe4:	74 23                	je     40f009 <VariableScopeBegin+0x107>
  40efe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40efea:	48 8b 40 20          	mov    0x20(%rax),%rax
  40efee:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  40eff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40eff6:	48 8b 40 18          	mov    0x18(%rax),%rax
  40effa:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40effe:	48 89 c2             	mov    %rax,%rdx
  40f001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f005:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40f009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f00d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f011:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f016:	75 9d                	jne    40efb5 <VariableScopeBegin+0xb3>
  40f018:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40f01c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f020:	0f b7 00             	movzwl (%rax),%eax
  40f023:	98                   	cwtl   
  40f024:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  40f027:	0f 8c 6a ff ff ff    	jl     40ef97 <VariableScopeBegin+0x95>
  40f02d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f031:	8b 40 40             	mov    0x40(%rax),%eax
  40f034:	5d                   	pop    %rbp
  40f035:	c3                   	retq   

000000000040f036 <VariableScopeEnd>:
  40f036:	55                   	push   %rbp
  40f037:	48 89 e5             	mov    %rsp,%rbp
  40f03a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40f03e:	89 75 c4             	mov    %esi,-0x3c(%rbp)
  40f041:	89 55 c0             	mov    %edx,-0x40(%rbp)
  40f044:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f048:	48 8b 00             	mov    (%rax),%rax
  40f04b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f04f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f053:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f05a:	48 85 c0             	test   %rax,%rax
  40f05d:	75 06                	jne    40f065 <VariableScopeEnd+0x2f>
  40f05f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f063:	eb 0f                	jmp    40f074 <VariableScopeEnd+0x3e>
  40f065:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f069:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f070:	48 83 c0 68          	add    $0x68,%rax
  40f074:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40f078:	83 7d c4 ff          	cmpl   $0xffffffff,-0x3c(%rbp)
  40f07c:	0f 84 a5 00 00 00    	je     40f127 <VariableScopeEnd+0xf1>
  40f082:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40f089:	eb 7f                	jmp    40f10a <VariableScopeEnd+0xd4>
  40f08b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f08f:	48 8b 40 08          	mov    0x8(%rax),%rax
  40f093:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40f096:	48 63 d2             	movslq %edx,%rdx
  40f099:	48 c1 e2 03          	shl    $0x3,%rdx
  40f09d:	48 01 d0             	add    %rdx,%rax
  40f0a0:	48 8b 00             	mov    (%rax),%rax
  40f0a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f0a7:	eb 56                	jmp    40f0ff <VariableScopeEnd+0xc9>
  40f0a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0ad:	48 8b 00             	mov    (%rax),%rax
  40f0b0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40f0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0b8:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f0bc:	8b 40 1c             	mov    0x1c(%rax),%eax
  40f0bf:	39 45 c4             	cmp    %eax,-0x3c(%rbp)
  40f0c2:	75 33                	jne    40f0f7 <VariableScopeEnd+0xc1>
  40f0c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0c8:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f0cc:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  40f0d0:	84 c0                	test   %al,%al
  40f0d2:	75 23                	jne    40f0f7 <VariableScopeEnd+0xc1>
  40f0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0d8:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f0dc:	c6 40 20 01          	movb   $0x1,0x20(%rax)
  40f0e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0e4:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f0e8:	48 83 c8 01          	or     $0x1,%rax
  40f0ec:	48 89 c2             	mov    %rax,%rdx
  40f0ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f0f3:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40f0f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f0fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f0ff:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f104:	75 a3                	jne    40f0a9 <VariableScopeEnd+0x73>
  40f106:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40f10a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f10e:	0f b7 00             	movzwl (%rax),%eax
  40f111:	98                   	cwtl   
  40f112:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  40f115:	0f 8c 70 ff ff ff    	jl     40f08b <VariableScopeEnd+0x55>
  40f11b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f11f:	8b 55 c0             	mov    -0x40(%rbp),%edx
  40f122:	89 50 40             	mov    %edx,0x40(%rax)
  40f125:	eb 01                	jmp    40f128 <VariableScopeEnd+0xf2>
  40f127:	90                   	nop
  40f128:	5d                   	pop    %rbp
  40f129:	c3                   	retq   

000000000040f12a <VariableDefinedAndOutOfScope>:
  40f12a:	55                   	push   %rbp
  40f12b:	48 89 e5             	mov    %rsp,%rbp
  40f12e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40f132:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40f136:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f13a:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f141:	48 85 c0             	test   %rax,%rax
  40f144:	75 06                	jne    40f14c <VariableDefinedAndOutOfScope+0x22>
  40f146:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f14a:	eb 0f                	jmp    40f15b <VariableDefinedAndOutOfScope+0x31>
  40f14c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f150:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f157:	48 83 c0 68          	add    $0x68,%rax
  40f15b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f15f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40f166:	eb 5d                	jmp    40f1c5 <VariableDefinedAndOutOfScope+0x9b>
  40f168:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f16c:	48 8b 40 08          	mov    0x8(%rax),%rax
  40f170:	8b 55 f4             	mov    -0xc(%rbp),%edx
  40f173:	48 63 d2             	movslq %edx,%rdx
  40f176:	48 c1 e2 03          	shl    $0x3,%rdx
  40f17a:	48 01 d0             	add    %rdx,%rax
  40f17d:	48 8b 00             	mov    (%rax),%rax
  40f180:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f184:	eb 34                	jmp    40f1ba <VariableDefinedAndOutOfScope+0x90>
  40f186:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f18a:	48 8b 40 20          	mov    0x20(%rax),%rax
  40f18e:	0f b6 40 20          	movzbl 0x20(%rax),%eax
  40f192:	84 c0                	test   %al,%al
  40f194:	74 19                	je     40f1af <VariableDefinedAndOutOfScope+0x85>
  40f196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f19a:	48 8b 40 18          	mov    0x18(%rax),%rax
  40f19e:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
  40f1a2:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
  40f1a6:	75 07                	jne    40f1af <VariableDefinedAndOutOfScope+0x85>
  40f1a8:	b8 01 00 00 00       	mov    $0x1,%eax
  40f1ad:	eb 28                	jmp    40f1d7 <VariableDefinedAndOutOfScope+0xad>
  40f1af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f1b3:	48 8b 00             	mov    (%rax),%rax
  40f1b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f1ba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40f1bf:	75 c5                	jne    40f186 <VariableDefinedAndOutOfScope+0x5c>
  40f1c1:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40f1c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f1c9:	0f b7 00             	movzwl (%rax),%eax
  40f1cc:	98                   	cwtl   
  40f1cd:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  40f1d0:	7c 96                	jl     40f168 <VariableDefinedAndOutOfScope+0x3e>
  40f1d2:	b8 00 00 00 00       	mov    $0x0,%eax
  40f1d7:	5d                   	pop    %rbp
  40f1d8:	c3                   	retq   

000000000040f1d9 <VariableDefine>:
  40f1d9:	55                   	push   %rbp
  40f1da:	48 89 e5             	mov    %rsp,%rbp
  40f1dd:	48 83 ec 50          	sub    $0x50,%rsp
  40f1e1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40f1e5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40f1e9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40f1ed:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  40f1f1:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  40f1f5:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  40f1f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f1fd:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f204:	48 85 c0             	test   %rax,%rax
  40f207:	75 06                	jne    40f20f <VariableDefine+0x36>
  40f209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f20d:	eb 0f                	jmp    40f21e <VariableDefine+0x45>
  40f20f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f213:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f21a:	48 83 c0 68          	add    $0x68,%rax
  40f21e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f222:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40f227:	74 09                	je     40f232 <VariableDefine+0x59>
  40f229:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f22d:	8b 40 40             	mov    0x40(%rax),%eax
  40f230:	eb 05                	jmp    40f237 <VariableDefine+0x5e>
  40f232:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40f237:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40f23a:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40f23f:	74 2e                	je     40f26f <VariableDefine+0x96>
  40f241:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f245:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f24c:	48 85 c0             	test   %rax,%rax
  40f24f:	0f 94 c0             	sete   %al
  40f252:	0f b6 c8             	movzbl %al,%ecx
  40f255:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  40f259:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f25d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f261:	48 89 c7             	mov    %rax,%rdi
  40f264:	e8 50 fa ff ff       	callq  40ecb9 <VariableAllocValueAndCopy>
  40f269:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f26d:	eb 38                	jmp    40f2a7 <VariableDefine+0xce>
  40f26f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f273:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f27a:	48 85 c0             	test   %rax,%rax
  40f27d:	0f 94 c0             	sete   %al
  40f280:	0f b6 f8             	movzbl %al,%edi
  40f283:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
  40f286:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40f28a:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  40f28e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f292:	41 89 f9             	mov    %edi,%r9d
  40f295:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f29b:	48 89 c7             	mov    %rax,%rdi
  40f29e:	e8 72 f9 ff ff       	callq  40ec15 <VariableAllocValueFromType>
  40f2a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f2a7:	8b 45 b4             	mov    -0x4c(%rbp),%eax
  40f2aa:	89 c2                	mov    %eax,%edx
  40f2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2b0:	88 50 1b             	mov    %dl,0x1b(%rax)
  40f2b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2b7:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40f2ba:	89 50 1c             	mov    %edx,0x1c(%rax)
  40f2bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f2c1:	c6 40 20 00          	movb   $0x0,0x20(%rax)
  40f2c5:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40f2ca:	74 0b                	je     40f2d7 <VariableDefine+0xfe>
  40f2cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f2d0:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  40f2d4:	98                   	cwtl   
  40f2d5:	eb 05                	jmp    40f2dc <VariableDefine+0x103>
  40f2d7:	b8 00 00 00 00       	mov    $0x0,%eax
  40f2dc:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40f2e1:	74 0e                	je     40f2f1 <VariableDefine+0x118>
  40f2e3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40f2e7:	0f b7 52 18          	movzwl 0x18(%rdx),%edx
  40f2eb:	44 0f bf ca          	movswl %dx,%r9d
  40f2ef:	eb 06                	jmp    40f2f7 <VariableDefine+0x11e>
  40f2f1:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40f2f7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40f2fc:	74 0a                	je     40f308 <VariableDefine+0x12f>
  40f2fe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40f302:	4c 8b 42 10          	mov    0x10(%rdx),%r8
  40f306:	eb 06                	jmp    40f30e <VariableDefine+0x135>
  40f308:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f30e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  40f312:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40f316:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40f31a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  40f31e:	48 83 ec 08          	sub    $0x8,%rsp
  40f322:	50                   	push   %rax
  40f323:	e8 ba 44 ff ff       	callq  4037e2 <TableSet>
  40f328:	48 83 c4 10          	add    $0x10,%rsp
  40f32c:	85 c0                	test   %eax,%eax
  40f32e:	75 1a                	jne    40f34a <VariableDefine+0x171>
  40f330:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40f334:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f338:	be 8f 8e 41 00       	mov    $0x418e8f,%esi
  40f33d:	48 89 c7             	mov    %rax,%rdi
  40f340:	b8 00 00 00 00       	mov    $0x0,%eax
  40f345:	e8 94 13 00 00       	callq  4106de <ProgramFail>
  40f34a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f34e:	c9                   	leaveq 
  40f34f:	c3                   	retq   

000000000040f350 <VariableDefineButIgnoreIdentical>:
  40f350:	55                   	push   %rbp
  40f351:	48 89 e5             	mov    %rsp,%rbp
  40f354:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
  40f35b:	48 89 bd b8 fe ff ff 	mov    %rdi,-0x148(%rbp)
  40f362:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
  40f369:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
  40f370:	89 8d a4 fe ff ff    	mov    %ecx,-0x15c(%rbp)
  40f376:	4c 89 85 98 fe ff ff 	mov    %r8,-0x168(%rbp)
  40f37d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f384:	48 8b 00             	mov    (%rax),%rax
  40f387:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40f38b:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  40f392:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f399:	48 89 d6             	mov    %rdx,%rsi
  40f39c:	48 89 c7             	mov    %rax,%rdi
  40f39f:	e8 cc f4 ff ff       	callq  40e870 <TypeIsForwardDeclared>
  40f3a4:	85 c0                	test   %eax,%eax
  40f3a6:	74 20                	je     40f3c8 <VariableDefineButIgnoreIdentical+0x78>
  40f3a8:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  40f3af:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f3b6:	be a7 8e 41 00       	mov    $0x418ea7,%esi
  40f3bb:	48 89 c7             	mov    %rax,%rdi
  40f3be:	b8 00 00 00 00       	mov    $0x0,%eax
  40f3c3:	e8 16 13 00 00       	callq  4106de <ProgramFail>
  40f3c8:	83 bd a4 fe ff ff 00 	cmpl   $0x0,-0x15c(%rbp)
  40f3cf:	0f 84 4d 02 00 00    	je     40f622 <VariableDefineButIgnoreIdentical+0x2d2>
  40f3d5:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  40f3dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40f3e0:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  40f3e7:	48 05 ff 00 00 00    	add    $0xff,%rax
  40f3ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40f3f1:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
  40f3f8:	ba 00 01 00 00       	mov    $0x100,%edx
  40f3fd:	be 00 00 00 00       	mov    $0x0,%esi
  40f402:	48 89 c7             	mov    %rax,%rdi
  40f405:	e8 56 38 ff ff       	callq  402c60 <memset@plt>
  40f40a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f40e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f412:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  40f416:	c6 00 2f             	movb   $0x2f,(%rax)
  40f419:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f41d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f421:	48 29 c2             	sub    %rax,%rdx
  40f424:	48 89 d0             	mov    %rdx,%rax
  40f427:	48 89 c2             	mov    %rax,%rdx
  40f42a:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f431:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40f435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f439:	48 89 ce             	mov    %rcx,%rsi
  40f43c:	48 89 c7             	mov    %rax,%rdi
  40f43f:	e8 6c 35 ff ff       	callq  4029b0 <strncpy@plt>
  40f444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f448:	48 89 c7             	mov    %rax,%rdi
  40f44b:	e8 b0 36 ff ff       	callq  402b00 <strlen@plt>
  40f450:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  40f454:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f458:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f45f:	48 85 c0             	test   %rax,%rax
  40f462:	74 61                	je     40f4c5 <VariableDefineButIgnoreIdentical+0x175>
  40f464:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f46c:	48 29 c2             	sub    %rax,%rdx
  40f46f:	48 89 d0             	mov    %rdx,%rax
  40f472:	48 85 c0             	test   %rax,%rax
  40f475:	7e 0f                	jle    40f486 <VariableDefineButIgnoreIdentical+0x136>
  40f477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f47b:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f47f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  40f483:	c6 00 2f             	movb   $0x2f,(%rax)
  40f486:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f48a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f48e:	48 29 c2             	sub    %rax,%rdx
  40f491:	48 89 d0             	mov    %rdx,%rax
  40f494:	48 89 c2             	mov    %rax,%rdx
  40f497:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f49b:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f4a2:	48 8b 48 48          	mov    0x48(%rax),%rcx
  40f4a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f4aa:	48 89 ce             	mov    %rcx,%rsi
  40f4ad:	48 89 c7             	mov    %rax,%rdi
  40f4b0:	e8 fb 34 ff ff       	callq  4029b0 <strncpy@plt>
  40f4b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f4b9:	48 89 c7             	mov    %rax,%rdi
  40f4bc:	e8 3f 36 ff ff       	callq  402b00 <strlen@plt>
  40f4c1:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  40f4c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f4c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f4cd:	48 29 c2             	sub    %rax,%rdx
  40f4d0:	48 89 d0             	mov    %rdx,%rax
  40f4d3:	48 85 c0             	test   %rax,%rax
  40f4d6:	7e 0f                	jle    40f4e7 <VariableDefineButIgnoreIdentical+0x197>
  40f4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f4dc:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40f4e0:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  40f4e4:	c6 00 2f             	movb   $0x2f,(%rax)
  40f4e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f4eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f4ef:	48 29 c2             	sub    %rax,%rdx
  40f4f2:	48 89 d0             	mov    %rdx,%rax
  40f4f5:	48 89 c2             	mov    %rax,%rdx
  40f4f8:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
  40f4ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f503:	48 89 ce             	mov    %rcx,%rsi
  40f506:	48 89 c7             	mov    %rax,%rdi
  40f509:	e8 a2 34 ff ff       	callq  4029b0 <strncpy@plt>
  40f50e:	48 8d 95 c0 fe ff ff 	lea    -0x140(%rbp),%rdx
  40f515:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f519:	48 89 d6             	mov    %rdx,%rsi
  40f51c:	48 89 c7             	mov    %rax,%rdi
  40f51f:	e8 dd 46 ff ff       	callq  403c01 <TableStrRegister>
  40f524:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40f528:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f52c:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
  40f530:	48 8d 7d cc          	lea    -0x34(%rbp),%rdi
  40f534:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  40f538:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  40f53c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40f540:	4d 89 c1             	mov    %r8,%r9
  40f543:	49 89 f8             	mov    %rdi,%r8
  40f546:	48 89 c7             	mov    %rax,%rdi
  40f549:	e8 88 43 ff ff       	callq  4038d6 <TableGet>
  40f54e:	85 c0                	test   %eax,%eax
  40f550:	0f 85 8b 00 00 00    	jne    40f5e1 <VariableDefineButIgnoreIdentical+0x291>
  40f556:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f55d:	48 8b 00             	mov    (%rax),%rax
  40f560:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
  40f567:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
  40f56e:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40f574:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f57a:	b9 01 00 00 00       	mov    $0x1,%ecx
  40f57f:	48 89 c7             	mov    %rax,%rdi
  40f582:	e8 8e f6 ff ff       	callq  40ec15 <VariableAllocValueFromType>
  40f587:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40f58b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f592:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  40f596:	0f bf f8             	movswl %ax,%edi
  40f599:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f5a0:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  40f5a4:	44 0f bf c8          	movswl %ax,%r9d
  40f5a8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f5af:	4c 8b 40 10          	mov    0x10(%rax),%r8
  40f5b3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40f5b7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40f5bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40f5bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f5c3:	48 83 ec 08          	sub    $0x8,%rsp
  40f5c7:	57                   	push   %rdi
  40f5c8:	48 89 c7             	mov    %rax,%rdi
  40f5cb:	e8 12 42 ff ff       	callq  4037e2 <TableSet>
  40f5d0:	48 83 c4 10          	add    $0x10,%rsp
  40f5d4:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
  40f5db:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40f5e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f5e5:	48 8b 78 08          	mov    0x8(%rax),%rdi
  40f5e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f5ed:	48 8b 08             	mov    (%rax),%rcx
  40f5f0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f5f7:	48 8b 00             	mov    (%rax),%rax
  40f5fa:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
  40f601:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
  40f608:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40f60e:	49 89 f8             	mov    %rdi,%r8
  40f611:	48 89 c7             	mov    %rax,%rdi
  40f614:	e8 46 02 00 00       	callq  40f85f <VariableDefinePlatformVar>
  40f619:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f61d:	e9 db 00 00 00       	jmpq   40f6fd <VariableDefineButIgnoreIdentical+0x3ad>
  40f622:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f629:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  40f62d:	66 85 c0             	test   %ax,%ax
  40f630:	0f 84 92 00 00 00    	je     40f6c8 <VariableDefineButIgnoreIdentical+0x378>
  40f636:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f63a:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f641:	48 85 c0             	test   %rax,%rax
  40f644:	75 06                	jne    40f64c <VariableDefineButIgnoreIdentical+0x2fc>
  40f646:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f64a:	eb 0f                	jmp    40f65b <VariableDefineButIgnoreIdentical+0x30b>
  40f64c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f650:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f657:	48 83 c0 68          	add    $0x68,%rax
  40f65b:	4c 8d 45 c8          	lea    -0x38(%rbp),%r8
  40f65f:	48 8d 7d cc          	lea    -0x34(%rbp),%rdi
  40f663:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
  40f667:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
  40f66b:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
  40f672:	4d 89 c1             	mov    %r8,%r9
  40f675:	49 89 f8             	mov    %rdi,%r8
  40f678:	48 89 c7             	mov    %rax,%rdi
  40f67b:	e8 56 42 ff ff       	callq  4038d6 <TableGet>
  40f680:	85 c0                	test   %eax,%eax
  40f682:	74 44                	je     40f6c8 <VariableDefineButIgnoreIdentical+0x378>
  40f684:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f68b:	48 8b 50 10          	mov    0x10(%rax),%rdx
  40f68f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40f693:	48 39 c2             	cmp    %rax,%rdx
  40f696:	75 30                	jne    40f6c8 <VariableDefineButIgnoreIdentical+0x378>
  40f698:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f69f:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  40f6a3:	0f bf d0             	movswl %ax,%edx
  40f6a6:	8b 45 cc             	mov    -0x34(%rbp),%eax
  40f6a9:	39 c2                	cmp    %eax,%edx
  40f6ab:	75 1b                	jne    40f6c8 <VariableDefineButIgnoreIdentical+0x378>
  40f6ad:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f6b4:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  40f6b8:	0f bf d0             	movswl %ax,%edx
  40f6bb:	8b 45 c8             	mov    -0x38(%rbp),%eax
  40f6be:	39 c2                	cmp    %eax,%edx
  40f6c0:	75 06                	jne    40f6c8 <VariableDefineButIgnoreIdentical+0x378>
  40f6c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f6c6:	eb 35                	jmp    40f6fd <VariableDefineButIgnoreIdentical+0x3ad>
  40f6c8:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40f6cf:	48 8b 00             	mov    (%rax),%rax
  40f6d2:	48 8b 8d a8 fe ff ff 	mov    -0x158(%rbp),%rcx
  40f6d9:	48 8b 95 b0 fe ff ff 	mov    -0x150(%rbp),%rdx
  40f6e0:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
  40f6e7:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40f6ed:	49 89 c8             	mov    %rcx,%r8
  40f6f0:	b9 00 00 00 00       	mov    $0x0,%ecx
  40f6f5:	48 89 c7             	mov    %rax,%rdi
  40f6f8:	e8 dc fa ff ff       	callq  40f1d9 <VariableDefine>
  40f6fd:	c9                   	leaveq 
  40f6fe:	c3                   	retq   

000000000040f6ff <VariableDefined>:
  40f6ff:	55                   	push   %rbp
  40f700:	48 89 e5             	mov    %rsp,%rbp
  40f703:	48 83 ec 20          	sub    $0x20,%rsp
  40f707:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f70b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40f70f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f713:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f71a:	48 85 c0             	test   %rax,%rax
  40f71d:	74 34                	je     40f753 <VariableDefined+0x54>
  40f71f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f723:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f72a:	48 8d 78 68          	lea    0x68(%rax),%rdi
  40f72e:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40f732:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f736:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40f73c:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f742:	b9 00 00 00 00       	mov    $0x0,%ecx
  40f747:	48 89 c6             	mov    %rax,%rsi
  40f74a:	e8 87 41 ff ff       	callq  4038d6 <TableGet>
  40f74f:	85 c0                	test   %eax,%eax
  40f751:	75 30                	jne    40f783 <VariableDefined+0x84>
  40f753:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f757:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40f75b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  40f75f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40f765:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f76b:	b9 00 00 00 00       	mov    $0x0,%ecx
  40f770:	48 89 c7             	mov    %rax,%rdi
  40f773:	e8 5e 41 ff ff       	callq  4038d6 <TableGet>
  40f778:	85 c0                	test   %eax,%eax
  40f77a:	75 07                	jne    40f783 <VariableDefined+0x84>
  40f77c:	b8 00 00 00 00       	mov    $0x0,%eax
  40f781:	eb 05                	jmp    40f788 <VariableDefined+0x89>
  40f783:	b8 01 00 00 00       	mov    $0x1,%eax
  40f788:	c9                   	leaveq 
  40f789:	c3                   	retq   

000000000040f78a <VariableGet>:
  40f78a:	55                   	push   %rbp
  40f78b:	48 89 e5             	mov    %rsp,%rbp
  40f78e:	48 83 ec 20          	sub    $0x20,%rsp
  40f792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40f796:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40f79a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40f79e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40f7a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7a6:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f7ad:	48 85 c0             	test   %rax,%rax
  40f7b0:	74 34                	je     40f7e6 <VariableGet+0x5c>
  40f7b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7b6:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f7bd:	48 8d 78 68          	lea    0x68(%rax),%rdi
  40f7c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40f7c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f7c9:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40f7cf:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f7d5:	b9 00 00 00 00       	mov    $0x0,%ecx
  40f7da:	48 89 c6             	mov    %rax,%rsi
  40f7dd:	e8 f4 40 ff ff       	callq  4038d6 <TableGet>
  40f7e2:	85 c0                	test   %eax,%eax
  40f7e4:	75 76                	jne    40f85c <VariableGet+0xd2>
  40f7e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f7ea:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40f7ee:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  40f7f2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40f7f8:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f7fe:	b9 00 00 00 00       	mov    $0x0,%ecx
  40f803:	48 89 c7             	mov    %rax,%rdi
  40f806:	e8 cb 40 ff ff       	callq  4038d6 <TableGet>
  40f80b:	85 c0                	test   %eax,%eax
  40f80d:	75 4d                	jne    40f85c <VariableGet+0xd2>
  40f80f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40f817:	48 89 d6             	mov    %rdx,%rsi
  40f81a:	48 89 c7             	mov    %rax,%rdi
  40f81d:	e8 08 f9 ff ff       	callq  40f12a <VariableDefinedAndOutOfScope>
  40f822:	85 c0                	test   %eax,%eax
  40f824:	74 1c                	je     40f842 <VariableGet+0xb8>
  40f826:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f82a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f82e:	be bf 8e 41 00       	mov    $0x418ebf,%esi
  40f833:	48 89 c7             	mov    %rax,%rdi
  40f836:	b8 00 00 00 00       	mov    $0x0,%eax
  40f83b:	e8 9e 0e 00 00       	callq  4106de <ProgramFail>
  40f840:	eb 1a                	jmp    40f85c <VariableGet+0xd2>
  40f842:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40f846:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40f84a:	be d4 8e 41 00       	mov    $0x418ed4,%esi
  40f84f:	48 89 c7             	mov    %rax,%rdi
  40f852:	b8 00 00 00 00       	mov    $0x0,%eax
  40f857:	e8 82 0e 00 00       	callq  4106de <ProgramFail>
  40f85c:	90                   	nop
  40f85d:	c9                   	leaveq 
  40f85e:	c3                   	retq   

000000000040f85f <VariableDefinePlatformVar>:
  40f85f:	55                   	push   %rbp
  40f860:	48 89 e5             	mov    %rsp,%rbp
  40f863:	41 55                	push   %r13
  40f865:	41 54                	push   %r12
  40f867:	53                   	push   %rbx
  40f868:	48 83 ec 48          	sub    $0x48,%rsp
  40f86c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  40f870:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  40f874:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
  40f878:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
  40f87c:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
  40f880:	44 89 4d a4          	mov    %r9d,-0x5c(%rbp)
  40f884:	8b 55 a4             	mov    -0x5c(%rbp),%edx
  40f887:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f88b:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40f891:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40f897:	89 d1                	mov    %edx,%ecx
  40f899:	ba 00 00 00 00       	mov    $0x0,%edx
  40f89e:	be 00 00 00 00       	mov    $0x0,%esi
  40f8a3:	48 89 c7             	mov    %rax,%rdi
  40f8a6:	e8 ba f2 ff ff       	callq  40eb65 <VariableAllocValueAndData>
  40f8ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  40f8af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f8b3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  40f8b7:	48 89 10             	mov    %rdx,(%rax)
  40f8ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40f8be:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  40f8c2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40f8c6:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40f8cb:	74 0d                	je     40f8da <VariableDefinePlatformVar+0x7b>
  40f8cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40f8d1:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  40f8d5:	0f bf d8             	movswl %ax,%ebx
  40f8d8:	eb 05                	jmp    40f8df <VariableDefinePlatformVar+0x80>
  40f8da:	bb 00 00 00 00       	mov    $0x0,%ebx
  40f8df:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40f8e4:	74 0e                	je     40f8f4 <VariableDefinePlatformVar+0x95>
  40f8e6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40f8ea:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  40f8ee:	44 0f bf e8          	movswl %ax,%r13d
  40f8f2:	eb 06                	jmp    40f8fa <VariableDefinePlatformVar+0x9b>
  40f8f4:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  40f8fa:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
  40f8ff:	74 0a                	je     40f90b <VariableDefinePlatformVar+0xac>
  40f901:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40f905:	4c 8b 60 10          	mov    0x10(%rax),%r12
  40f909:	eb 06                	jmp    40f911 <VariableDefinePlatformVar+0xb2>
  40f90b:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  40f911:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40f915:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f919:	48 89 d6             	mov    %rdx,%rsi
  40f91c:	48 89 c7             	mov    %rax,%rdi
  40f91f:	e8 dd 42 ff ff       	callq  403c01 <TableStrRegister>
  40f924:	48 89 c6             	mov    %rax,%rsi
  40f927:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f92b:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f932:	48 85 c0             	test   %rax,%rax
  40f935:	75 06                	jne    40f93d <VariableDefinePlatformVar+0xde>
  40f937:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f93b:	eb 0f                	jmp    40f94c <VariableDefinePlatformVar+0xed>
  40f93d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40f941:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40f948:	48 83 c0 68          	add    $0x68,%rax
  40f94c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40f950:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
  40f954:	48 83 ec 08          	sub    $0x8,%rsp
  40f958:	53                   	push   %rbx
  40f959:	45 89 e9             	mov    %r13d,%r9d
  40f95c:	4d 89 e0             	mov    %r12,%r8
  40f95f:	48 89 d1             	mov    %rdx,%rcx
  40f962:	48 89 f2             	mov    %rsi,%rdx
  40f965:	48 89 c6             	mov    %rax,%rsi
  40f968:	e8 75 3e ff ff       	callq  4037e2 <TableSet>
  40f96d:	48 83 c4 10          	add    $0x10,%rsp
  40f971:	85 c0                	test   %eax,%eax
  40f973:	75 1a                	jne    40f98f <VariableDefinePlatformVar+0x130>
  40f975:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  40f979:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40f97d:	be 8f 8e 41 00       	mov    $0x418e8f,%esi
  40f982:	48 89 c7             	mov    %rax,%rdi
  40f985:	b8 00 00 00 00       	mov    $0x0,%eax
  40f98a:	e8 4f 0d 00 00       	callq  4106de <ProgramFail>
  40f98f:	90                   	nop
  40f990:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
  40f994:	5b                   	pop    %rbx
  40f995:	41 5c                	pop    %r12
  40f997:	41 5d                	pop    %r13
  40f999:	5d                   	pop    %rbp
  40f99a:	c3                   	retq   

000000000040f99b <VariableStackPop>:
  40f99b:	55                   	push   %rbp
  40f99c:	48 89 e5             	mov    %rsp,%rbp
  40f99f:	48 83 ec 20          	sub    $0x20,%rsp
  40f9a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40f9a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40f9ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f9af:	0f b6 40 18          	movzbl 0x18(%rax),%eax
  40f9b3:	84 c0                	test   %al,%al
  40f9b5:	74 47                	je     40f9fe <VariableStackPop+0x63>
  40f9b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f9bb:	48 8b 40 08          	mov    0x8(%rax),%rax
  40f9bf:	48 85 c0             	test   %rax,%rax
  40f9c2:	74 1a                	je     40f9de <VariableStackPop+0x43>
  40f9c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40f9c8:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40f9cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f9d0:	48 8b 00             	mov    (%rax),%rax
  40f9d3:	48 89 d6             	mov    %rdx,%rsi
  40f9d6:	48 89 c7             	mov    %rax,%rdi
  40f9d9:	e8 29 d7 ff ff       	callq  40d107 <HeapFreeMem>
  40f9de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40f9e2:	48 8b 00             	mov    (%rax),%rax
  40f9e5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40f9e9:	ba 28 00 00 00       	mov    $0x28,%edx
  40f9ee:	48 89 ce             	mov    %rcx,%rsi
  40f9f1:	48 89 c7             	mov    %rax,%rdi
  40f9f4:	e8 95 d5 ff ff       	callq  40cf8e <HeapPopStack>
  40f9f9:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40f9fc:	eb 5b                	jmp    40fa59 <VariableStackPop+0xbe>
  40f9fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fa02:	0f b6 40 19          	movzbl 0x19(%rax),%eax
  40fa06:	84 c0                	test   %al,%al
  40fa08:	74 31                	je     40fa3b <VariableStackPop+0xa0>
  40fa0a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fa0e:	be 00 00 00 00       	mov    $0x0,%esi
  40fa13:	48 89 c7             	mov    %rax,%rdi
  40fa16:	e8 28 d9 ff ff       	callq  40d343 <TypeSizeValue>
  40fa1b:	83 c0 28             	add    $0x28,%eax
  40fa1e:	89 c2                	mov    %eax,%edx
  40fa20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fa24:	48 8b 00             	mov    (%rax),%rax
  40fa27:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40fa2b:	48 89 ce             	mov    %rcx,%rsi
  40fa2e:	48 89 c7             	mov    %rax,%rdi
  40fa31:	e8 58 d5 ff ff       	callq  40cf8e <HeapPopStack>
  40fa36:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40fa39:	eb 1e                	jmp    40fa59 <VariableStackPop+0xbe>
  40fa3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fa3f:	48 8b 00             	mov    (%rax),%rax
  40fa42:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40fa46:	ba 28 00 00 00       	mov    $0x28,%edx
  40fa4b:	48 89 ce             	mov    %rcx,%rsi
  40fa4e:	48 89 c7             	mov    %rax,%rdi
  40fa51:	e8 38 d5 ff ff       	callq  40cf8e <HeapPopStack>
  40fa56:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40fa59:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40fa5d:	75 16                	jne    40fa75 <VariableStackPop+0xda>
  40fa5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fa63:	be e6 8e 41 00       	mov    $0x418ee6,%esi
  40fa68:	48 89 c7             	mov    %rax,%rdi
  40fa6b:	b8 00 00 00 00       	mov    $0x0,%eax
  40fa70:	e8 69 0c 00 00       	callq  4106de <ProgramFail>
  40fa75:	90                   	nop
  40fa76:	c9                   	leaveq 
  40fa77:	c3                   	retq   

000000000040fa78 <VariableStackFrameAdd>:
  40fa78:	55                   	push   %rbp
  40fa79:	48 89 e5             	mov    %rsp,%rbp
  40fa7c:	48 83 ec 30          	sub    $0x30,%rsp
  40fa80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fa84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40fa88:	89 55 dc             	mov    %edx,-0x24(%rbp)
  40fa8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fa8f:	48 8b 00             	mov    (%rax),%rax
  40fa92:	48 89 c7             	mov    %rax,%rdi
  40fa95:	e8 9e d5 ff ff       	callq  40d038 <HeapPushStackFrame>
  40fa9a:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40fa9d:	48 98                	cltq   
  40fa9f:	48 83 c0 1b          	add    $0x1b,%rax
  40faa3:	c1 e0 03             	shl    $0x3,%eax
  40faa6:	89 c2                	mov    %eax,%edx
  40faa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40faac:	48 8b 00             	mov    (%rax),%rax
  40faaf:	89 d6                	mov    %edx,%esi
  40fab1:	48 89 c7             	mov    %rax,%rdi
  40fab4:	e8 1e d4 ff ff       	callq  40ced7 <HeapAllocStack>
  40fab9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40fabd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40fac2:	75 16                	jne    40fada <VariableStackFrameAdd+0x62>
  40fac4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fac8:	be 30 8e 41 00       	mov    $0x418e30,%esi
  40facd:	48 89 c7             	mov    %rax,%rdi
  40fad0:	b8 00 00 00 00       	mov    $0x0,%eax
  40fad5:	e8 04 0c 00 00       	callq  4106de <ProgramFail>
  40fada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fade:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40fae2:	48 89 d6             	mov    %rdx,%rsi
  40fae5:	48 89 c7             	mov    %rax,%rdi
  40fae8:	e8 0c 80 ff ff       	callq  407af9 <ParserCopy>
  40faed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40faf1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40faf5:	48 89 50 48          	mov    %rdx,0x48(%rax)
  40faf9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  40fafd:	7e 0d                	jle    40fb0c <VariableStackFrameAdd+0x94>
  40faff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb03:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
  40fb0a:	eb 05                	jmp    40fb11 <VariableStackFrameAdd+0x99>
  40fb0c:	ba 00 00 00 00       	mov    $0x0,%edx
  40fb11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb15:	48 89 50 58          	mov    %rdx,0x58(%rax)
  40fb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb1d:	48 8d 70 78          	lea    0x78(%rax),%rsi
  40fb21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb25:	48 83 c0 68          	add    $0x68,%rax
  40fb29:	b9 00 00 00 00       	mov    $0x0,%ecx
  40fb2e:	ba 0b 00 00 00       	mov    $0xb,%edx
  40fb33:	48 89 c7             	mov    %rax,%rdi
  40fb36:	e8 ca 3b ff ff       	callq  403705 <TableInitTable>
  40fb3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fb3f:	48 8b 00             	mov    (%rax),%rax
  40fb42:	48 8b 90 08 0a 00 00 	mov    0xa08(%rax),%rdx
  40fb49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb4d:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
  40fb54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fb58:	48 8b 00             	mov    (%rax),%rax
  40fb5b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40fb5f:	48 89 90 08 0a 00 00 	mov    %rdx,0xa08(%rax)
  40fb66:	90                   	nop
  40fb67:	c9                   	leaveq 
  40fb68:	c3                   	retq   

000000000040fb69 <VariableStackFramePop>:
  40fb69:	55                   	push   %rbp
  40fb6a:	48 89 e5             	mov    %rsp,%rbp
  40fb6d:	48 83 ec 10          	sub    $0x10,%rsp
  40fb71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40fb75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb79:	48 8b 00             	mov    (%rax),%rax
  40fb7c:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40fb83:	48 85 c0             	test   %rax,%rax
  40fb86:	75 16                	jne    40fb9e <VariableStackFramePop+0x35>
  40fb88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fb8c:	be f8 8e 41 00       	mov    $0x418ef8,%esi
  40fb91:	48 89 c7             	mov    %rax,%rdi
  40fb94:	b8 00 00 00 00       	mov    $0x0,%eax
  40fb99:	e8 40 0b 00 00       	callq  4106de <ProgramFail>
  40fb9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fba2:	48 8b 00             	mov    (%rax),%rax
  40fba5:	48 8b 80 08 0a 00 00 	mov    0xa08(%rax),%rax
  40fbac:	48 89 c2             	mov    %rax,%rdx
  40fbaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fbb3:	48 89 d6             	mov    %rdx,%rsi
  40fbb6:	48 89 c7             	mov    %rax,%rdi
  40fbb9:	e8 3b 7f ff ff       	callq  407af9 <ParserCopy>
  40fbbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fbc2:	48 8b 00             	mov    (%rax),%rax
  40fbc5:	48 8b 90 08 0a 00 00 	mov    0xa08(%rax),%rdx
  40fbcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fbd0:	48 8b 00             	mov    (%rax),%rax
  40fbd3:	48 8b 92 d0 00 00 00 	mov    0xd0(%rdx),%rdx
  40fbda:	48 89 90 08 0a 00 00 	mov    %rdx,0xa08(%rax)
  40fbe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fbe5:	48 8b 00             	mov    (%rax),%rax
  40fbe8:	48 89 c7             	mov    %rax,%rdi
  40fbeb:	e8 9c d4 ff ff       	callq  40d08c <HeapPopStackFrame>
  40fbf0:	90                   	nop
  40fbf1:	c9                   	leaveq 
  40fbf2:	c3                   	retq   

000000000040fbf3 <VariableStringLiteralGet>:
  40fbf3:	55                   	push   %rbp
  40fbf4:	48 89 e5             	mov    %rsp,%rbp
  40fbf7:	48 83 ec 20          	sub    $0x20,%rsp
  40fbfb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40fbff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40fc03:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  40fc0a:	00 
  40fc0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fc0f:	48 8d b8 f0 06 00 00 	lea    0x6f0(%rax),%rdi
  40fc16:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  40fc1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fc1e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40fc24:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40fc2a:	b9 00 00 00 00       	mov    $0x0,%ecx
  40fc2f:	48 89 c6             	mov    %rax,%rsi
  40fc32:	e8 9f 3c ff ff       	callq  4038d6 <TableGet>
  40fc37:	85 c0                	test   %eax,%eax
  40fc39:	74 06                	je     40fc41 <VariableStringLiteralGet+0x4e>
  40fc3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fc3f:	eb 05                	jmp    40fc46 <VariableStringLiteralGet+0x53>
  40fc41:	b8 00 00 00 00       	mov    $0x0,%eax
  40fc46:	c9                   	leaveq 
  40fc47:	c3                   	retq   

000000000040fc48 <VariableStringLiteralDefine>:
  40fc48:	55                   	push   %rbp
  40fc49:	48 89 e5             	mov    %rsp,%rbp
  40fc4c:	48 83 ec 20          	sub    $0x20,%rsp
  40fc50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40fc54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40fc58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40fc5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fc60:	48 8d b0 f0 06 00 00 	lea    0x6f0(%rax),%rsi
  40fc67:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40fc6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  40fc6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fc73:	48 83 ec 08          	sub    $0x8,%rsp
  40fc77:	6a 00                	pushq  $0x0
  40fc79:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40fc7f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40fc85:	48 89 c7             	mov    %rax,%rdi
  40fc88:	e8 55 3b ff ff       	callq  4037e2 <TableSet>
  40fc8d:	48 83 c4 10          	add    $0x10,%rsp
  40fc91:	90                   	nop
  40fc92:	c9                   	leaveq 
  40fc93:	c3                   	retq   

000000000040fc94 <VariableDereferencePointer>:
  40fc94:	55                   	push   %rbp
  40fc95:	48 89 e5             	mov    %rsp,%rbp
  40fc98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40fc9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40fca0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  40fca4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
  40fca8:	4c 89 45 d8          	mov    %r8,-0x28(%rbp)
  40fcac:	4c 89 4d d0          	mov    %r9,-0x30(%rbp)
  40fcb0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40fcb5:	74 0b                	je     40fcc2 <VariableDereferencePointer+0x2e>
  40fcb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40fcbb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  40fcc2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40fcc7:	74 12                	je     40fcdb <VariableDereferencePointer+0x47>
  40fcc9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fccd:	48 8b 00             	mov    (%rax),%rax
  40fcd0:	48 8b 50 18          	mov    0x18(%rax),%rdx
  40fcd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40fcd8:	48 89 10             	mov    %rdx,(%rax)
  40fcdb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40fce0:	74 0a                	je     40fcec <VariableDereferencePointer+0x58>
  40fce2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40fce6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  40fcec:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  40fcf1:	74 0a                	je     40fcfd <VariableDereferencePointer+0x69>
  40fcf3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40fcf7:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  40fcfd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fd01:	48 8b 40 08          	mov    0x8(%rax),%rax
  40fd05:	48 8b 00             	mov    (%rax),%rax
  40fd08:	5d                   	pop    %rbp
  40fd09:	c3                   	retq   

000000000040fd0a <LibraryInit>:
  40fd0a:	55                   	push   %rbp
  40fd0b:	48 89 e5             	mov    %rsp,%rbp
  40fd0e:	48 83 ec 10          	sub    $0x10,%rsp
  40fd12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40fd16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd1a:	be 64 8f 41 00       	mov    $0x418f64,%esi
  40fd1f:	48 89 c7             	mov    %rax,%rdi
  40fd22:	e8 da 3e ff ff       	callq  403c01 <TableStrRegister>
  40fd27:	48 89 c2             	mov    %rax,%rdx
  40fd2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd2e:	48 89 90 10 10 00 00 	mov    %rdx,0x1010(%rax)
  40fd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd39:	48 8d 88 10 10 00 00 	lea    0x1010(%rax),%rcx
  40fd40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd44:	48 8b 90 48 0e 00 00 	mov    0xe48(%rax),%rdx
  40fd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd4f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40fd55:	49 89 c8             	mov    %rcx,%r8
  40fd58:	48 89 d1             	mov    %rdx,%rcx
  40fd5b:	ba 69 8f 41 00       	mov    $0x418f69,%edx
  40fd60:	be 00 00 00 00       	mov    $0x0,%esi
  40fd65:	48 89 c7             	mov    %rax,%rdi
  40fd68:	e8 f2 fa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  40fd6d:	b8 60 8f 41 00       	mov    $0x418f60,%eax
  40fd72:	0f b6 00             	movzbl (%rax),%eax
  40fd75:	84 c0                	test   %al,%al
  40fd77:	0f 94 c0             	sete   %al
  40fd7a:	0f b6 c0             	movzbl %al,%eax
  40fd7d:	89 05 51 0b 21 00    	mov    %eax,0x210b51(%rip)        # 6208d4 <BigEndian>
  40fd83:	b8 60 8f 41 00       	mov    $0x418f60,%eax
  40fd88:	0f b6 00             	movzbl (%rax),%eax
  40fd8b:	3c 01                	cmp    $0x1,%al
  40fd8d:	0f 94 c0             	sete   %al
  40fd90:	0f b6 c0             	movzbl %al,%eax
  40fd93:	89 05 3f 0b 21 00    	mov    %eax,0x210b3f(%rip)        # 6208d8 <LittleEndian>
  40fd99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fd9d:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  40fda4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fda8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40fdae:	41 b8 d4 08 62 00    	mov    $0x6208d4,%r8d
  40fdb4:	48 89 d1             	mov    %rdx,%rcx
  40fdb7:	ba 77 8f 41 00       	mov    $0x418f77,%edx
  40fdbc:	be 00 00 00 00       	mov    $0x0,%esi
  40fdc1:	48 89 c7             	mov    %rax,%rdi
  40fdc4:	e8 96 fa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  40fdc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fdcd:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  40fdd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40fdd8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  40fdde:	41 b8 d8 08 62 00    	mov    $0x6208d8,%r8d
  40fde4:	48 89 d1             	mov    %rdx,%rcx
  40fde7:	ba 82 8f 41 00       	mov    $0x418f82,%edx
  40fdec:	be 00 00 00 00       	mov    $0x0,%esi
  40fdf1:	48 89 c7             	mov    %rax,%rdi
  40fdf4:	e8 66 fa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  40fdf9:	90                   	nop
  40fdfa:	c9                   	leaveq 
  40fdfb:	c3                   	retq   

000000000040fdfc <LibraryAdd>:
  40fdfc:	55                   	push   %rbp
  40fdfd:	48 89 e5             	mov    %rsp,%rbp
  40fe00:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
  40fe07:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  40fe0e:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  40fe15:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  40fe1c:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  40fe23:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40fe2a:	be 90 8f 41 00       	mov    $0x418f90,%esi
  40fe2f:	48 89 c7             	mov    %rax,%rdi
  40fe32:	e8 ca 3d ff ff       	callq  403c01 <TableStrRegister>
  40fe37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40fe3b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40fe42:	e9 16 01 00 00       	jmpq   40ff5d <LibraryAdd+0x161>
  40fe47:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fe4a:	48 98                	cltq   
  40fe4c:	48 c1 e0 04          	shl    $0x4,%rax
  40fe50:	48 89 c2             	mov    %rax,%rdx
  40fe53:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40fe5a:	48 01 d0             	add    %rdx,%rax
  40fe5d:	48 8b 40 08          	mov    0x8(%rax),%rax
  40fe61:	48 89 c7             	mov    %rax,%rdi
  40fe64:	e8 97 2c ff ff       	callq  402b00 <strlen@plt>
  40fe69:	89 c1                	mov    %eax,%ecx
  40fe6b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fe6e:	48 98                	cltq   
  40fe70:	48 c1 e0 04          	shl    $0x4,%rax
  40fe74:	48 89 c2             	mov    %rax,%rdx
  40fe77:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40fe7e:	48 01 d0             	add    %rdx,%rax
  40fe81:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40fe85:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  40fe89:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40fe90:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  40fe96:	48 89 c7             	mov    %rax,%rdi
  40fe99:	e8 81 57 ff ff       	callq  40561f <LexAnalyse>
  40fe9e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40fea2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40fea5:	48 98                	cltq   
  40fea7:	48 c1 e0 04          	shl    $0x4,%rax
  40feab:	48 89 c2             	mov    %rax,%rdx
  40feae:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40feb5:	48 01 d0             	add    %rdx,%rax
  40feb8:	48 8b 50 08          	mov    0x8(%rax),%rdx
  40febc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40fec0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40fec4:	48 8b b5 78 ff ff ff 	mov    -0x88(%rbp),%rsi
  40fecb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40fecf:	48 83 ec 08          	sub    $0x8,%rsp
  40fed3:	6a 00                	pushq  $0x0
  40fed5:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  40fedb:	49 89 f8             	mov    %rdi,%r8
  40fede:	48 89 c7             	mov    %rax,%rdi
  40fee1:	e8 b2 57 ff ff       	callq  405698 <LexInitParser>
  40fee6:	48 83 c4 10          	add    $0x10,%rsp
  40feea:	48 8d 55 88          	lea    -0x78(%rbp),%rdx
  40feee:	48 8d 75 80          	lea    -0x80(%rbp),%rsi
  40fef2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40fef6:	b9 00 00 00 00       	mov    $0x0,%ecx
  40fefb:	48 89 c7             	mov    %rax,%rdi
  40fefe:	e8 23 e9 ff ff       	callq  40e826 <TypeParse>
  40ff03:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  40ff07:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
  40ff0b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40ff0f:	48 89 ce             	mov    %rcx,%rsi
  40ff12:	48 89 c7             	mov    %rax,%rdi
  40ff15:	e8 77 6a ff ff       	callq  406991 <ParseFunctionDefinition>
  40ff1a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40ff1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40ff21:	48 98                	cltq   
  40ff23:	48 c1 e0 04          	shl    $0x4,%rax
  40ff27:	48 89 c2             	mov    %rax,%rdx
  40ff2a:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40ff31:	48 01 c2             	add    %rax,%rdx
  40ff34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40ff38:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ff3c:	48 8b 12             	mov    (%rdx),%rdx
  40ff3f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40ff43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  40ff47:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  40ff4e:	48 89 d6             	mov    %rdx,%rsi
  40ff51:	48 89 c7             	mov    %rax,%rdi
  40ff54:	e8 ae d1 ff ff       	callq  40d107 <HeapFreeMem>
  40ff59:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  40ff5d:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40ff60:	48 98                	cltq   
  40ff62:	48 c1 e0 04          	shl    $0x4,%rax
  40ff66:	48 89 c2             	mov    %rax,%rdx
  40ff69:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
  40ff70:	48 01 d0             	add    %rdx,%rax
  40ff73:	48 8b 40 08          	mov    0x8(%rax),%rax
  40ff77:	48 85 c0             	test   %rax,%rax
  40ff7a:	0f 85 c7 fe ff ff    	jne    40fe47 <LibraryAdd+0x4b>
  40ff80:	90                   	nop
  40ff81:	c9                   	leaveq 
  40ff82:	c3                   	retq   

000000000040ff83 <PrintType>:
  40ff83:	55                   	push   %rbp
  40ff84:	48 89 e5             	mov    %rsp,%rbp
  40ff87:	48 83 ec 10          	sub    $0x10,%rsp
  40ff8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40ff8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40ff93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40ff97:	8b 00                	mov    (%rax),%eax
  40ff99:	83 f8 11             	cmp    $0x11,%eax
  40ff9c:	0f 87 3c 02 00 00    	ja     4101de <PrintType+0x25b>
  40ffa2:	89 c0                	mov    %eax,%eax
  40ffa4:	48 8b 04 c5 28 90 41 	mov    0x419028(,%rax,8),%rax
  40ffab:	00 
  40ffac:	ff e0                	jmpq   *%rax
  40ffae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ffb2:	48 89 c6             	mov    %rax,%rsi
  40ffb5:	bf 9a 8f 41 00       	mov    $0x418f9a,%edi
  40ffba:	e8 e6 3a 00 00       	callq  413aa5 <PrintStr>
  40ffbf:	e9 1a 02 00 00       	jmpq   4101de <PrintType+0x25b>
  40ffc4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ffc8:	48 89 c6             	mov    %rax,%rsi
  40ffcb:	bf 9f 8f 41 00       	mov    $0x418f9f,%edi
  40ffd0:	e8 d0 3a 00 00       	callq  413aa5 <PrintStr>
  40ffd5:	e9 04 02 00 00       	jmpq   4101de <PrintType+0x25b>
  40ffda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40ffde:	48 89 c6             	mov    %rax,%rsi
  40ffe1:	bf a3 8f 41 00       	mov    $0x418fa3,%edi
  40ffe6:	e8 ba 3a 00 00       	callq  413aa5 <PrintStr>
  40ffeb:	e9 ee 01 00 00       	jmpq   4101de <PrintType+0x25b>
  40fff0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40fff4:	48 89 c6             	mov    %rax,%rsi
  40fff7:	bf a9 8f 41 00       	mov    $0x418fa9,%edi
  40fffc:	e8 a4 3a 00 00       	callq  413aa5 <PrintStr>
  410001:	e9 d8 01 00 00       	jmpq   4101de <PrintType+0x25b>
  410006:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41000a:	48 89 c6             	mov    %rax,%rsi
  41000d:	bf ae 8f 41 00       	mov    $0x418fae,%edi
  410012:	e8 8e 3a 00 00       	callq  413aa5 <PrintStr>
  410017:	e9 c2 01 00 00       	jmpq   4101de <PrintType+0x25b>
  41001c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410020:	48 89 c6             	mov    %rax,%rsi
  410023:	bf b3 8f 41 00       	mov    $0x418fb3,%edi
  410028:	e8 78 3a 00 00       	callq  413aa5 <PrintStr>
  41002d:	e9 ac 01 00 00       	jmpq   4101de <PrintType+0x25b>
  410032:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410036:	48 89 c6             	mov    %rax,%rsi
  410039:	bf c0 8f 41 00       	mov    $0x418fc0,%edi
  41003e:	e8 62 3a 00 00       	callq  413aa5 <PrintStr>
  410043:	e9 96 01 00 00       	jmpq   4101de <PrintType+0x25b>
  410048:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41004c:	48 89 c6             	mov    %rax,%rsi
  41004f:	bf cf 8f 41 00       	mov    $0x418fcf,%edi
  410054:	e8 4c 3a 00 00       	callq  413aa5 <PrintStr>
  410059:	e9 80 01 00 00       	jmpq   4101de <PrintType+0x25b>
  41005e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410062:	48 89 c6             	mov    %rax,%rsi
  410065:	bf dd 8f 41 00       	mov    $0x418fdd,%edi
  41006a:	e8 36 3a 00 00       	callq  413aa5 <PrintStr>
  41006f:	e9 6a 01 00 00       	jmpq   4101de <PrintType+0x25b>
  410074:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410078:	48 89 c6             	mov    %rax,%rsi
  41007b:	bf eb 8f 41 00       	mov    $0x418feb,%edi
  410080:	e8 20 3a 00 00       	callq  413aa5 <PrintStr>
  410085:	e9 54 01 00 00       	jmpq   4101de <PrintType+0x25b>
  41008a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41008e:	48 89 c6             	mov    %rax,%rsi
  410091:	bf f4 8f 41 00       	mov    $0x418ff4,%edi
  410096:	e8 0a 3a 00 00       	callq  413aa5 <PrintStr>
  41009b:	e9 3e 01 00 00       	jmpq   4101de <PrintType+0x25b>
  4100a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4100a4:	48 8b 40 18          	mov    0x18(%rax),%rax
  4100a8:	48 85 c0             	test   %rax,%rax
  4100ab:	74 17                	je     4100c4 <PrintType+0x141>
  4100ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4100b1:	48 8b 40 18          	mov    0x18(%rax),%rax
  4100b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4100b9:	48 89 d6             	mov    %rdx,%rsi
  4100bc:	48 89 c7             	mov    %rax,%rdi
  4100bf:	e8 bf fe ff ff       	callq  40ff83 <PrintType>
  4100c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4100c8:	48 89 c6             	mov    %rax,%rsi
  4100cb:	bf 2a 00 00 00       	mov    $0x2a,%edi
  4100d0:	e8 7d 39 00 00       	callq  413a52 <PrintCh>
  4100d5:	e9 04 01 00 00       	jmpq   4101de <PrintType+0x25b>
  4100da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4100de:	48 8b 40 18          	mov    0x18(%rax),%rax
  4100e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4100e6:	48 89 d6             	mov    %rdx,%rsi
  4100e9:	48 89 c7             	mov    %rax,%rdi
  4100ec:	e8 92 fe ff ff       	callq  40ff83 <PrintType>
  4100f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4100f5:	48 89 c6             	mov    %rax,%rsi
  4100f8:	bf 5b 00 00 00       	mov    $0x5b,%edi
  4100fd:	e8 50 39 00 00       	callq  413a52 <PrintCh>
  410102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410106:	8b 40 04             	mov    0x4(%rax),%eax
  410109:	85 c0                	test   %eax,%eax
  41010b:	74 18                	je     410125 <PrintType+0x1a2>
  41010d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410111:	8b 40 04             	mov    0x4(%rax),%eax
  410114:	48 98                	cltq   
  410116:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  41011a:	48 89 d6             	mov    %rdx,%rsi
  41011d:	48 89 c7             	mov    %rax,%rdi
  410120:	e8 53 39 00 00       	callq  413a78 <PrintSimpleInt>
  410125:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410129:	48 89 c6             	mov    %rax,%rsi
  41012c:	bf 5d 00 00 00       	mov    $0x5d,%edi
  410131:	e8 1c 39 00 00       	callq  413a52 <PrintCh>
  410136:	e9 a3 00 00 00       	jmpq   4101de <PrintType+0x25b>
  41013b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41013f:	48 89 c6             	mov    %rax,%rsi
  410142:	bf fa 8f 41 00       	mov    $0x418ffa,%edi
  410147:	e8 59 39 00 00       	callq  413aa5 <PrintStr>
  41014c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410150:	48 8b 40 10          	mov    0x10(%rax),%rax
  410154:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  410158:	48 89 d6             	mov    %rdx,%rsi
  41015b:	48 89 c7             	mov    %rax,%rdi
  41015e:	e8 42 39 00 00       	callq  413aa5 <PrintStr>
  410163:	eb 79                	jmp    4101de <PrintType+0x25b>
  410165:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410169:	48 89 c6             	mov    %rax,%rsi
  41016c:	bf 02 90 41 00       	mov    $0x419002,%edi
  410171:	e8 2f 39 00 00       	callq  413aa5 <PrintStr>
  410176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41017a:	48 8b 40 10          	mov    0x10(%rax),%rax
  41017e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  410182:	48 89 d6             	mov    %rdx,%rsi
  410185:	48 89 c7             	mov    %rax,%rdi
  410188:	e8 18 39 00 00       	callq  413aa5 <PrintStr>
  41018d:	eb 4f                	jmp    4101de <PrintType+0x25b>
  41018f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  410193:	48 89 c6             	mov    %rax,%rsi
  410196:	bf 09 90 41 00       	mov    $0x419009,%edi
  41019b:	e8 05 39 00 00       	callq  413aa5 <PrintStr>
  4101a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4101a4:	48 8b 40 10          	mov    0x10(%rax),%rax
  4101a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4101ac:	48 89 d6             	mov    %rdx,%rsi
  4101af:	48 89 c7             	mov    %rax,%rdi
  4101b2:	e8 ee 38 00 00       	callq  413aa5 <PrintStr>
  4101b7:	eb 25                	jmp    4101de <PrintType+0x25b>
  4101b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4101bd:	48 89 c6             	mov    %rax,%rsi
  4101c0:	bf 0f 90 41 00       	mov    $0x41900f,%edi
  4101c5:	e8 db 38 00 00       	callq  413aa5 <PrintStr>
  4101ca:	eb 12                	jmp    4101de <PrintType+0x25b>
  4101cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4101d0:	48 89 c6             	mov    %rax,%rsi
  4101d3:	bf 1b 90 41 00       	mov    $0x41901b,%edi
  4101d8:	e8 c8 38 00 00       	callq  413aa5 <PrintStr>
  4101dd:	90                   	nop
  4101de:	90                   	nop
  4101df:	c9                   	leaveq 
  4101e0:	c3                   	retq   

00000000004101e1 <PicocInitialise>:
  4101e1:	55                   	push   %rbp
  4101e2:	48 89 e5             	mov    %rsp,%rbp
  4101e5:	48 83 ec 10          	sub    $0x10,%rsp
  4101e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4101ed:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4101f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4101f4:	ba 00 14 00 00       	mov    $0x1400,%edx
  4101f9:	be 00 00 00 00       	mov    $0x0,%esi
  4101fe:	48 89 c7             	mov    %rax,%rdi
  410201:	e8 5a 2a ff ff       	callq  402c60 <memset@plt>
  410206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41020a:	48 89 c7             	mov    %rax,%rdi
  41020d:	e8 e9 14 00 00       	callq  4116fb <PlatformInit>
  410212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410216:	48 89 c7             	mov    %rax,%rdi
  410219:	e8 90 18 00 00       	callq  411aae <BasicIOInit>
  41021e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  410221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410225:	89 d6                	mov    %edx,%esi
  410227:	48 89 c7             	mov    %rax,%rdi
  41022a:	e8 4f cb ff ff       	callq  40cd7e <HeapInit>
  41022f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410233:	48 89 c7             	mov    %rax,%rdi
  410236:	e8 10 34 ff ff       	callq  40364b <TableInit>
  41023b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41023f:	48 89 c7             	mov    %rax,%rdi
  410242:	e8 8e e6 ff ff       	callq  40e8d5 <VariableInit>
  410247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41024b:	48 89 c7             	mov    %rax,%rdi
  41024e:	e8 5c 3a ff ff       	callq  403caf <LexInit>
  410253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410257:	48 89 c7             	mov    %rax,%rdi
  41025a:	e8 48 d2 ff ff       	callq  40d4a7 <TypeInit>
  41025f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410263:	48 89 c7             	mov    %rax,%rdi
  410266:	e8 40 0c 00 00       	callq  410eab <IncludeInit>
  41026b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41026f:	48 89 c7             	mov    %rax,%rdi
  410272:	e8 93 fa ff ff       	callq  40fd0a <LibraryInit>
  410277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41027b:	48 89 c7             	mov    %rax,%rdi
  41027e:	e8 fb 17 00 00       	callq  411a7e <PlatformLibraryInit>
  410283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410287:	48 89 c7             	mov    %rax,%rdi
  41028a:	b8 00 00 00 00       	mov    $0x0,%eax
  41028f:	e8 b9 0f 00 00       	callq  41124d <DebugInit>
  410294:	90                   	nop
  410295:	c9                   	leaveq 
  410296:	c3                   	retq   

0000000000410297 <PicocCleanup>:
  410297:	55                   	push   %rbp
  410298:	48 89 e5             	mov    %rsp,%rbp
  41029b:	48 83 ec 10          	sub    $0x10,%rsp
  41029f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4102a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102a7:	48 89 c7             	mov    %rax,%rdi
  4102aa:	b8 00 00 00 00       	mov    $0x0,%eax
  4102af:	e8 dd 0f 00 00       	callq  411291 <DebugCleanup>
  4102b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102b8:	48 89 c7             	mov    %rax,%rdi
  4102bb:	e8 02 0d 00 00       	callq  410fc2 <IncludeCleanup>
  4102c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102c4:	48 89 c7             	mov    %rax,%rdi
  4102c7:	e8 49 65 ff ff       	callq  406815 <ParseCleanup>
  4102cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102d0:	48 89 c7             	mov    %rax,%rdi
  4102d3:	e8 eb 3a ff ff       	callq  403dc3 <LexCleanup>
  4102d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102dc:	48 89 c7             	mov    %rax,%rdi
  4102df:	e8 da e7 ff ff       	callq  40eabe <VariableCleanup>
  4102e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102e8:	48 89 c7             	mov    %rax,%rdi
  4102eb:	e8 e3 d5 ff ff       	callq  40d8d3 <TypeCleanup>
  4102f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4102f4:	48 89 c7             	mov    %rax,%rdi
  4102f7:	e8 38 39 ff ff       	callq  403c34 <TableStrFree>
  4102fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410300:	48 89 c7             	mov    %rax,%rdi
  410303:	e8 ad cb ff ff       	callq  40ceb5 <HeapCleanup>
  410308:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41030c:	48 89 c7             	mov    %rax,%rdi
  41030f:	e8 10 14 00 00       	callq  411724 <PlatformCleanup>
  410314:	90                   	nop
  410315:	c9                   	leaveq 
  410316:	c3                   	retq   

0000000000410317 <PicocCallMain>:
  410317:	55                   	push   %rbp
  410318:	48 89 e5             	mov    %rsp,%rbp
  41031b:	48 83 ec 30          	sub    $0x30,%rsp
  41031f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410323:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  410326:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41032a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  410331:	00 
  410332:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410336:	be b8 90 41 00       	mov    $0x4190b8,%esi
  41033b:	48 89 c7             	mov    %rax,%rdi
  41033e:	e8 be 38 ff ff       	callq  403c01 <TableStrRegister>
  410343:	48 89 c2             	mov    %rax,%rdx
  410346:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41034a:	48 89 d6             	mov    %rdx,%rsi
  41034d:	48 89 c7             	mov    %rax,%rdi
  410350:	e8 aa f3 ff ff       	callq  40f6ff <VariableDefined>
  410355:	85 c0                	test   %eax,%eax
  410357:	75 16                	jne    41036f <PicocCallMain+0x58>
  410359:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41035d:	be bd 90 41 00       	mov    $0x4190bd,%esi
  410362:	48 89 c7             	mov    %rax,%rdi
  410365:	b8 00 00 00 00       	mov    $0x0,%eax
  41036a:	e8 aa 04 00 00       	callq  410819 <ProgramFailNoParser>
  41036f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410373:	be b8 90 41 00       	mov    $0x4190b8,%esi
  410378:	48 89 c7             	mov    %rax,%rdi
  41037b:	e8 81 38 ff ff       	callq  403c01 <TableStrRegister>
  410380:	48 89 c6             	mov    %rax,%rsi
  410383:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
  410387:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41038b:	48 89 d1             	mov    %rdx,%rcx
  41038e:	48 89 f2             	mov    %rsi,%rdx
  410391:	be 00 00 00 00       	mov    $0x0,%esi
  410396:	48 89 c7             	mov    %rax,%rdi
  410399:	e8 ec f3 ff ff       	callq  40f78a <VariableGet>
  41039e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4103a2:	48 8b 00             	mov    (%rax),%rax
  4103a5:	8b 00                	mov    (%rax),%eax
  4103a7:	83 f8 09             	cmp    $0x9,%eax
  4103aa:	74 16                	je     4103c2 <PicocCallMain+0xab>
  4103ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4103b0:	be d8 90 41 00       	mov    $0x4190d8,%esi
  4103b5:	48 89 c7             	mov    %rax,%rdi
  4103b8:	b8 00 00 00 00       	mov    $0x0,%eax
  4103bd:	e8 57 04 00 00       	callq  410819 <ProgramFailNoParser>
  4103c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4103c6:	48 8b 40 08          	mov    0x8(%rax),%rax
  4103ca:	8b 40 08             	mov    0x8(%rax),%eax
  4103cd:	85 c0                	test   %eax,%eax
  4103cf:	74 62                	je     410433 <PicocCallMain+0x11c>
  4103d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4103d5:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4103dc:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
  4103e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4103e4:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4103ea:	49 89 c8             	mov    %rcx,%r8
  4103ed:	48 89 d1             	mov    %rdx,%rcx
  4103f0:	ba ff 90 41 00       	mov    $0x4190ff,%edx
  4103f5:	be 00 00 00 00       	mov    $0x0,%esi
  4103fa:	48 89 c7             	mov    %rax,%rdi
  4103fd:	e8 5d f4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  410402:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410406:	48 8b 90 50 0e 00 00 	mov    0xe50(%rax),%rdx
  41040d:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
  410411:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410415:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  41041b:	49 89 c8             	mov    %rcx,%r8
  41041e:	48 89 d1             	mov    %rdx,%rcx
  410421:	ba 06 91 41 00       	mov    $0x419106,%edx
  410426:	be 00 00 00 00       	mov    $0x0,%esi
  41042b:	48 89 c7             	mov    %rax,%rdi
  41042e:	e8 2c f4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  410433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410437:	48 8b 40 08          	mov    0x8(%rax),%rax
  41043b:	48 8b 00             	mov    (%rax),%rax
  41043e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410442:	48 81 c2 c8 0c 00 00 	add    $0xcc8,%rdx
  410449:	48 39 d0             	cmp    %rdx,%rax
  41044c:	75 77                	jne    4104c5 <PicocCallMain+0x1ae>
  41044e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410452:	48 8b 40 08          	mov    0x8(%rax),%rax
  410456:	8b 40 08             	mov    0x8(%rax),%eax
  410459:	85 c0                	test   %eax,%eax
  41045b:	75 34                	jne    410491 <PicocCallMain+0x17a>
  41045d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410461:	6a 01                	pushq  $0x1
  410463:	6a 00                	pushq  $0x0
  410465:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41046b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  410471:	b9 07 00 00 00       	mov    $0x7,%ecx
  410476:	ba 0d 91 41 00       	mov    $0x41910d,%edx
  41047b:	be 15 91 41 00       	mov    $0x419115,%esi
  410480:	48 89 c7             	mov    %rax,%rdi
  410483:	e8 f3 89 ff ff       	callq  408e7b <PicocParse>
  410488:	48 83 c4 10          	add    $0x10,%rsp
  41048c:	e9 db 00 00 00       	jmpq   41056c <PicocCallMain+0x255>
  410491:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410495:	6a 01                	pushq  $0x1
  410497:	6a 00                	pushq  $0x0
  410499:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41049f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4104a5:	b9 14 00 00 00       	mov    $0x14,%ecx
  4104aa:	ba 1d 91 41 00       	mov    $0x41911d,%edx
  4104af:	be 15 91 41 00       	mov    $0x419115,%esi
  4104b4:	48 89 c7             	mov    %rax,%rdi
  4104b7:	e8 bf 89 ff ff       	callq  408e7b <PicocParse>
  4104bc:	48 83 c4 10          	add    $0x10,%rsp
  4104c0:	e9 a7 00 00 00       	jmpq   41056c <PicocCallMain+0x255>
  4104c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4104c9:	48 8d 88 10 0a 00 00 	lea    0xa10(%rax),%rcx
  4104d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4104d4:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4104db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4104df:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  4104e5:	49 89 c8             	mov    %rcx,%r8
  4104e8:	48 89 d1             	mov    %rdx,%rcx
  4104eb:	ba 32 91 41 00       	mov    $0x419132,%edx
  4104f0:	be 00 00 00 00       	mov    $0x0,%esi
  4104f5:	48 89 c7             	mov    %rax,%rdi
  4104f8:	e8 62 f3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4104fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410501:	48 8b 40 08          	mov    0x8(%rax),%rax
  410505:	8b 40 08             	mov    0x8(%rax),%eax
  410508:	85 c0                	test   %eax,%eax
  41050a:	75 31                	jne    41053d <PicocCallMain+0x226>
  41050c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410510:	6a 01                	pushq  $0x1
  410512:	6a 00                	pushq  $0x0
  410514:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41051a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  410520:	b9 16 00 00 00       	mov    $0x16,%ecx
  410525:	ba 3f 91 41 00       	mov    $0x41913f,%edx
  41052a:	be 15 91 41 00       	mov    $0x419115,%esi
  41052f:	48 89 c7             	mov    %rax,%rdi
  410532:	e8 44 89 ff ff       	callq  408e7b <PicocParse>
  410537:	48 83 c4 10          	add    $0x10,%rsp
  41053b:	eb 2f                	jmp    41056c <PicocCallMain+0x255>
  41053d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410541:	6a 01                	pushq  $0x1
  410543:	6a 00                	pushq  $0x0
  410545:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  41054b:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  410551:	b9 23 00 00 00       	mov    $0x23,%ecx
  410556:	ba 58 91 41 00       	mov    $0x419158,%edx
  41055b:	be 15 91 41 00       	mov    $0x419115,%esi
  410560:	48 89 c7             	mov    %rax,%rdi
  410563:	e8 13 89 ff ff       	callq  408e7b <PicocParse>
  410568:	48 83 c4 10          	add    $0x10,%rsp
  41056c:	90                   	nop
  41056d:	c9                   	leaveq 
  41056e:	c3                   	retq   

000000000041056f <PrintSourceTextErrorLine>:
  41056f:	55                   	push   %rbp
  410570:	48 89 e5             	mov    %rsp,%rbp
  410573:	48 83 ec 40          	sub    $0x40,%rsp
  410577:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41057b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41057f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  410583:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  410586:	44 89 45 c0          	mov    %r8d,-0x40(%rbp)
  41058a:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  41058f:	0f 84 fa 00 00 00    	je     41068f <PrintSourceTextErrorLine+0x120>
  410595:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  410599:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41059d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4105a4:	eb 14                	jmp    4105ba <PrintSourceTextErrorLine+0x4b>
  4105a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105aa:	0f b6 00             	movzbl (%rax),%eax
  4105ad:	3c 0a                	cmp    $0xa,%al
  4105af:	75 04                	jne    4105b5 <PrintSourceTextErrorLine+0x46>
  4105b1:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  4105b5:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  4105ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105be:	0f b6 00             	movzbl (%rax),%eax
  4105c1:	84 c0                	test   %al,%al
  4105c3:	74 08                	je     4105cd <PrintSourceTextErrorLine+0x5e>
  4105c5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4105c8:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
  4105cb:	7c d9                	jl     4105a6 <PrintSourceTextErrorLine+0x37>
  4105cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4105d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4105d5:	eb 1d                	jmp    4105f4 <PrintSourceTextErrorLine+0x85>
  4105d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4105db:	0f b6 00             	movzbl (%rax),%eax
  4105de:	0f be c0             	movsbl %al,%eax
  4105e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4105e5:	48 89 d6             	mov    %rdx,%rsi
  4105e8:	89 c7                	mov    %eax,%edi
  4105ea:	e8 63 34 00 00       	callq  413a52 <PrintCh>
  4105ef:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  4105f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4105f8:	0f b6 00             	movzbl (%rax),%eax
  4105fb:	3c 0a                	cmp    $0xa,%al
  4105fd:	74 0b                	je     41060a <PrintSourceTextErrorLine+0x9b>
  4105ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410603:	0f b6 00             	movzbl (%rax),%eax
  410606:	84 c0                	test   %al,%al
  410608:	75 cd                	jne    4105d7 <PrintSourceTextErrorLine+0x68>
  41060a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41060e:	48 89 c6             	mov    %rax,%rsi
  410611:	bf 0a 00 00 00       	mov    $0xa,%edi
  410616:	e8 37 34 00 00       	callq  413a52 <PrintCh>
  41061b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41061f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  410623:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  41062a:	eb 38                	jmp    410664 <PrintSourceTextErrorLine+0xf5>
  41062c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410630:	0f b6 00             	movzbl (%rax),%eax
  410633:	3c 09                	cmp    $0x9,%al
  410635:	75 13                	jne    41064a <PrintSourceTextErrorLine+0xdb>
  410637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41063b:	48 89 c6             	mov    %rax,%rsi
  41063e:	bf 09 00 00 00       	mov    $0x9,%edi
  410643:	e8 0a 34 00 00       	callq  413a52 <PrintCh>
  410648:	eb 11                	jmp    41065b <PrintSourceTextErrorLine+0xec>
  41064a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41064e:	48 89 c6             	mov    %rax,%rsi
  410651:	bf 20 00 00 00       	mov    $0x20,%edi
  410656:	e8 f7 33 00 00       	callq  413a52 <PrintCh>
  41065b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  410660:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  410664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410668:	0f b6 00             	movzbl (%rax),%eax
  41066b:	3c 0a                	cmp    $0xa,%al
  41066d:	74 49                	je     4106b8 <PrintSourceTextErrorLine+0x149>
  41066f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410673:	0f b6 00             	movzbl (%rax),%eax
  410676:	84 c0                	test   %al,%al
  410678:	74 3e                	je     4106b8 <PrintSourceTextErrorLine+0x149>
  41067a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  41067d:	3b 45 c0             	cmp    -0x40(%rbp),%eax
  410680:	7c aa                	jl     41062c <PrintSourceTextErrorLine+0xbd>
  410682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410686:	0f b6 00             	movzbl (%rax),%eax
  410689:	3c 20                	cmp    $0x20,%al
  41068b:	74 9f                	je     41062c <PrintSourceTextErrorLine+0xbd>
  41068d:	eb 29                	jmp    4106b8 <PrintSourceTextErrorLine+0x149>
  41068f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  410696:	eb 15                	jmp    4106ad <PrintSourceTextErrorLine+0x13e>
  410698:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41069c:	48 89 c6             	mov    %rax,%rsi
  41069f:	bf 20 00 00 00       	mov    $0x20,%edi
  4106a4:	e8 a9 33 00 00       	callq  413a52 <PrintCh>
  4106a9:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  4106ad:	8b 45 c0             	mov    -0x40(%rbp),%eax
  4106b0:	83 c0 07             	add    $0x7,%eax
  4106b3:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
  4106b6:	7c e0                	jl     410698 <PrintSourceTextErrorLine+0x129>
  4106b8:	8b 75 c0             	mov    -0x40(%rbp),%esi
  4106bb:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
  4106be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4106c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4106c6:	41 89 f0             	mov    %esi,%r8d
  4106c9:	be 7c 91 41 00       	mov    $0x41917c,%esi
  4106ce:	48 89 c7             	mov    %rax,%rdi
  4106d1:	b8 00 00 00 00       	mov    $0x0,%eax
  4106d6:	e8 75 04 00 00       	callq  410b50 <PlatformPrintf>
  4106db:	90                   	nop
  4106dc:	c9                   	leaveq 
  4106dd:	c3                   	retq   

00000000004106de <ProgramFail>:
  4106de:	55                   	push   %rbp
  4106df:	48 89 e5             	mov    %rsp,%rbp
  4106e2:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4106e9:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  4106f0:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  4106f7:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4106fe:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  410705:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  41070c:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  410713:	84 c0                	test   %al,%al
  410715:	74 20                	je     410737 <ProgramFail+0x59>
  410717:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  41071b:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  41071f:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  410723:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  410727:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  41072b:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  41072f:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  410733:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  410737:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41073e:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  410742:	0f bf f8             	movswl %ax,%edi
  410745:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41074c:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  410750:	0f bf c8             	movswl %ax,%ecx
  410753:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41075a:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41075e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410765:	48 8b 70 10          	mov    0x10(%rax),%rsi
  410769:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410770:	48 8b 00             	mov    (%rax),%rax
  410773:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  41077a:	41 89 f8             	mov    %edi,%r8d
  41077d:	48 89 c7             	mov    %rax,%rdi
  410780:	e8 ea fd ff ff       	callq  41056f <PrintSourceTextErrorLine>
  410785:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
  41078c:	00 00 00 
  41078f:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
  410796:	00 00 00 
  410799:	48 8d 45 10          	lea    0x10(%rbp),%rax
  41079d:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  4107a4:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4107ab:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  4107b2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4107b9:	48 8b 00             	mov    (%rax),%rax
  4107bc:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4107c3:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
  4107ca:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  4107d1:	48 89 ce             	mov    %rcx,%rsi
  4107d4:	48 89 c7             	mov    %rax,%rdi
  4107d7:	e8 1d 04 00 00       	callq  410bf9 <PlatformVPrintf>
  4107dc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4107e3:	48 8b 00             	mov    (%rax),%rax
  4107e6:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4107ed:	be 88 91 41 00       	mov    $0x419188,%esi
  4107f2:	48 89 c7             	mov    %rax,%rdi
  4107f5:	b8 00 00 00 00       	mov    $0x0,%eax
  4107fa:	e8 51 03 00 00       	callq  410b50 <PlatformPrintf>
  4107ff:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410806:	48 8b 00             	mov    (%rax),%rax
  410809:	be 01 00 00 00       	mov    $0x1,%esi
  41080e:	48 89 c7             	mov    %rax,%rdi
  410811:	e8 ba 11 00 00       	callq  4119d0 <PlatformExit>
  410816:	90                   	nop
  410817:	c9                   	leaveq 
  410818:	c3                   	retq   

0000000000410819 <ProgramFailNoParser>:
  410819:	55                   	push   %rbp
  41081a:	48 89 e5             	mov    %rsp,%rbp
  41081d:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  410824:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  41082b:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  410832:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  410839:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  410840:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  410847:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  41084e:	84 c0                	test   %al,%al
  410850:	74 20                	je     410872 <ProgramFailNoParser+0x59>
  410852:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  410856:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  41085a:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  41085e:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  410862:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  410866:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  41086a:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  41086e:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  410872:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
  410879:	00 00 00 
  41087c:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
  410883:	00 00 00 
  410886:	48 8d 45 10          	lea    0x10(%rbp),%rax
  41088a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  410891:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  410898:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  41089f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4108a6:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4108ad:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
  4108b4:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  4108bb:	48 89 ce             	mov    %rcx,%rsi
  4108be:	48 89 c7             	mov    %rax,%rdi
  4108c1:	e8 33 03 00 00       	callq  410bf9 <PlatformVPrintf>
  4108c6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4108cd:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4108d4:	be 88 91 41 00       	mov    $0x419188,%esi
  4108d9:	48 89 c7             	mov    %rax,%rdi
  4108dc:	b8 00 00 00 00       	mov    $0x0,%eax
  4108e1:	e8 6a 02 00 00       	callq  410b50 <PlatformPrintf>
  4108e6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  4108ed:	be 01 00 00 00       	mov    $0x1,%esi
  4108f2:	48 89 c7             	mov    %rax,%rdi
  4108f5:	e8 d6 10 00 00       	callq  4119d0 <PlatformExit>
  4108fa:	90                   	nop
  4108fb:	c9                   	leaveq 
  4108fc:	c3                   	retq   

00000000004108fd <AssignFail>:
  4108fd:	55                   	push   %rbp
  4108fe:	48 89 e5             	mov    %rsp,%rbp
  410901:	48 83 ec 40          	sub    $0x40,%rsp
  410905:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410909:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41090d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  410911:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  410915:	44 89 45 cc          	mov    %r8d,-0x34(%rbp)
  410919:	44 89 4d c8          	mov    %r9d,-0x38(%rbp)
  41091d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410921:	48 8b 00             	mov    (%rax),%rax
  410924:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  41092b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41092f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410933:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  410937:	0f bf f8             	movswl %ax,%edi
  41093a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41093e:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  410942:	0f bf c8             	movswl %ax,%ecx
  410945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410949:	48 8b 50 30          	mov    0x30(%rax),%rdx
  41094d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410951:	48 8b 70 10          	mov    0x10(%rax),%rsi
  410955:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410959:	48 8b 00             	mov    (%rax),%rax
  41095c:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  410963:	41 89 f8             	mov    %edi,%r8d
  410966:	48 89 c7             	mov    %rax,%rdi
  410969:	e8 01 fc ff ff       	callq  41056f <PrintSourceTextErrorLine>
  41096e:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
  410973:	75 07                	jne    41097c <AssignFail+0x7f>
  410975:	ba 8a 91 41 00       	mov    $0x41918a,%edx
  41097a:	eb 05                	jmp    410981 <AssignFail+0x84>
  41097c:	ba 91 91 41 00       	mov    $0x419191,%edx
  410981:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410985:	be 95 91 41 00       	mov    $0x419195,%esi
  41098a:	48 89 c7             	mov    %rax,%rdi
  41098d:	b8 00 00 00 00       	mov    $0x0,%eax
  410992:	e8 b9 01 00 00       	callq  410b50 <PlatformPrintf>
  410997:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  41099c:	74 1f                	je     4109bd <AssignFail+0xc0>
  41099e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
  4109a2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4109a6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4109aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4109ae:	48 89 c7             	mov    %rax,%rdi
  4109b1:	b8 00 00 00 00       	mov    $0x0,%eax
  4109b6:	e8 95 01 00 00       	callq  410b50 <PlatformPrintf>
  4109bb:	eb 1b                	jmp    4109d8 <AssignFail+0xdb>
  4109bd:	8b 4d c8             	mov    -0x38(%rbp),%ecx
  4109c0:	8b 55 cc             	mov    -0x34(%rbp),%edx
  4109c3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4109c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4109cb:	48 89 c7             	mov    %rax,%rdi
  4109ce:	b8 00 00 00 00       	mov    $0x0,%eax
  4109d3:	e8 78 01 00 00       	callq  410b50 <PlatformPrintf>
  4109d8:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
  4109dd:	74 1d                	je     4109fc <AssignFail+0xff>
  4109df:	8b 55 18             	mov    0x18(%rbp),%edx
  4109e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4109e6:	48 8b 4d 10          	mov    0x10(%rbp),%rcx
  4109ea:	be a0 91 41 00       	mov    $0x4191a0,%esi
  4109ef:	48 89 c7             	mov    %rax,%rdi
  4109f2:	b8 00 00 00 00       	mov    $0x0,%eax
  4109f7:	e8 54 01 00 00       	callq  410b50 <PlatformPrintf>
  4109fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410a00:	be 88 91 41 00       	mov    $0x419188,%esi
  410a05:	48 89 c7             	mov    %rax,%rdi
  410a08:	b8 00 00 00 00       	mov    $0x0,%eax
  410a0d:	e8 3e 01 00 00       	callq  410b50 <PlatformPrintf>
  410a12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410a16:	48 8b 00             	mov    (%rax),%rax
  410a19:	be 01 00 00 00       	mov    $0x1,%esi
  410a1e:	48 89 c7             	mov    %rax,%rdi
  410a21:	e8 aa 0f 00 00       	callq  4119d0 <PlatformExit>
  410a26:	90                   	nop
  410a27:	c9                   	leaveq 
  410a28:	c3                   	retq   

0000000000410a29 <LexFail>:
  410a29:	55                   	push   %rbp
  410a2a:	48 89 e5             	mov    %rsp,%rbp
  410a2d:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
  410a34:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  410a3b:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  410a42:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
  410a49:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  410a50:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  410a57:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  410a5e:	84 c0                	test   %al,%al
  410a60:	74 20                	je     410a82 <LexFail+0x59>
  410a62:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  410a66:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  410a6a:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  410a6e:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  410a72:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  410a76:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  410a7a:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  410a7e:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  410a82:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  410a89:	8b 78 1c             	mov    0x1c(%rax),%edi
  410a8c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  410a93:	8b 48 18             	mov    0x18(%rax),%ecx
  410a96:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  410a9d:	48 8b 50 20          	mov    0x20(%rax),%rdx
  410aa1:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  410aa8:	48 8b 70 10          	mov    0x10(%rax),%rsi
  410aac:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410ab3:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  410aba:	41 89 f8             	mov    %edi,%r8d
  410abd:	48 89 c7             	mov    %rax,%rdi
  410ac0:	e8 aa fa ff ff       	callq  41056f <PrintSourceTextErrorLine>
  410ac5:	c7 85 38 ff ff ff 18 	movl   $0x18,-0xc8(%rbp)
  410acc:	00 00 00 
  410acf:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
  410ad6:	00 00 00 
  410ad9:	48 8d 45 10          	lea    0x10(%rbp),%rax
  410add:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  410ae4:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  410aeb:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  410af2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410af9:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  410b00:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
  410b07:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
  410b0e:	48 89 ce             	mov    %rcx,%rsi
  410b11:	48 89 c7             	mov    %rax,%rdi
  410b14:	e8 e0 00 00 00       	callq  410bf9 <PlatformVPrintf>
  410b19:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410b20:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  410b27:	be 88 91 41 00       	mov    $0x419188,%esi
  410b2c:	48 89 c7             	mov    %rax,%rdi
  410b2f:	b8 00 00 00 00       	mov    $0x0,%eax
  410b34:	e8 17 00 00 00       	callq  410b50 <PlatformPrintf>
  410b39:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410b40:	be 01 00 00 00       	mov    $0x1,%esi
  410b45:	48 89 c7             	mov    %rax,%rdi
  410b48:	e8 83 0e 00 00       	callq  4119d0 <PlatformExit>
  410b4d:	90                   	nop
  410b4e:	c9                   	leaveq 
  410b4f:	c3                   	retq   

0000000000410b50 <PlatformPrintf>:
  410b50:	55                   	push   %rbp
  410b51:	48 89 e5             	mov    %rsp,%rbp
  410b54:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  410b5b:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  410b62:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  410b69:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  410b70:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  410b77:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  410b7e:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  410b85:	84 c0                	test   %al,%al
  410b87:	74 20                	je     410ba9 <PlatformPrintf+0x59>
  410b89:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  410b8d:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
  410b91:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
  410b95:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
  410b99:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
  410b9d:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
  410ba1:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
  410ba5:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
  410ba9:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
  410bb0:	00 00 00 
  410bb3:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
  410bba:	00 00 00 
  410bbd:	48 8d 45 10          	lea    0x10(%rbp),%rax
  410bc1:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
  410bc8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  410bcf:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  410bd6:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
  410bdd:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
  410be4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  410beb:	48 89 ce             	mov    %rcx,%rsi
  410bee:	48 89 c7             	mov    %rax,%rdi
  410bf1:	e8 03 00 00 00       	callq  410bf9 <PlatformVPrintf>
  410bf6:	90                   	nop
  410bf7:	c9                   	leaveq 
  410bf8:	c3                   	retq   

0000000000410bf9 <PlatformVPrintf>:
  410bf9:	55                   	push   %rbp
  410bfa:	48 89 e5             	mov    %rsp,%rbp
  410bfd:	48 83 ec 30          	sub    $0x30,%rsp
  410c01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410c05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410c09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  410c0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410c11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  410c15:	e9 f9 01 00 00       	jmpq   410e13 <PlatformVPrintf+0x21a>
  410c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410c1e:	0f b6 00             	movzbl (%rax),%eax
  410c21:	3c 25                	cmp    $0x25,%al
  410c23:	0f 85 cd 01 00 00    	jne    410df6 <PlatformVPrintf+0x1fd>
  410c29:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  410c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410c32:	0f b6 00             	movzbl (%rax),%eax
  410c35:	0f be c0             	movsbl %al,%eax
  410c38:	83 f8 63             	cmp    $0x63,%eax
  410c3b:	0f 84 e8 00 00 00    	je     410d29 <PlatformVPrintf+0x130>
  410c41:	83 f8 63             	cmp    $0x63,%eax
  410c44:	7f 16                	jg     410c5c <PlatformVPrintf+0x63>
  410c46:	85 c0                	test   %eax,%eax
  410c48:	0f 84 a0 01 00 00    	je     410dee <PlatformVPrintf+0x1f5>
  410c4e:	83 f8 25             	cmp    $0x25,%eax
  410c51:	0f 84 84 01 00 00    	je     410ddb <PlatformVPrintf+0x1e2>
  410c57:	e9 b2 01 00 00       	jmpq   410e0e <PlatformVPrintf+0x215>
  410c5c:	83 f8 73             	cmp    $0x73,%eax
  410c5f:	74 13                	je     410c74 <PlatformVPrintf+0x7b>
  410c61:	83 f8 74             	cmp    $0x74,%eax
  410c64:	0f 84 1a 01 00 00    	je     410d84 <PlatformVPrintf+0x18b>
  410c6a:	83 f8 64             	cmp    $0x64,%eax
  410c6d:	74 5f                	je     410cce <PlatformVPrintf+0xd5>
  410c6f:	e9 9a 01 00 00       	jmpq   410e0e <PlatformVPrintf+0x215>
  410c74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410c78:	8b 00                	mov    (%rax),%eax
  410c7a:	83 f8 2f             	cmp    $0x2f,%eax
  410c7d:	77 24                	ja     410ca3 <PlatformVPrintf+0xaa>
  410c7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410c83:	48 8b 50 10          	mov    0x10(%rax),%rdx
  410c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410c8b:	8b 00                	mov    (%rax),%eax
  410c8d:	89 c0                	mov    %eax,%eax
  410c8f:	48 01 d0             	add    %rdx,%rax
  410c92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410c96:	8b 12                	mov    (%rdx),%edx
  410c98:	8d 4a 08             	lea    0x8(%rdx),%ecx
  410c9b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410c9f:	89 0a                	mov    %ecx,(%rdx)
  410ca1:	eb 14                	jmp    410cb7 <PlatformVPrintf+0xbe>
  410ca3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410ca7:	48 8b 40 08          	mov    0x8(%rax),%rax
  410cab:	48 8d 48 08          	lea    0x8(%rax),%rcx
  410caf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410cb3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  410cb7:	48 8b 00             	mov    (%rax),%rax
  410cba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410cbe:	48 89 d6             	mov    %rdx,%rsi
  410cc1:	48 89 c7             	mov    %rax,%rdi
  410cc4:	e8 dc 2d 00 00       	callq  413aa5 <PrintStr>
  410cc9:	e9 40 01 00 00       	jmpq   410e0e <PlatformVPrintf+0x215>
  410cce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410cd2:	8b 00                	mov    (%rax),%eax
  410cd4:	83 f8 2f             	cmp    $0x2f,%eax
  410cd7:	77 24                	ja     410cfd <PlatformVPrintf+0x104>
  410cd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410cdd:	48 8b 50 10          	mov    0x10(%rax),%rdx
  410ce1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410ce5:	8b 00                	mov    (%rax),%eax
  410ce7:	89 c0                	mov    %eax,%eax
  410ce9:	48 01 d0             	add    %rdx,%rax
  410cec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410cf0:	8b 12                	mov    (%rdx),%edx
  410cf2:	8d 4a 08             	lea    0x8(%rdx),%ecx
  410cf5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410cf9:	89 0a                	mov    %ecx,(%rdx)
  410cfb:	eb 14                	jmp    410d11 <PlatformVPrintf+0x118>
  410cfd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d01:	48 8b 40 08          	mov    0x8(%rax),%rax
  410d05:	48 8d 48 08          	lea    0x8(%rax),%rcx
  410d09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410d0d:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  410d11:	8b 00                	mov    (%rax),%eax
  410d13:	48 98                	cltq   
  410d15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410d19:	48 89 d6             	mov    %rdx,%rsi
  410d1c:	48 89 c7             	mov    %rax,%rdi
  410d1f:	e8 54 2d 00 00       	callq  413a78 <PrintSimpleInt>
  410d24:	e9 e5 00 00 00       	jmpq   410e0e <PlatformVPrintf+0x215>
  410d29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d2d:	8b 00                	mov    (%rax),%eax
  410d2f:	83 f8 2f             	cmp    $0x2f,%eax
  410d32:	77 24                	ja     410d58 <PlatformVPrintf+0x15f>
  410d34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d38:	48 8b 50 10          	mov    0x10(%rax),%rdx
  410d3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d40:	8b 00                	mov    (%rax),%eax
  410d42:	89 c0                	mov    %eax,%eax
  410d44:	48 01 d0             	add    %rdx,%rax
  410d47:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410d4b:	8b 12                	mov    (%rdx),%edx
  410d4d:	8d 4a 08             	lea    0x8(%rdx),%ecx
  410d50:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410d54:	89 0a                	mov    %ecx,(%rdx)
  410d56:	eb 14                	jmp    410d6c <PlatformVPrintf+0x173>
  410d58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d5c:	48 8b 40 08          	mov    0x8(%rax),%rax
  410d60:	48 8d 48 08          	lea    0x8(%rax),%rcx
  410d64:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410d68:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  410d6c:	8b 00                	mov    (%rax),%eax
  410d6e:	0f be c0             	movsbl %al,%eax
  410d71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410d75:	48 89 d6             	mov    %rdx,%rsi
  410d78:	89 c7                	mov    %eax,%edi
  410d7a:	e8 d3 2c 00 00       	callq  413a52 <PrintCh>
  410d7f:	e9 8a 00 00 00       	jmpq   410e0e <PlatformVPrintf+0x215>
  410d84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d88:	8b 00                	mov    (%rax),%eax
  410d8a:	83 f8 2f             	cmp    $0x2f,%eax
  410d8d:	77 24                	ja     410db3 <PlatformVPrintf+0x1ba>
  410d8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d93:	48 8b 50 10          	mov    0x10(%rax),%rdx
  410d97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410d9b:	8b 00                	mov    (%rax),%eax
  410d9d:	89 c0                	mov    %eax,%eax
  410d9f:	48 01 d0             	add    %rdx,%rax
  410da2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410da6:	8b 12                	mov    (%rdx),%edx
  410da8:	8d 4a 08             	lea    0x8(%rdx),%ecx
  410dab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410daf:	89 0a                	mov    %ecx,(%rdx)
  410db1:	eb 14                	jmp    410dc7 <PlatformVPrintf+0x1ce>
  410db3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  410db7:	48 8b 40 08          	mov    0x8(%rax),%rax
  410dbb:	48 8d 48 08          	lea    0x8(%rax),%rcx
  410dbf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  410dc3:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
  410dc7:	48 8b 00             	mov    (%rax),%rax
  410dca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410dce:	48 89 d6             	mov    %rdx,%rsi
  410dd1:	48 89 c7             	mov    %rax,%rdi
  410dd4:	e8 aa f1 ff ff       	callq  40ff83 <PrintType>
  410dd9:	eb 33                	jmp    410e0e <PlatformVPrintf+0x215>
  410ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410ddf:	48 89 c6             	mov    %rax,%rsi
  410de2:	bf 25 00 00 00       	mov    $0x25,%edi
  410de7:	e8 66 2c 00 00       	callq  413a52 <PrintCh>
  410dec:	eb 20                	jmp    410e0e <PlatformVPrintf+0x215>
  410dee:	48 83 6d f8 01       	subq   $0x1,-0x8(%rbp)
  410df3:	90                   	nop
  410df4:	eb 18                	jmp    410e0e <PlatformVPrintf+0x215>
  410df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410dfa:	0f b6 00             	movzbl (%rax),%eax
  410dfd:	0f be c0             	movsbl %al,%eax
  410e00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  410e04:	48 89 d6             	mov    %rdx,%rsi
  410e07:	89 c7                	mov    %eax,%edi
  410e09:	e8 44 2c 00 00       	callq  413a52 <PrintCh>
  410e0e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  410e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410e17:	0f b6 00             	movzbl (%rax),%eax
  410e1a:	84 c0                	test   %al,%al
  410e1c:	0f 85 f8 fd ff ff    	jne    410c1a <PlatformVPrintf+0x21>
  410e22:	90                   	nop
  410e23:	c9                   	leaveq 
  410e24:	c3                   	retq   

0000000000410e25 <PlatformMakeTempName>:
  410e25:	55                   	push   %rbp
  410e26:	48 89 e5             	mov    %rsp,%rbp
  410e29:	48 83 ec 20          	sub    $0x20,%rsp
  410e2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410e31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  410e35:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
  410e3c:	eb 52                	jmp    410e90 <PlatformMakeTempName+0x6b>
  410e3e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410e41:	48 63 d0             	movslq %eax,%rdx
  410e44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410e48:	48 01 d0             	add    %rdx,%rax
  410e4b:	0f b6 00             	movzbl (%rax),%eax
  410e4e:	3c 38                	cmp    $0x38,%al
  410e50:	7f 2a                	jg     410e7c <PlatformMakeTempName+0x57>
  410e52:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410e55:	48 63 d0             	movslq %eax,%rdx
  410e58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410e5c:	48 01 d0             	add    %rdx,%rax
  410e5f:	0f b6 10             	movzbl (%rax),%edx
  410e62:	83 c2 01             	add    $0x1,%edx
  410e65:	88 10                	mov    %dl,(%rax)
  410e67:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  410e6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410e6f:	48 89 d6             	mov    %rdx,%rsi
  410e72:	48 89 c7             	mov    %rax,%rdi
  410e75:	e8 87 2d ff ff       	callq  403c01 <TableStrRegister>
  410e7a:	eb 2d                	jmp    410ea9 <PlatformMakeTempName+0x84>
  410e7c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  410e7f:	48 63 d0             	movslq %eax,%rdx
  410e82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  410e86:	48 01 d0             	add    %rdx,%rax
  410e89:	c6 00 30             	movb   $0x30,(%rax)
  410e8c:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  410e90:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  410e94:	7f a8                	jg     410e3e <PlatformMakeTempName+0x19>
  410e96:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  410e9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410e9e:	48 89 d6             	mov    %rdx,%rsi
  410ea1:	48 89 c7             	mov    %rax,%rdi
  410ea4:	e8 58 2d ff ff       	callq  403c01 <TableStrRegister>
  410ea9:	c9                   	leaveq 
  410eaa:	c3                   	retq   

0000000000410eab <IncludeInit>:
  410eab:	55                   	push   %rbp
  410eac:	48 89 e5             	mov    %rsp,%rbp
  410eaf:	48 83 ec 10          	sub    $0x10,%rsp
  410eb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  410eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410ebb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410ec1:	b9 00 03 62 00       	mov    $0x620300,%ecx
  410ec6:	ba 00 00 00 00       	mov    $0x0,%edx
  410ecb:	be c0 91 41 00       	mov    $0x4191c0,%esi
  410ed0:	48 89 c7             	mov    %rax,%rdi
  410ed3:	e8 47 01 00 00       	callq  41101f <IncludeRegister>
  410ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410edc:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410ee2:	b9 00 00 00 00       	mov    $0x0,%ecx
  410ee7:	ba 87 4c 41 00       	mov    $0x414c87,%edx
  410eec:	be c8 91 41 00       	mov    $0x4191c8,%esi
  410ef1:	48 89 c7             	mov    %rax,%rdi
  410ef4:	e8 26 01 00 00       	callq  41101f <IncludeRegister>
  410ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410efd:	41 b8 00 a7 41 00    	mov    $0x41a700,%r8d
  410f03:	b9 00 00 00 00       	mov    $0x0,%ecx
  410f08:	ba 38 60 41 00       	mov    $0x416038,%edx
  410f0d:	be d0 91 41 00       	mov    $0x4191d0,%esi
  410f12:	48 89 c7             	mov    %rax,%rdi
  410f15:	e8 05 01 00 00       	callq  41101f <IncludeRegister>
  410f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f1e:	41 b8 00 97 41 00    	mov    $0x419700,%r8d
  410f24:	b9 00 fb 61 00       	mov    $0x61fb00,%ecx
  410f29:	ba cd 36 41 00       	mov    $0x4136cd,%edx
  410f2e:	be da 91 41 00       	mov    $0x4191da,%esi
  410f33:	48 89 c7             	mov    %rax,%rdi
  410f36:	e8 e4 00 00 00       	callq  41101f <IncludeRegister>
  410f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f3f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410f45:	b9 c0 ff 61 00       	mov    $0x61ffc0,%ecx
  410f4a:	ba 9e 48 41 00       	mov    $0x41489e,%edx
  410f4f:	be e2 91 41 00       	mov    $0x4191e2,%esi
  410f54:	48 89 c7             	mov    %rax,%rdi
  410f57:	e8 c3 00 00 00       	callq  41101f <IncludeRegister>
  410f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f60:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  410f66:	b9 00 fe 61 00       	mov    $0x61fe00,%ecx
  410f6b:	ba 23 44 41 00       	mov    $0x414423,%edx
  410f70:	be eb 91 41 00       	mov    $0x4191eb,%esi
  410f75:	48 89 c7             	mov    %rax,%rdi
  410f78:	e8 a2 00 00 00       	callq  41101f <IncludeRegister>
  410f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410f81:	41 b8 a0 a1 41 00    	mov    $0x41a1a0,%r8d
  410f87:	b9 00 01 62 00       	mov    $0x620100,%ecx
  410f8c:	ba 1e 4c 41 00       	mov    $0x414c1e,%edx
  410f91:	be f4 91 41 00       	mov    $0x4191f4,%esi
  410f96:	48 89 c7             	mov    %rax,%rdi
  410f99:	e8 81 00 00 00       	callq  41101f <IncludeRegister>
  410f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410fa2:	41 b8 40 a7 41 00    	mov    $0x41a740,%r8d
  410fa8:	b9 20 04 62 00       	mov    $0x620420,%ecx
  410fad:	ba 88 72 41 00       	mov    $0x417288,%edx
  410fb2:	be fb 91 41 00       	mov    $0x4191fb,%esi
  410fb7:	48 89 c7             	mov    %rax,%rdi
  410fba:	e8 60 00 00 00       	callq  41101f <IncludeRegister>
  410fbf:	90                   	nop
  410fc0:	c9                   	leaveq 
  410fc1:	c3                   	retq   

0000000000410fc2 <IncludeCleanup>:
  410fc2:	55                   	push   %rbp
  410fc3:	48 89 e5             	mov    %rsp,%rbp
  410fc6:	48 83 ec 20          	sub    $0x20,%rsp
  410fca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  410fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410fd2:	48 8b 80 18 0a 00 00 	mov    0xa18(%rax),%rax
  410fd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  410fdd:	eb 27                	jmp    411006 <IncludeCleanup+0x44>
  410fdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  410fe3:	48 8b 40 20          	mov    0x20(%rax),%rax
  410fe7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  410feb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  410fef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  410ff3:	48 89 d6             	mov    %rdx,%rsi
  410ff6:	48 89 c7             	mov    %rax,%rdi
  410ff9:	e8 09 c1 ff ff       	callq  40d107 <HeapFreeMem>
  410ffe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411002:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411006:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41100b:	75 d2                	jne    410fdf <IncludeCleanup+0x1d>
  41100d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411011:	48 c7 80 18 0a 00 00 	movq   $0x0,0xa18(%rax)
  411018:	00 00 00 00 
  41101c:	90                   	nop
  41101d:	c9                   	leaveq 
  41101e:	c3                   	retq   

000000000041101f <IncludeRegister>:
  41101f:	55                   	push   %rbp
  411020:	48 89 e5             	mov    %rsp,%rbp
  411023:	48 83 ec 40          	sub    $0x40,%rsp
  411027:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41102b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41102f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  411033:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  411037:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  41103b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41103f:	be 28 00 00 00       	mov    $0x28,%esi
  411044:	48 89 c7             	mov    %rax,%rdi
  411047:	e8 98 c0 ff ff       	callq  40d0e4 <HeapAllocMem>
  41104c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411050:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411058:	48 89 d6             	mov    %rdx,%rsi
  41105b:	48 89 c7             	mov    %rax,%rdi
  41105e:	e8 9e 2b ff ff       	callq  403c01 <TableStrRegister>
  411063:	48 89 c2             	mov    %rax,%rdx
  411066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41106a:	48 89 10             	mov    %rdx,(%rax)
  41106d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411071:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411075:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41107d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  411081:	48 89 50 10          	mov    %rdx,0x10(%rax)
  411085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411089:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  41108d:	48 89 50 18          	mov    %rdx,0x18(%rax)
  411091:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411095:	48 8b 90 18 0a 00 00 	mov    0xa18(%rax),%rdx
  41109c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4110a0:	48 89 50 20          	mov    %rdx,0x20(%rax)
  4110a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4110a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4110ac:	48 89 90 18 0a 00 00 	mov    %rdx,0xa18(%rax)
  4110b3:	90                   	nop
  4110b4:	c9                   	leaveq 
  4110b5:	c3                   	retq   

00000000004110b6 <PicocIncludeAllSystemHeaders>:
  4110b6:	55                   	push   %rbp
  4110b7:	48 89 e5             	mov    %rsp,%rbp
  4110ba:	48 83 ec 20          	sub    $0x20,%rsp
  4110be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4110c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4110c6:	48 8b 80 18 0a 00 00 	mov    0xa18(%rax),%rax
  4110cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4110d1:	eb 22                	jmp    4110f5 <PicocIncludeAllSystemHeaders+0x3f>
  4110d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4110d7:	48 8b 10             	mov    (%rax),%rdx
  4110da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4110de:	48 89 d6             	mov    %rdx,%rsi
  4110e1:	48 89 c7             	mov    %rax,%rdi
  4110e4:	e8 16 00 00 00       	callq  4110ff <IncludeFile>
  4110e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4110ed:	48 8b 40 20          	mov    0x20(%rax),%rax
  4110f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4110f5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4110fa:	75 d7                	jne    4110d3 <PicocIncludeAllSystemHeaders+0x1d>
  4110fc:	90                   	nop
  4110fd:	c9                   	leaveq 
  4110fe:	c3                   	retq   

00000000004110ff <IncludeFile>:
  4110ff:	55                   	push   %rbp
  411100:	48 89 e5             	mov    %rsp,%rbp
  411103:	48 83 ec 20          	sub    $0x20,%rsp
  411107:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41110b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41110f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411113:	48 8b 80 18 0a 00 00 	mov    0xa18(%rax),%rax
  41111a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41111e:	e9 07 01 00 00       	jmpq   41122a <IncludeFile+0x12b>
  411123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411127:	48 8b 00             	mov    (%rax),%rax
  41112a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41112e:	48 89 d6             	mov    %rdx,%rsi
  411131:	48 89 c7             	mov    %rax,%rdi
  411134:	e8 b7 1c ff ff       	callq  402df0 <strcmp@plt>
  411139:	85 c0                	test   %eax,%eax
  41113b:	0f 85 dd 00 00 00    	jne    41121e <IncludeFile+0x11f>
  411141:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411149:	48 89 d6             	mov    %rdx,%rsi
  41114c:	48 89 c7             	mov    %rax,%rdi
  41114f:	e8 ab e5 ff ff       	callq  40f6ff <VariableDefined>
  411154:	85 c0                	test   %eax,%eax
  411156:	0f 85 ee 00 00 00    	jne    41124a <IncludeFile+0x14b>
  41115c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411160:	48 8d 88 c8 0c 00 00 	lea    0xcc8(%rax),%rcx
  411167:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41116b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41116f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  411175:	49 89 c8             	mov    %rcx,%r8
  411178:	b9 00 00 00 00       	mov    $0x0,%ecx
  41117d:	be 00 00 00 00       	mov    $0x0,%esi
  411182:	48 89 c7             	mov    %rax,%rdi
  411185:	e8 4f e0 ff ff       	callq  40f1d9 <VariableDefine>
  41118a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41118e:	48 8b 40 08          	mov    0x8(%rax),%rax
  411192:	48 85 c0             	test   %rax,%rax
  411195:	74 11                	je     4111a8 <IncludeFile+0xa9>
  411197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41119b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41119f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4111a3:	48 89 d7             	mov    %rdx,%rdi
  4111a6:	ff d0                	callq  *%rax
  4111a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111ac:	48 8b 40 18          	mov    0x18(%rax),%rax
  4111b0:	48 85 c0             	test   %rax,%rax
  4111b3:	74 3e                	je     4111f3 <IncludeFile+0xf4>
  4111b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111b9:	48 8b 40 18          	mov    0x18(%rax),%rax
  4111bd:	48 89 c7             	mov    %rax,%rdi
  4111c0:	e8 3b 19 ff ff       	callq  402b00 <strlen@plt>
  4111c5:	89 c1                	mov    %eax,%ecx
  4111c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111cb:	48 8b 50 18          	mov    0x18(%rax),%rdx
  4111cf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4111d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4111d7:	6a 00                	pushq  $0x0
  4111d9:	6a 00                	pushq  $0x0
  4111db:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  4111e1:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4111e7:	48 89 c7             	mov    %rax,%rdi
  4111ea:	e8 8c 7c ff ff       	callq  408e7b <PicocParse>
  4111ef:	48 83 c4 10          	add    $0x10,%rsp
  4111f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4111f7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4111fb:	48 85 c0             	test   %rax,%rax
  4111fe:	74 4a                	je     41124a <IncludeFile+0x14b>
  411200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411204:	48 8b 48 10          	mov    0x10(%rax),%rcx
  411208:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  41120c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411210:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411214:	48 89 c7             	mov    %rax,%rdi
  411217:	e8 e0 eb ff ff       	callq  40fdfc <LibraryAdd>
  41121c:	eb 2c                	jmp    41124a <IncludeFile+0x14b>
  41121e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411222:	48 8b 40 20          	mov    0x20(%rax),%rax
  411226:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41122a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  41122f:	0f 85 ee fe ff ff    	jne    411123 <IncludeFile+0x24>
  411235:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411239:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41123d:	48 89 d6             	mov    %rdx,%rsi
  411240:	48 89 c7             	mov    %rax,%rdi
  411243:	e8 f5 06 00 00       	callq  41193d <PicocPlatformScanFile>
  411248:	eb 01                	jmp    41124b <IncludeFile+0x14c>
  41124a:	90                   	nop
  41124b:	c9                   	leaveq 
  41124c:	c3                   	retq   

000000000041124d <DebugInit>:
  41124d:	55                   	push   %rbp
  41124e:	48 89 e5             	mov    %rsp,%rbp
  411251:	48 83 ec 10          	sub    $0x10,%rsp
  411255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41125d:	48 8d b0 78 0e 00 00 	lea    0xe78(%rax),%rsi
  411264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411268:	48 05 68 0e 00 00    	add    $0xe68,%rax
  41126e:	b9 01 00 00 00       	mov    $0x1,%ecx
  411273:	ba 15 00 00 00       	mov    $0x15,%edx
  411278:	48 89 c7             	mov    %rax,%rdi
  41127b:	e8 85 24 ff ff       	callq  403705 <TableInitTable>
  411280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411284:	c7 80 20 0f 00 00 00 	movl   $0x0,0xf20(%rax)
  41128b:	00 00 00 
  41128e:	90                   	nop
  41128f:	c9                   	leaveq 
  411290:	c3                   	retq   

0000000000411291 <DebugCleanup>:
  411291:	55                   	push   %rbp
  411292:	48 89 e5             	mov    %rsp,%rbp
  411295:	48 83 ec 30          	sub    $0x30,%rsp
  411299:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41129d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4112a4:	eb 4d                	jmp    4112f3 <DebugCleanup+0x62>
  4112a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4112aa:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4112ad:	48 63 d2             	movslq %edx,%rdx
  4112b0:	48 81 c2 ce 01 00 00 	add    $0x1ce,%rdx
  4112b7:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
  4112bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4112c0:	eb 26                	jmp    4112e8 <DebugCleanup+0x57>
  4112c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4112c6:	48 8b 00             	mov    (%rax),%rax
  4112c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4112cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4112d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4112d5:	48 89 d6             	mov    %rdx,%rsi
  4112d8:	48 89 c7             	mov    %rax,%rdi
  4112db:	e8 27 be ff ff       	callq  40d107 <HeapFreeMem>
  4112e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4112e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4112e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4112ed:	75 d3                	jne    4112c2 <DebugCleanup+0x31>
  4112ef:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4112f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4112f7:	0f b7 80 68 0e 00 00 	movzwl 0xe68(%rax),%eax
  4112fe:	98                   	cwtl   
  4112ff:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  411302:	7c a2                	jl     4112a6 <DebugCleanup+0x15>
  411304:	90                   	nop
  411305:	c9                   	leaveq 
  411306:	c3                   	retq   

0000000000411307 <DebugTableSearchBreakpoint>:
  411307:	55                   	push   %rbp
  411308:	48 89 e5             	mov    %rsp,%rbp
  41130b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41130f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  411313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411317:	48 8b 00             	mov    (%rax),%rax
  41131a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41131e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411322:	48 8b 40 10          	mov    0x10(%rax),%rax
  411326:	48 89 c1             	mov    %rax,%rcx
  411329:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41132d:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  411331:	98                   	cwtl   
  411332:	c1 e0 10             	shl    $0x10,%eax
  411335:	89 c2                	mov    %eax,%edx
  411337:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41133b:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  41133f:	98                   	cwtl   
  411340:	c1 e0 10             	shl    $0x10,%eax
  411343:	09 d0                	or     %edx,%eax
  411345:	48 98                	cltq   
  411347:	48 31 c1             	xor    %rax,%rcx
  41134a:	48 89 ca             	mov    %rcx,%rdx
  41134d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411351:	0f b7 80 68 0e 00 00 	movzwl 0xe68(%rax),%eax
  411358:	48 0f bf c8          	movswq %ax,%rcx
  41135c:	48 89 d0             	mov    %rdx,%rax
  41135f:	ba 00 00 00 00       	mov    $0x0,%edx
  411364:	48 f7 f1             	div    %rcx
  411367:	48 89 d0             	mov    %rdx,%rax
  41136a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  41136d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411371:	8b 55 ec             	mov    -0x14(%rbp),%edx
  411374:	48 63 d2             	movslq %edx,%rdx
  411377:	48 81 c2 ce 01 00 00 	add    $0x1ce,%rdx
  41137e:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
  411383:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411387:	eb 50                	jmp    4113d9 <DebugTableSearchBreakpoint+0xd2>
  411389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41138d:	48 8b 50 18          	mov    0x18(%rax),%rdx
  411391:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411395:	48 8b 40 10          	mov    0x10(%rax),%rax
  411399:	48 39 c2             	cmp    %rax,%rdx
  41139c:	75 30                	jne    4113ce <DebugTableSearchBreakpoint+0xc7>
  41139e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113a2:	0f b7 50 20          	movzwl 0x20(%rax),%edx
  4113a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4113aa:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  4113ae:	66 39 c2             	cmp    %ax,%dx
  4113b1:	75 1b                	jne    4113ce <DebugTableSearchBreakpoint+0xc7>
  4113b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113b7:	0f b7 50 22          	movzwl 0x22(%rax),%edx
  4113bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4113bf:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  4113c3:	66 39 c2             	cmp    %ax,%dx
  4113c6:	75 06                	jne    4113ce <DebugTableSearchBreakpoint+0xc7>
  4113c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113cc:	eb 20                	jmp    4113ee <DebugTableSearchBreakpoint+0xe7>
  4113ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4113d2:	48 8b 00             	mov    (%rax),%rax
  4113d5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4113d9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4113de:	75 a9                	jne    411389 <DebugTableSearchBreakpoint+0x82>
  4113e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4113e4:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4113e7:	89 10                	mov    %edx,(%rax)
  4113e9:	b8 00 00 00 00       	mov    $0x0,%eax
  4113ee:	5d                   	pop    %rbp
  4113ef:	c3                   	retq   

00000000004113f0 <DebugSetBreakpoint>:
  4113f0:	55                   	push   %rbp
  4113f1:	48 89 e5             	mov    %rsp,%rbp
  4113f4:	48 83 ec 30          	sub    $0x30,%rsp
  4113f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4113fc:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
  411400:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411404:	48 89 d6             	mov    %rdx,%rsi
  411407:	48 89 c7             	mov    %rax,%rdi
  41140a:	e8 f8 fe ff ff       	callq  411307 <DebugTableSearchBreakpoint>
  41140f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411413:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411417:	48 8b 00             	mov    (%rax),%rax
  41141a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41141e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  411423:	0f 85 b0 00 00 00    	jne    4114d9 <DebugSetBreakpoint+0xe9>
  411429:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41142d:	be 28 00 00 00       	mov    $0x28,%esi
  411432:	48 89 c7             	mov    %rax,%rdi
  411435:	e8 aa bc ff ff       	callq  40d0e4 <HeapAllocMem>
  41143a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  41143e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  411443:	75 16                	jne    41145b <DebugSetBreakpoint+0x6b>
  411445:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411449:	be 04 92 41 00       	mov    $0x419204,%esi
  41144e:	48 89 c7             	mov    %rax,%rdi
  411451:	b8 00 00 00 00       	mov    $0x0,%eax
  411456:	e8 be f3 ff ff       	callq  410819 <ProgramFailNoParser>
  41145b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41145f:	48 8b 50 10          	mov    0x10(%rax),%rdx
  411463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411467:	48 89 50 18          	mov    %rdx,0x18(%rax)
  41146b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41146f:	0f b7 50 18          	movzwl 0x18(%rax),%edx
  411473:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411477:	66 89 50 20          	mov    %dx,0x20(%rax)
  41147b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41147f:	0f b7 50 1a          	movzwl 0x1a(%rax),%edx
  411483:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411487:	66 89 50 22          	mov    %dx,0x22(%rax)
  41148b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  41148e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411492:	48 63 d2             	movslq %edx,%rdx
  411495:	48 81 c2 ce 01 00 00 	add    $0x1ce,%rdx
  41149c:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
  4114a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4114a5:	48 89 10             	mov    %rdx,(%rax)
  4114a8:	8b 55 e4             	mov    -0x1c(%rbp),%edx
  4114ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4114af:	48 63 d2             	movslq %edx,%rdx
  4114b2:	48 8d 8a ce 01 00 00 	lea    0x1ce(%rdx),%rcx
  4114b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4114bd:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
  4114c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4114c6:	8b 80 20 0f 00 00    	mov    0xf20(%rax),%eax
  4114cc:	8d 50 01             	lea    0x1(%rax),%edx
  4114cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4114d3:	89 90 20 0f 00 00    	mov    %edx,0xf20(%rax)
  4114d9:	90                   	nop
  4114da:	c9                   	leaveq 
  4114db:	c3                   	retq   

00000000004114dc <DebugClearBreakpoint>:
  4114dc:	55                   	push   %rbp
  4114dd:	48 89 e5             	mov    %rsp,%rbp
  4114e0:	48 83 ec 30          	sub    $0x30,%rsp
  4114e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4114e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4114ec:	48 8b 00             	mov    (%rax),%rax
  4114ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4114f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4114f7:	48 8b 40 10          	mov    0x10(%rax),%rax
  4114fb:	48 89 c1             	mov    %rax,%rcx
  4114fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411502:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  411506:	98                   	cwtl   
  411507:	c1 e0 10             	shl    $0x10,%eax
  41150a:	89 c2                	mov    %eax,%edx
  41150c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411510:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  411514:	98                   	cwtl   
  411515:	c1 e0 10             	shl    $0x10,%eax
  411518:	09 d0                	or     %edx,%eax
  41151a:	48 98                	cltq   
  41151c:	48 31 c1             	xor    %rax,%rcx
  41151f:	48 89 ca             	mov    %rcx,%rdx
  411522:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411526:	0f b7 80 68 0e 00 00 	movzwl 0xe68(%rax),%eax
  41152d:	48 0f bf c8          	movswq %ax,%rcx
  411531:	48 89 d0             	mov    %rdx,%rax
  411534:	ba 00 00 00 00       	mov    $0x0,%edx
  411539:	48 f7 f1             	div    %rcx
  41153c:	48 89 d0             	mov    %rdx,%rax
  41153f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  411542:	8b 45 ec             	mov    -0x14(%rbp),%eax
  411545:	48 98                	cltq   
  411547:	48 05 ce 01 00 00    	add    $0x1ce,%rax
  41154d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  411554:	00 
  411555:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411559:	48 01 d0             	add    %rdx,%rax
  41155c:	48 83 c0 08          	add    $0x8,%rax
  411560:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411564:	e9 94 00 00 00       	jmpq   4115fd <DebugClearBreakpoint+0x121>
  411569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41156d:	48 8b 00             	mov    (%rax),%rax
  411570:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  411574:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  411578:	48 8b 50 18          	mov    0x18(%rax),%rdx
  41157c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411580:	48 8b 40 10          	mov    0x10(%rax),%rax
  411584:	48 39 c2             	cmp    %rax,%rdx
  411587:	75 69                	jne    4115f2 <DebugClearBreakpoint+0x116>
  411589:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41158d:	0f b7 50 20          	movzwl 0x20(%rax),%edx
  411591:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411595:	0f b7 40 18          	movzwl 0x18(%rax),%eax
  411599:	66 39 c2             	cmp    %ax,%dx
  41159c:	75 54                	jne    4115f2 <DebugClearBreakpoint+0x116>
  41159e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4115a2:	0f b7 50 22          	movzwl 0x22(%rax),%edx
  4115a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4115aa:	0f b7 40 1a          	movzwl 0x1a(%rax),%eax
  4115ae:	66 39 c2             	cmp    %ax,%dx
  4115b1:	75 3f                	jne    4115f2 <DebugClearBreakpoint+0x116>
  4115b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4115b7:	48 8b 10             	mov    (%rax),%rdx
  4115ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4115be:	48 89 10             	mov    %rdx,(%rax)
  4115c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4115c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4115c9:	48 89 d6             	mov    %rdx,%rsi
  4115cc:	48 89 c7             	mov    %rax,%rdi
  4115cf:	e8 33 bb ff ff       	callq  40d107 <HeapFreeMem>
  4115d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4115d8:	8b 80 20 0f 00 00    	mov    0xf20(%rax),%eax
  4115de:	8d 50 ff             	lea    -0x1(%rax),%edx
  4115e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4115e5:	89 90 20 0f 00 00    	mov    %edx,0xf20(%rax)
  4115eb:	b8 01 00 00 00       	mov    $0x1,%eax
  4115f0:	eb 20                	jmp    411612 <DebugClearBreakpoint+0x136>
  4115f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4115f6:	48 8b 00             	mov    (%rax),%rax
  4115f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4115fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411601:	48 8b 00             	mov    (%rax),%rax
  411604:	48 85 c0             	test   %rax,%rax
  411607:	0f 85 5c ff ff ff    	jne    411569 <DebugClearBreakpoint+0x8d>
  41160d:	b8 00 00 00 00       	mov    $0x0,%eax
  411612:	c9                   	leaveq 
  411613:	c3                   	retq   

0000000000411614 <DebugCheckStatement>:
  411614:	55                   	push   %rbp
  411615:	48 89 e5             	mov    %rsp,%rbp
  411618:	48 83 ec 30          	sub    $0x30,%rsp
  41161c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  411620:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  411627:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41162b:	48 8b 00             	mov    (%rax),%rax
  41162e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  411632:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411636:	8b 80 24 0f 00 00    	mov    0xf24(%rax),%eax
  41163c:	85 c0                	test   %eax,%eax
  41163e:	74 32                	je     411672 <DebugCheckStatement+0x5e>
  411640:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411644:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  41164b:	be 12 92 41 00       	mov    $0x419212,%esi
  411650:	48 89 c7             	mov    %rax,%rdi
  411653:	b8 00 00 00 00       	mov    $0x0,%eax
  411658:	e8 f3 f4 ff ff       	callq  410b50 <PlatformPrintf>
  41165d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  411664:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411668:	c7 80 24 0f 00 00 00 	movl   $0x0,0xf24(%rax)
  41166f:	00 00 00 
  411672:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  411676:	48 8b 00             	mov    (%rax),%rax
  411679:	8b 80 20 0f 00 00    	mov    0xf20(%rax),%eax
  41167f:	85 c0                	test   %eax,%eax
  411681:	74 1f                	je     4116a2 <DebugCheckStatement+0x8e>
  411683:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  411687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41168b:	48 89 d6             	mov    %rdx,%rsi
  41168e:	48 89 c7             	mov    %rax,%rdi
  411691:	e8 71 fc ff ff       	callq  411307 <DebugTableSearchBreakpoint>
  411696:	48 85 c0             	test   %rax,%rax
  411699:	74 07                	je     4116a2 <DebugCheckStatement+0x8e>
  41169b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  4116a2:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4116a6:	74 2e                	je     4116d6 <DebugCheckStatement+0xc2>
  4116a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4116ac:	48 8b 80 30 0f 00 00 	mov    0xf30(%rax),%rax
  4116b3:	be 19 92 41 00       	mov    $0x419219,%esi
  4116b8:	48 89 c7             	mov    %rax,%rdi
  4116bb:	b8 00 00 00 00       	mov    $0x0,%eax
  4116c0:	e8 8b f4 ff ff       	callq  410b50 <PlatformPrintf>
  4116c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4116c9:	be 00 00 00 00       	mov    $0x0,%esi
  4116ce:	48 89 c7             	mov    %rax,%rdi
  4116d1:	e8 1d 79 ff ff       	callq  408ff3 <PicocParseInteractiveNoStartPrompt>
  4116d6:	90                   	nop
  4116d7:	c9                   	leaveq 
  4116d8:	c3                   	retq   

00000000004116d9 <DebugStep>:
  4116d9:	55                   	push   %rbp
  4116da:	48 89 e5             	mov    %rsp,%rbp
  4116dd:	90                   	nop
  4116de:	5d                   	pop    %rbp
  4116df:	c3                   	retq   

00000000004116e0 <BreakHandler>:
  4116e0:	55                   	push   %rbp
  4116e1:	48 89 e5             	mov    %rsp,%rbp
  4116e4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4116e7:	48 8b 05 f2 f1 20 00 	mov    0x20f1f2(%rip),%rax        # 6208e0 <break_pc>
  4116ee:	c7 80 24 0f 00 00 01 	movl   $0x1,0xf24(%rax)
  4116f5:	00 00 00 
  4116f8:	90                   	nop
  4116f9:	5d                   	pop    %rbp
  4116fa:	c3                   	retq   

00000000004116fb <PlatformInit>:
  4116fb:	55                   	push   %rbp
  4116fc:	48 89 e5             	mov    %rsp,%rbp
  4116ff:	48 83 ec 10          	sub    $0x10,%rsp
  411703:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41170b:	48 89 05 ce f1 20 00 	mov    %rax,0x20f1ce(%rip)        # 6208e0 <break_pc>
  411712:	be e0 16 41 00       	mov    $0x4116e0,%esi
  411717:	bf 02 00 00 00       	mov    $0x2,%edi
  41171c:	e8 ef 16 ff ff       	callq  402e10 <signal@plt>
  411721:	90                   	nop
  411722:	c9                   	leaveq 
  411723:	c3                   	retq   

0000000000411724 <PlatformCleanup>:
  411724:	55                   	push   %rbp
  411725:	48 89 e5             	mov    %rsp,%rbp
  411728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41172c:	90                   	nop
  41172d:	5d                   	pop    %rbp
  41172e:	c3                   	retq   

000000000041172f <PlatformGetLine>:
  41172f:	55                   	push   %rbp
  411730:	48 89 e5             	mov    %rsp,%rbp
  411733:	48 83 ec 20          	sub    $0x20,%rsp
  411737:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41173b:	89 75 f4             	mov    %esi,-0xc(%rbp)
  41173e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  411742:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  411747:	74 16                	je     41175f <PlatformGetLine+0x30>
  411749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41174d:	48 89 c6             	mov    %rax,%rsi
  411750:	bf 2b 92 41 00       	mov    $0x41922b,%edi
  411755:	b8 00 00 00 00       	mov    $0x0,%eax
  41175a:	e8 21 14 ff ff       	callq  402b80 <printf@plt>
  41175f:	48 8b 05 fa f0 20 00 	mov    0x20f0fa(%rip),%rax        # 620860 <stdout@@GLIBC_2.2.5>
  411766:	48 89 c7             	mov    %rax,%rdi
  411769:	e8 c2 17 ff ff       	callq  402f30 <fflush@plt>
  41176e:	48 8b 15 fb f0 20 00 	mov    0x20f0fb(%rip),%rdx        # 620870 <stdin@@GLIBC_2.2.5>
  411775:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  411778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41177c:	89 ce                	mov    %ecx,%esi
  41177e:	48 89 c7             	mov    %rax,%rdi
  411781:	e8 1a 16 ff ff       	callq  402da0 <fgets@plt>
  411786:	c9                   	leaveq 
  411787:	c3                   	retq   

0000000000411788 <PlatformGetCharacter>:
  411788:	55                   	push   %rbp
  411789:	48 89 e5             	mov    %rsp,%rbp
  41178c:	48 8b 05 cd f0 20 00 	mov    0x20f0cd(%rip),%rax        # 620860 <stdout@@GLIBC_2.2.5>
  411793:	48 89 c7             	mov    %rax,%rdi
  411796:	e8 95 17 ff ff       	callq  402f30 <fflush@plt>
  41179b:	e8 60 16 ff ff       	callq  402e00 <getchar@plt>
  4117a0:	5d                   	pop    %rbp
  4117a1:	c3                   	retq   

00000000004117a2 <PlatformPutc>:
  4117a2:	55                   	push   %rbp
  4117a3:	48 89 e5             	mov    %rsp,%rbp
  4117a6:	48 83 ec 10          	sub    $0x10,%rsp
  4117aa:	89 f8                	mov    %edi,%eax
  4117ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4117b0:	88 45 fc             	mov    %al,-0x4(%rbp)
  4117b3:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  4117b7:	89 c7                	mov    %eax,%edi
  4117b9:	e8 a2 11 ff ff       	callq  402960 <putchar@plt>
  4117be:	90                   	nop
  4117bf:	c9                   	leaveq 
  4117c0:	c3                   	retq   

00000000004117c1 <PlatformReadFile>:
  4117c1:	55                   	push   %rbp
  4117c2:	48 89 e5             	mov    %rsp,%rbp
  4117c5:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
  4117cc:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  4117d3:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  4117da:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  4117e1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  4117e8:	48 89 d6             	mov    %rdx,%rsi
  4117eb:	48 89 c7             	mov    %rax,%rdi
  4117ee:	e8 3d 5c 00 00       	callq  417430 <__stat>
  4117f3:	85 c0                	test   %eax,%eax
  4117f5:	74 20                	je     411817 <PlatformReadFile+0x56>
  4117f7:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4117fe:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411805:	be 2e 92 41 00       	mov    $0x41922e,%esi
  41180a:	48 89 c7             	mov    %rax,%rdi
  41180d:	b8 00 00 00 00       	mov    $0x0,%eax
  411812:	e8 02 f0 ff ff       	callq  410819 <ProgramFailNoParser>
  411817:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41181b:	48 83 c0 01          	add    $0x1,%rax
  41181f:	48 89 c7             	mov    %rax,%rdi
  411822:	e8 f9 16 ff ff       	callq  402f20 <malloc@plt>
  411827:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  41182b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  411830:	75 19                	jne    41184b <PlatformReadFile+0x8a>
  411832:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411839:	be 42 92 41 00       	mov    $0x419242,%esi
  41183e:	48 89 c7             	mov    %rax,%rdi
  411841:	b8 00 00 00 00       	mov    $0x0,%eax
  411846:	e8 ce ef ff ff       	callq  410819 <ProgramFailNoParser>
  41184b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  411852:	be 51 92 41 00       	mov    $0x419251,%esi
  411857:	48 89 c7             	mov    %rax,%rdi
  41185a:	e8 f1 18 ff ff       	callq  403150 <fopen@plt>
  41185f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  411863:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  411868:	75 20                	jne    41188a <PlatformReadFile+0xc9>
  41186a:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  411871:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  411878:	be 2e 92 41 00       	mov    $0x41922e,%esi
  41187d:	48 89 c7             	mov    %rax,%rdi
  411880:	b8 00 00 00 00       	mov    $0x0,%eax
  411885:	e8 8f ef ff ff       	callq  410819 <ProgramFailNoParser>
  41188a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
  41188e:	48 89 c6             	mov    %rax,%rsi
  411891:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  411895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411899:	48 89 d1             	mov    %rdx,%rcx
  41189c:	48 89 f2             	mov    %rsi,%rdx
  41189f:	be 01 00 00 00       	mov    $0x1,%esi
  4118a4:	48 89 c7             	mov    %rax,%rdi
  4118a7:	e8 c4 11 ff ff       	callq  402a70 <fread@plt>
  4118ac:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4118af:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  4118b3:	75 20                	jne    4118d5 <PlatformReadFile+0x114>
  4118b5:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
  4118bc:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  4118c3:	be 2e 92 41 00       	mov    $0x41922e,%esi
  4118c8:	48 89 c7             	mov    %rax,%rdi
  4118cb:	b8 00 00 00 00       	mov    $0x0,%eax
  4118d0:	e8 44 ef ff ff       	callq  410819 <ProgramFailNoParser>
  4118d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4118d8:	48 63 d0             	movslq %eax,%rdx
  4118db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4118df:	48 01 d0             	add    %rdx,%rax
  4118e2:	c6 00 00             	movb   $0x0,(%rax)
  4118e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4118e9:	48 89 c7             	mov    %rax,%rdi
  4118ec:	e8 df 11 ff ff       	callq  402ad0 <fclose@plt>
  4118f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4118f5:	0f b6 00             	movzbl (%rax),%eax
  4118f8:	3c 23                	cmp    $0x23,%al
  4118fa:	75 3b                	jne    411937 <PlatformReadFile+0x176>
  4118fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411900:	48 83 c0 01          	add    $0x1,%rax
  411904:	0f b6 00             	movzbl (%rax),%eax
  411907:	3c 21                	cmp    $0x21,%al
  411909:	75 2c                	jne    411937 <PlatformReadFile+0x176>
  41190b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41190f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411913:	eb 0c                	jmp    411921 <PlatformReadFile+0x160>
  411915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411919:	c6 00 20             	movb   $0x20,(%rax)
  41191c:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  411921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411925:	0f b6 00             	movzbl (%rax),%eax
  411928:	3c 0d                	cmp    $0xd,%al
  41192a:	74 0b                	je     411937 <PlatformReadFile+0x176>
  41192c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411930:	0f b6 00             	movzbl (%rax),%eax
  411933:	3c 0a                	cmp    $0xa,%al
  411935:	75 de                	jne    411915 <PlatformReadFile+0x154>
  411937:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41193b:	c9                   	leaveq 
  41193c:	c3                   	retq   

000000000041193d <PicocPlatformScanFile>:
  41193d:	55                   	push   %rbp
  41193e:	48 89 e5             	mov    %rsp,%rbp
  411941:	48 83 ec 20          	sub    $0x20,%rsp
  411945:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411949:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41194d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411955:	48 89 d6             	mov    %rdx,%rsi
  411958:	48 89 c7             	mov    %rax,%rdi
  41195b:	e8 61 fe ff ff       	callq  4117c1 <PlatformReadFile>
  411960:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  411964:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  411969:	74 2c                	je     411997 <PicocPlatformScanFile+0x5a>
  41196b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41196f:	0f b6 00             	movzbl (%rax),%eax
  411972:	3c 23                	cmp    $0x23,%al
  411974:	75 21                	jne    411997 <PicocPlatformScanFile+0x5a>
  411976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41197a:	48 83 c0 01          	add    $0x1,%rax
  41197e:	0f b6 00             	movzbl (%rax),%eax
  411981:	3c 21                	cmp    $0x21,%al
  411983:	75 12                	jne    411997 <PicocPlatformScanFile+0x5a>
  411985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411989:	c6 00 2f             	movb   $0x2f,(%rax)
  41198c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411990:	48 83 c0 01          	add    $0x1,%rax
  411994:	c6 00 2f             	movb   $0x2f,(%rax)
  411997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41199b:	48 89 c7             	mov    %rax,%rdi
  41199e:	e8 5d 11 ff ff       	callq  402b00 <strlen@plt>
  4119a3:	89 c1                	mov    %eax,%ecx
  4119a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4119a9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  4119ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4119b1:	6a 01                	pushq  $0x1
  4119b3:	6a 01                	pushq  $0x1
  4119b5:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4119bb:	41 b8 01 00 00 00    	mov    $0x1,%r8d
  4119c1:	48 89 c7             	mov    %rax,%rdi
  4119c4:	e8 b2 74 ff ff       	callq  408e7b <PicocParse>
  4119c9:	48 83 c4 10          	add    $0x10,%rsp
  4119cd:	90                   	nop
  4119ce:	c9                   	leaveq 
  4119cf:	c3                   	retq   

00000000004119d0 <PlatformExit>:
  4119d0:	55                   	push   %rbp
  4119d1:	48 89 e5             	mov    %rsp,%rbp
  4119d4:	48 83 ec 10          	sub    $0x10,%rsp
  4119d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4119dc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4119df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4119e3:	8b 55 f4             	mov    -0xc(%rbp),%edx
  4119e6:	89 90 10 0a 00 00    	mov    %edx,0xa10(%rax)
  4119ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4119f0:	48 05 18 10 00 00    	add    $0x1018,%rax
  4119f6:	be 01 00 00 00       	mov    $0x1,%esi
  4119fb:	48 89 c7             	mov    %rax,%rdi
  4119fe:	e8 8d 16 ff ff       	callq  403090 <longjmp@plt>

0000000000411a03 <UnixSetupFunc>:
  411a03:	55                   	push   %rbp
  411a04:	48 89 e5             	mov    %rsp,%rbp
  411a07:	90                   	nop
  411a08:	5d                   	pop    %rbp
  411a09:	c3                   	retq   

0000000000411a0a <Ctest>:
  411a0a:	55                   	push   %rbp
  411a0b:	48 89 e5             	mov    %rsp,%rbp
  411a0e:	48 83 ec 20          	sub    $0x20,%rsp
  411a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411a16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  411a1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  411a1e:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  411a21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a25:	48 8b 00             	mov    (%rax),%rax
  411a28:	48 8b 40 08          	mov    0x8(%rax),%rax
  411a2c:	8b 00                	mov    (%rax),%eax
  411a2e:	89 c6                	mov    %eax,%esi
  411a30:	bf 53 92 41 00       	mov    $0x419253,%edi
  411a35:	b8 00 00 00 00       	mov    $0x0,%eax
  411a3a:	e8 41 11 ff ff       	callq  402b80 <printf@plt>
  411a3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411a43:	48 8b 00             	mov    (%rax),%rax
  411a46:	48 8b 40 08          	mov    0x8(%rax),%rax
  411a4a:	c7 00 d2 04 00 00    	movl   $0x4d2,(%rax)
  411a50:	90                   	nop
  411a51:	c9                   	leaveq 
  411a52:	c3                   	retq   

0000000000411a53 <Clineno>:
  411a53:	55                   	push   %rbp
  411a54:	48 89 e5             	mov    %rsp,%rbp
  411a57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411a5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  411a5f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  411a63:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  411a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411a6a:	0f b7 50 18          	movzwl 0x18(%rax),%edx
  411a6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411a72:	48 8b 40 08          	mov    0x8(%rax),%rax
  411a76:	0f bf d2             	movswl %dx,%edx
  411a79:	89 10                	mov    %edx,(%rax)
  411a7b:	90                   	nop
  411a7c:	5d                   	pop    %rbp
  411a7d:	c3                   	retq   

0000000000411a7e <PlatformLibraryInit>:
  411a7e:	55                   	push   %rbp
  411a7f:	48 89 e5             	mov    %rsp,%rbp
  411a82:	48 83 ec 10          	sub    $0x10,%rsp
  411a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411a8e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  411a94:	b9 80 fa 61 00       	mov    $0x61fa80,%ecx
  411a99:	ba 03 1a 41 00       	mov    $0x411a03,%edx
  411a9e:	be 7b 92 41 00       	mov    $0x41927b,%esi
  411aa3:	48 89 c7             	mov    %rax,%rdi
  411aa6:	e8 74 f5 ff ff       	callq  41101f <IncludeRegister>
  411aab:	90                   	nop
  411aac:	c9                   	leaveq 
  411aad:	c3                   	retq   

0000000000411aae <BasicIOInit>:
  411aae:	55                   	push   %rbp
  411aaf:	48 89 e5             	mov    %rsp,%rbp
  411ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411ab6:	48 8b 15 a3 ed 20 00 	mov    0x20eda3(%rip),%rdx        # 620860 <stdout@@GLIBC_2.2.5>
  411abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411ac1:	48 89 90 30 0f 00 00 	mov    %rdx,0xf30(%rax)
  411ac8:	48 8b 05 a1 ed 20 00 	mov    0x20eda1(%rip),%rax        # 620870 <stdin@@GLIBC_2.2.5>
  411acf:	48 89 05 22 ee 20 00 	mov    %rax,0x20ee22(%rip)        # 6208f8 <stdinValue>
  411ad6:	48 8b 05 83 ed 20 00 	mov    0x20ed83(%rip),%rax        # 620860 <stdout@@GLIBC_2.2.5>
  411add:	48 89 05 1c ee 20 00 	mov    %rax,0x20ee1c(%rip)        # 620900 <stdoutValue>
  411ae4:	48 8b 05 d5 ed 20 00 	mov    0x20edd5(%rip),%rax        # 6208c0 <stderr@@GLIBC_2.2.5>
  411aeb:	48 89 05 16 ee 20 00 	mov    %rax,0x20ee16(%rip)        # 620908 <stderrValue>
  411af2:	90                   	nop
  411af3:	5d                   	pop    %rbp
  411af4:	c3                   	retq   

0000000000411af5 <StdioOutPutc>:
  411af5:	55                   	push   %rbp
  411af6:	48 89 e5             	mov    %rsp,%rbp
  411af9:	48 83 ec 10          	sub    $0x10,%rsp
  411afd:	89 7d fc             	mov    %edi,-0x4(%rbp)
  411b00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  411b04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b08:	48 8b 00             	mov    (%rax),%rax
  411b0b:	48 85 c0             	test   %rax,%rax
  411b0e:	74 27                	je     411b37 <StdioOutPutc+0x42>
  411b10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b14:	48 8b 10             	mov    (%rax),%rdx
  411b17:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411b1a:	48 89 d6             	mov    %rdx,%rsi
  411b1d:	89 c7                	mov    %eax,%edi
  411b1f:	e8 8c 10 ff ff       	callq  402bb0 <_IO_putc@plt>
  411b24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b28:	8b 40 14             	mov    0x14(%rax),%eax
  411b2b:	8d 50 01             	lea    0x1(%rax),%edx
  411b2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b32:	89 50 14             	mov    %edx,0x14(%rax)
  411b35:	eb 66                	jmp    411b9d <StdioOutPutc+0xa8>
  411b37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b3b:	8b 40 10             	mov    0x10(%rax),%eax
  411b3e:	85 c0                	test   %eax,%eax
  411b40:	78 0c                	js     411b4e <StdioOutPutc+0x59>
  411b42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b46:	8b 40 10             	mov    0x10(%rax),%eax
  411b49:	83 f8 01             	cmp    $0x1,%eax
  411b4c:	7e 4f                	jle    411b9d <StdioOutPutc+0xa8>
  411b4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b52:	48 8b 40 08          	mov    0x8(%rax),%rax
  411b56:	8b 55 fc             	mov    -0x4(%rbp),%edx
  411b59:	88 10                	mov    %dl,(%rax)
  411b5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b5f:	48 8b 40 08          	mov    0x8(%rax),%rax
  411b63:	48 8d 50 01          	lea    0x1(%rax),%rdx
  411b67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b6b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411b6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b73:	8b 40 10             	mov    0x10(%rax),%eax
  411b76:	83 f8 01             	cmp    $0x1,%eax
  411b79:	7e 11                	jle    411b8c <StdioOutPutc+0x97>
  411b7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b7f:	8b 40 10             	mov    0x10(%rax),%eax
  411b82:	8d 50 ff             	lea    -0x1(%rax),%edx
  411b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b89:	89 50 10             	mov    %edx,0x10(%rax)
  411b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b90:	8b 40 14             	mov    0x14(%rax),%eax
  411b93:	8d 50 01             	lea    0x1(%rax),%edx
  411b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411b9a:	89 50 14             	mov    %edx,0x14(%rax)
  411b9d:	90                   	nop
  411b9e:	c9                   	leaveq 
  411b9f:	c3                   	retq   

0000000000411ba0 <StdioOutPuts>:
  411ba0:	55                   	push   %rbp
  411ba1:	48 89 e5             	mov    %rsp,%rbp
  411ba4:	48 83 ec 10          	sub    $0x10,%rsp
  411ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  411bac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  411bb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411bb4:	48 8b 00             	mov    (%rax),%rax
  411bb7:	48 85 c0             	test   %rax,%rax
  411bba:	0f 84 87 00 00 00    	je     411c47 <StdioOutPuts+0xa7>
  411bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411bc4:	48 8b 10             	mov    (%rax),%rdx
  411bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411bcb:	48 89 d6             	mov    %rdx,%rsi
  411bce:	48 89 c7             	mov    %rax,%rdi
  411bd1:	e8 6a 10 ff ff       	callq  402c40 <fputs@plt>
  411bd6:	eb 7a                	jmp    411c52 <StdioOutPuts+0xb2>
  411bd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411bdc:	8b 40 10             	mov    0x10(%rax),%eax
  411bdf:	85 c0                	test   %eax,%eax
  411be1:	78 0c                	js     411bef <StdioOutPuts+0x4f>
  411be3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411be7:	8b 40 10             	mov    0x10(%rax),%eax
  411bea:	83 f8 01             	cmp    $0x1,%eax
  411bed:	7e 58                	jle    411c47 <StdioOutPuts+0xa7>
  411bef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411bf3:	48 8b 40 08          	mov    0x8(%rax),%rax
  411bf7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  411bfb:	0f b6 12             	movzbl (%rdx),%edx
  411bfe:	88 10                	mov    %dl,(%rax)
  411c00:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  411c05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c09:	48 8b 40 08          	mov    0x8(%rax),%rax
  411c0d:	48 8d 50 01          	lea    0x1(%rax),%rdx
  411c11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c15:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411c19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c1d:	8b 40 10             	mov    0x10(%rax),%eax
  411c20:	83 f8 01             	cmp    $0x1,%eax
  411c23:	7e 11                	jle    411c36 <StdioOutPuts+0x96>
  411c25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c29:	8b 40 10             	mov    0x10(%rax),%eax
  411c2c:	8d 50 ff             	lea    -0x1(%rax),%edx
  411c2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c33:	89 50 10             	mov    %edx,0x10(%rax)
  411c36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c3a:	8b 40 14             	mov    0x14(%rax),%eax
  411c3d:	8d 50 01             	lea    0x1(%rax),%edx
  411c40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  411c44:	89 50 14             	mov    %edx,0x14(%rax)
  411c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  411c4b:	0f b6 00             	movzbl (%rax),%eax
  411c4e:	84 c0                	test   %al,%al
  411c50:	75 86                	jne    411bd8 <StdioOutPuts+0x38>
  411c52:	90                   	nop
  411c53:	c9                   	leaveq 
  411c54:	c3                   	retq   

0000000000411c55 <StdioFprintfWord>:
  411c55:	55                   	push   %rbp
  411c56:	48 89 e5             	mov    %rsp,%rbp
  411c59:	48 83 ec 30          	sub    $0x30,%rsp
  411c5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411c61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  411c65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  411c69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411c6d:	48 8b 00             	mov    (%rax),%rax
  411c70:	48 85 c0             	test   %rax,%rax
  411c73:	74 36                	je     411cab <StdioFprintfWord+0x56>
  411c75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411c79:	48 8b 00             	mov    (%rax),%rax
  411c7c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411c80:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  411c84:	48 89 ce             	mov    %rcx,%rsi
  411c87:	48 89 c7             	mov    %rax,%rdi
  411c8a:	b8 00 00 00 00       	mov    $0x0,%eax
  411c8f:	e8 9c 11 ff ff       	callq  402e30 <fprintf@plt>
  411c94:	89 c2                	mov    %eax,%edx
  411c96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411c9a:	8b 40 14             	mov    0x14(%rax),%eax
  411c9d:	01 c2                	add    %eax,%edx
  411c9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ca3:	89 50 14             	mov    %edx,0x14(%rax)
  411ca6:	e9 c3 00 00 00       	jmpq   411d6e <StdioFprintfWord+0x119>
  411cab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411caf:	8b 40 10             	mov    0x10(%rax),%eax
  411cb2:	85 c0                	test   %eax,%eax
  411cb4:	78 6a                	js     411d20 <StdioFprintfWord+0xcb>
  411cb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411cba:	8b 40 10             	mov    0x10(%rax),%eax
  411cbd:	48 63 f0             	movslq %eax,%rsi
  411cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411cc4:	48 8b 40 08          	mov    0x8(%rax),%rax
  411cc8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411ccc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411cd0:	48 89 c7             	mov    %rax,%rdi
  411cd3:	b8 00 00 00 00       	mov    $0x0,%eax
  411cd8:	e8 f3 0e ff ff       	callq  402bd0 <snprintf@plt>
  411cdd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411ce0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ce4:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411ce8:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411ceb:	48 98                	cltq   
  411ced:	48 01 c2             	add    %rax,%rdx
  411cf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411cf4:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411cf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411cfc:	8b 40 10             	mov    0x10(%rax),%eax
  411cff:	2b 45 f8             	sub    -0x8(%rbp),%eax
  411d02:	89 c2                	mov    %eax,%edx
  411d04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d08:	89 50 10             	mov    %edx,0x10(%rax)
  411d0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d0f:	8b 50 14             	mov    0x14(%rax),%edx
  411d12:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411d15:	01 c2                	add    %eax,%edx
  411d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d1b:	89 50 14             	mov    %edx,0x14(%rax)
  411d1e:	eb 4e                	jmp    411d6e <StdioFprintfWord+0x119>
  411d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d24:	48 8b 40 08          	mov    0x8(%rax),%rax
  411d28:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411d2c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  411d30:	48 89 ce             	mov    %rcx,%rsi
  411d33:	48 89 c7             	mov    %rax,%rdi
  411d36:	b8 00 00 00 00       	mov    $0x0,%eax
  411d3b:	e8 f0 14 ff ff       	callq  403230 <sprintf@plt>
  411d40:	89 45 fc             	mov    %eax,-0x4(%rbp)
  411d43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d47:	8b 50 14             	mov    0x14(%rax),%edx
  411d4a:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411d4d:	01 c2                	add    %eax,%edx
  411d4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d53:	89 50 14             	mov    %edx,0x14(%rax)
  411d56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d5a:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411d5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411d61:	48 98                	cltq   
  411d63:	48 01 c2             	add    %rax,%rdx
  411d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d6a:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411d6e:	90                   	nop
  411d6f:	c9                   	leaveq 
  411d70:	c3                   	retq   

0000000000411d71 <StdioFprintfFP>:
  411d71:	55                   	push   %rbp
  411d72:	48 89 e5             	mov    %rsp,%rbp
  411d75:	48 83 ec 30          	sub    $0x30,%rsp
  411d79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411d7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  411d81:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
  411d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d8a:	48 8b 00             	mov    (%rax),%rax
  411d8d:	48 85 c0             	test   %rax,%rax
  411d90:	74 3f                	je     411dd1 <StdioFprintfFP+0x60>
  411d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411d96:	48 8b 00             	mov    (%rax),%rax
  411d99:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411d9d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411da1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  411da5:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
  411daa:	48 89 d6             	mov    %rdx,%rsi
  411dad:	48 89 c7             	mov    %rax,%rdi
  411db0:	b8 01 00 00 00       	mov    $0x1,%eax
  411db5:	e8 76 10 ff ff       	callq  402e30 <fprintf@plt>
  411dba:	89 c2                	mov    %eax,%edx
  411dbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411dc0:	8b 40 14             	mov    0x14(%rax),%eax
  411dc3:	01 c2                	add    %eax,%edx
  411dc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411dc9:	89 50 14             	mov    %edx,0x14(%rax)
  411dcc:	e9 d8 00 00 00       	jmpq   411ea9 <StdioFprintfFP+0x138>
  411dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411dd5:	8b 40 10             	mov    0x10(%rax),%eax
  411dd8:	85 c0                	test   %eax,%eax
  411dda:	78 76                	js     411e52 <StdioFprintfFP+0xe1>
  411ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411de0:	8b 40 10             	mov    0x10(%rax),%eax
  411de3:	48 63 c8             	movslq %eax,%rcx
  411de6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411dea:	48 8b 40 08          	mov    0x8(%rax),%rax
  411dee:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  411df2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411df6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  411dfa:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
  411dff:	48 89 ce             	mov    %rcx,%rsi
  411e02:	48 89 c7             	mov    %rax,%rdi
  411e05:	b8 01 00 00 00       	mov    $0x1,%eax
  411e0a:	e8 c1 0d ff ff       	callq  402bd0 <snprintf@plt>
  411e0f:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411e12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e16:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411e1a:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411e1d:	48 98                	cltq   
  411e1f:	48 01 c2             	add    %rax,%rdx
  411e22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e26:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411e2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e2e:	8b 40 10             	mov    0x10(%rax),%eax
  411e31:	2b 45 f8             	sub    -0x8(%rbp),%eax
  411e34:	89 c2                	mov    %eax,%edx
  411e36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e3a:	89 50 10             	mov    %edx,0x10(%rax)
  411e3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e41:	8b 50 14             	mov    0x14(%rax),%edx
  411e44:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411e47:	01 c2                	add    %eax,%edx
  411e49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e4d:	89 50 14             	mov    %edx,0x14(%rax)
  411e50:	eb 57                	jmp    411ea9 <StdioFprintfFP+0x138>
  411e52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e56:	48 8b 40 08          	mov    0x8(%rax),%rax
  411e5a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411e5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411e62:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  411e66:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
  411e6b:	48 89 d6             	mov    %rdx,%rsi
  411e6e:	48 89 c7             	mov    %rax,%rdi
  411e71:	b8 01 00 00 00       	mov    $0x1,%eax
  411e76:	e8 b5 13 ff ff       	callq  403230 <sprintf@plt>
  411e7b:	89 45 fc             	mov    %eax,-0x4(%rbp)
  411e7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e82:	8b 50 14             	mov    0x14(%rax),%edx
  411e85:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411e88:	01 c2                	add    %eax,%edx
  411e8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e8e:	89 50 14             	mov    %edx,0x14(%rax)
  411e91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411e95:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411e99:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411e9c:	48 98                	cltq   
  411e9e:	48 01 c2             	add    %rax,%rdx
  411ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ea5:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411ea9:	90                   	nop
  411eaa:	c9                   	leaveq 
  411eab:	c3                   	retq   

0000000000411eac <StdioFprintfPointer>:
  411eac:	55                   	push   %rbp
  411ead:	48 89 e5             	mov    %rsp,%rbp
  411eb0:	48 83 ec 30          	sub    $0x30,%rsp
  411eb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  411eb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  411ebc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  411ec0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ec4:	48 8b 00             	mov    (%rax),%rax
  411ec7:	48 85 c0             	test   %rax,%rax
  411eca:	74 36                	je     411f02 <StdioFprintfPointer+0x56>
  411ecc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ed0:	48 8b 00             	mov    (%rax),%rax
  411ed3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411ed7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  411edb:	48 89 ce             	mov    %rcx,%rsi
  411ede:	48 89 c7             	mov    %rax,%rdi
  411ee1:	b8 00 00 00 00       	mov    $0x0,%eax
  411ee6:	e8 45 0f ff ff       	callq  402e30 <fprintf@plt>
  411eeb:	89 c2                	mov    %eax,%edx
  411eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411ef1:	8b 40 14             	mov    0x14(%rax),%eax
  411ef4:	01 c2                	add    %eax,%edx
  411ef6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411efa:	89 50 14             	mov    %edx,0x14(%rax)
  411efd:	e9 c3 00 00 00       	jmpq   411fc5 <StdioFprintfPointer+0x119>
  411f02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f06:	8b 40 10             	mov    0x10(%rax),%eax
  411f09:	85 c0                	test   %eax,%eax
  411f0b:	78 6a                	js     411f77 <StdioFprintfPointer+0xcb>
  411f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f11:	8b 40 10             	mov    0x10(%rax),%eax
  411f14:	48 63 f0             	movslq %eax,%rsi
  411f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f1b:	48 8b 40 08          	mov    0x8(%rax),%rax
  411f1f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  411f23:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  411f27:	48 89 c7             	mov    %rax,%rdi
  411f2a:	b8 00 00 00 00       	mov    $0x0,%eax
  411f2f:	e8 9c 0c ff ff       	callq  402bd0 <snprintf@plt>
  411f34:	89 45 f8             	mov    %eax,-0x8(%rbp)
  411f37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f3b:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411f3f:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411f42:	48 98                	cltq   
  411f44:	48 01 c2             	add    %rax,%rdx
  411f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f53:	8b 40 10             	mov    0x10(%rax),%eax
  411f56:	2b 45 f8             	sub    -0x8(%rbp),%eax
  411f59:	89 c2                	mov    %eax,%edx
  411f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f5f:	89 50 10             	mov    %edx,0x10(%rax)
  411f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f66:	8b 50 14             	mov    0x14(%rax),%edx
  411f69:	8b 45 f8             	mov    -0x8(%rbp),%eax
  411f6c:	01 c2                	add    %eax,%edx
  411f6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f72:	89 50 14             	mov    %edx,0x14(%rax)
  411f75:	eb 4e                	jmp    411fc5 <StdioFprintfPointer+0x119>
  411f77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f7b:	48 8b 40 08          	mov    0x8(%rax),%rax
  411f7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  411f83:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  411f87:	48 89 ce             	mov    %rcx,%rsi
  411f8a:	48 89 c7             	mov    %rax,%rdi
  411f8d:	b8 00 00 00 00       	mov    $0x0,%eax
  411f92:	e8 99 12 ff ff       	callq  403230 <sprintf@plt>
  411f97:	89 45 fc             	mov    %eax,-0x4(%rbp)
  411f9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411f9e:	8b 50 14             	mov    0x14(%rax),%edx
  411fa1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411fa4:	01 c2                	add    %eax,%edx
  411fa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411faa:	89 50 14             	mov    %edx,0x14(%rax)
  411fad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411fb1:	48 8b 50 08          	mov    0x8(%rax),%rdx
  411fb5:	8b 45 fc             	mov    -0x4(%rbp),%eax
  411fb8:	48 98                	cltq   
  411fba:	48 01 c2             	add    %rax,%rdx
  411fbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  411fc1:	48 89 50 08          	mov    %rdx,0x8(%rax)
  411fc5:	90                   	nop
  411fc6:	c9                   	leaveq 
  411fc7:	c3                   	retq   

0000000000411fc8 <StdioBasePrintf>:
  411fc8:	55                   	push   %rbp
  411fc9:	48 89 e5             	mov    %rsp,%rbp
  411fcc:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  411fd3:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
  411fda:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  411fe1:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
  411fe8:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%rbp)
  411fee:	4c 89 85 28 ff ff ff 	mov    %r8,-0xd8(%rbp)
  411ff5:	4c 89 8d 20 ff ff ff 	mov    %r9,-0xe0(%rbp)
  411ffc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  412003:	48 8b 00             	mov    (%rax),%rax
  412006:	48 8b 00             	mov    (%rax),%rax
  412009:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  41200d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  412014:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  41201b:	48 8b 00             	mov    (%rax),%rax
  41201e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  412022:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  412029:	00 
  41202a:	75 0b                	jne    412037 <StdioBasePrintf+0x6f>
  41202c:	48 c7 85 28 ff ff ff 	movq   $0x4192a0,-0xd8(%rbp)
  412033:	a0 92 41 00 
  412037:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  41203e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  412042:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
  412049:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  412050:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  412057:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  41205e:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
  412064:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  41206a:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
  412071:	00 00 00 
  412074:	e9 4f 04 00 00       	jmpq   4124c8 <StdioBasePrintf+0x500>
  412079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41207d:	0f b6 00             	movzbl (%rax),%eax
  412080:	3c 25                	cmp    $0x25,%al
  412082:	0f 85 20 04 00 00    	jne    4124a8 <StdioBasePrintf+0x4e0>
  412088:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  41208d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
  412094:	00 
  412095:	c6 85 70 ff ff ff 25 	movb   $0x25,-0x90(%rbp)
  41209c:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
  4120a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4120a7:	0f b6 00             	movzbl (%rax),%eax
  4120aa:	0f be c0             	movsbl %al,%eax
  4120ad:	83 f8 78             	cmp    $0x78,%eax
  4120b0:	0f 87 b3 00 00 00    	ja     412169 <StdioBasePrintf+0x1a1>
  4120b6:	89 c0                	mov    %eax,%eax
  4120b8:	48 8b 04 c5 b8 92 41 	mov    0x4192b8(,%rax,8),%rax
  4120bf:	00 
  4120c0:	ff e0                	jmpq   *%rax
  4120c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4120c6:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  4120cc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4120d0:	e9 94 00 00 00       	jmpq   412169 <StdioBasePrintf+0x1a1>
  4120d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4120d9:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  4120df:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4120e3:	e9 81 00 00 00       	jmpq   412169 <StdioBasePrintf+0x1a1>
  4120e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4120ec:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  4120f2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4120f6:	eb 71                	jmp    412169 <StdioBasePrintf+0x1a1>
  4120f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4120fc:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  412102:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412106:	eb 61                	jmp    412169 <StdioBasePrintf+0x1a1>
  412108:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41210c:	48 8b 80 48 0e 00 00 	mov    0xe48(%rax),%rax
  412113:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412117:	eb 50                	jmp    412169 <StdioBasePrintf+0x1a1>
  412119:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41211d:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  412124:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412128:	eb 3f                	jmp    412169 <StdioBasePrintf+0x1a1>
  41212a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41212e:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  412134:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412138:	eb 2f                	jmp    412169 <StdioBasePrintf+0x1a1>
  41213a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41213e:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  412144:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412148:	eb 1f                	jmp    412169 <StdioBasePrintf+0x1a1>
  41214a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41214e:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  412154:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412158:	eb 0f                	jmp    412169 <StdioBasePrintf+0x1a1>
  41215a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41215e:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  412164:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412168:	90                   	nop
  412169:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41216d:	0f b6 10             	movzbl (%rax),%edx
  412170:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  412173:	48 98                	cltq   
  412175:	88 94 05 70 ff ff ff 	mov    %dl,-0x90(%rbp,%rax,1)
  41217c:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  412180:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412184:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  41218a:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  41218e:	0f 85 e9 00 00 00    	jne    41227d <StdioBasePrintf+0x2b5>
  412194:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412198:	0f b6 00             	movzbl (%rax),%eax
  41219b:	0f be c0             	movsbl %al,%eax
  41219e:	83 f8 25             	cmp    $0x25,%eax
  4121a1:	74 45                	je     4121e8 <StdioBasePrintf+0x220>
  4121a3:	83 f8 25             	cmp    $0x25,%eax
  4121a6:	7f 09                	jg     4121b1 <StdioBasePrintf+0x1e9>
  4121a8:	85 c0                	test   %eax,%eax
  4121aa:	74 59                	je     412205 <StdioBasePrintf+0x23d>
  4121ac:	e9 cc 00 00 00       	jmpq   41227d <StdioBasePrintf+0x2b5>
  4121b1:	83 f8 6d             	cmp    $0x6d,%eax
  4121b4:	74 0a                	je     4121c0 <StdioBasePrintf+0x1f8>
  4121b6:	83 f8 6e             	cmp    $0x6e,%eax
  4121b9:	74 74                	je     41222f <StdioBasePrintf+0x267>
  4121bb:	e9 bd 00 00 00       	jmpq   41227d <StdioBasePrintf+0x2b5>
  4121c0:	e8 bb 07 ff ff       	callq  402980 <__errno_location@plt>
  4121c5:	8b 00                	mov    (%rax),%eax
  4121c7:	89 c7                	mov    %eax,%edi
  4121c9:	e8 d2 10 ff ff       	callq  4032a0 <strerror@plt>
  4121ce:	48 89 c2             	mov    %rax,%rdx
  4121d1:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4121d8:	48 89 c6             	mov    %rax,%rsi
  4121db:	48 89 d7             	mov    %rdx,%rdi
  4121de:	e8 bd f9 ff ff       	callq  411ba0 <StdioOutPuts>
  4121e3:	e9 95 00 00 00       	jmpq   41227d <StdioBasePrintf+0x2b5>
  4121e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4121ec:	0f b6 00             	movzbl (%rax),%eax
  4121ef:	0f be c0             	movsbl %al,%eax
  4121f2:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  4121f9:	48 89 d6             	mov    %rdx,%rsi
  4121fc:	89 c7                	mov    %eax,%edi
  4121fe:	e8 f2 f8 ff ff       	callq  411af5 <StdioOutPutc>
  412203:	eb 78                	jmp    41227d <StdioBasePrintf+0x2b5>
  412205:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  412208:	48 98                	cltq   
  41220a:	c6 84 05 70 ff ff ff 	movb   $0x0,-0x90(%rbp,%rax,1)
  412211:	00 
  412212:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412216:	0f b6 00             	movzbl (%rax),%eax
  412219:	0f be c0             	movsbl %al,%eax
  41221c:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  412223:	48 89 d6             	mov    %rdx,%rsi
  412226:	89 c7                	mov    %eax,%edi
  412228:	e8 c8 f8 ff ff       	callq  411af5 <StdioOutPutc>
  41222d:	eb 4e                	jmp    41227d <StdioBasePrintf+0x2b5>
  41222f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412233:	48 89 c7             	mov    %rax,%rdi
  412236:	e8 cf b0 ff ff       	callq  40d30a <TypeStackSizeValue>
  41223b:	48 98                	cltq   
  41223d:	48 83 c0 2f          	add    $0x2f,%rax
  412241:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  412245:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  412249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41224d:	48 8b 00             	mov    (%rax),%rax
  412250:	8b 00                	mov    (%rax),%eax
  412252:	83 f8 0c             	cmp    $0xc,%eax
  412255:	75 25                	jne    41227c <StdioBasePrintf+0x2b4>
  412257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41225b:	48 8b 00             	mov    (%rax),%rax
  41225e:	48 8b 40 18          	mov    0x18(%rax),%rax
  412262:	8b 00                	mov    (%rax),%eax
  412264:	83 f8 01             	cmp    $0x1,%eax
  412267:	75 13                	jne    41227c <StdioBasePrintf+0x2b4>
  412269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41226d:	48 8b 40 08          	mov    0x8(%rax),%rax
  412271:	48 8b 00             	mov    (%rax),%rax
  412274:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
  41227a:	89 10                	mov    %edx,(%rax)
  41227c:	90                   	nop
  41227d:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  412282:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  412287:	75 0a                	jne    412293 <StdioBasePrintf+0x2cb>
  412289:	83 7d e4 4f          	cmpl   $0x4f,-0x1c(%rbp)
  41228d:	0f 8e 10 fe ff ff    	jle    4120a3 <StdioBasePrintf+0xdb>
  412293:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412297:	48 05 c8 0c 00 00    	add    $0xcc8,%rax
  41229d:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  4122a1:	0f 84 21 02 00 00    	je     4124c8 <StdioBasePrintf+0x500>
  4122a7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
  4122ae:	8b 40 08             	mov    0x8(%rax),%eax
  4122b1:	39 45 f4             	cmp    %eax,-0xc(%rbp)
  4122b4:	7c 19                	jl     4122cf <StdioBasePrintf+0x307>
  4122b6:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4122bd:	48 89 c6             	mov    %rax,%rsi
  4122c0:	bf af 92 41 00       	mov    $0x4192af,%edi
  4122c5:	e8 d6 f8 ff ff       	callq  411ba0 <StdioOutPuts>
  4122ca:	e9 f9 01 00 00       	jmpq   4124c8 <StdioBasePrintf+0x500>
  4122cf:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  4122d2:	48 98                	cltq   
  4122d4:	c6 84 05 70 ff ff ff 	movb   $0x0,-0x90(%rbp,%rax,1)
  4122db:	00 
  4122dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4122e0:	48 89 c7             	mov    %rax,%rdi
  4122e3:	e8 22 b0 ff ff       	callq  40d30a <TypeStackSizeValue>
  4122e8:	48 98                	cltq   
  4122ea:	48 83 c0 2f          	add    $0x2f,%rax
  4122ee:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  4122f2:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  4122f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4122fa:	48 05 c8 0a 00 00    	add    $0xac8,%rax
  412300:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  412304:	75 61                	jne    412367 <StdioBasePrintf+0x39f>
  412306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41230a:	48 8b 00             	mov    (%rax),%rax
  41230d:	8b 00                	mov    (%rax),%eax
  41230f:	85 c0                	test   %eax,%eax
  412311:	74 3b                	je     41234e <StdioBasePrintf+0x386>
  412313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412317:	48 8b 00             	mov    (%rax),%rax
  41231a:	8b 00                	mov    (%rax),%eax
  41231c:	83 f8 08             	cmp    $0x8,%eax
  41231f:	77 2d                	ja     41234e <StdioBasePrintf+0x386>
  412321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412325:	48 89 c7             	mov    %rax,%rdi
  412328:	e8 87 6f ff ff       	callq  4092b4 <ExpressionCoerceUnsignedInteger>
  41232d:	48 89 c2             	mov    %rax,%rdx
  412330:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  412337:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  41233e:	48 89 ce             	mov    %rcx,%rsi
  412341:	48 89 c7             	mov    %rax,%rdi
  412344:	e8 0c f9 ff ff       	callq  411c55 <StdioFprintfWord>
  412349:	e9 54 01 00 00       	jmpq   4124a2 <StdioBasePrintf+0x4da>
  41234e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  412355:	48 89 c6             	mov    %rax,%rsi
  412358:	bf af 92 41 00       	mov    $0x4192af,%edi
  41235d:	e8 3e f8 ff ff       	callq  411ba0 <StdioOutPuts>
  412362:	e9 3b 01 00 00       	jmpq   4124a2 <StdioBasePrintf+0x4da>
  412367:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41236b:	48 8b 80 48 0e 00 00 	mov    0xe48(%rax),%rax
  412372:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  412376:	0f 85 99 00 00 00    	jne    412415 <StdioBasePrintf+0x44d>
  41237c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412380:	48 8b 00             	mov    (%rax),%rax
  412383:	8b 00                	mov    (%rax),%eax
  412385:	83 f8 0b             	cmp    $0xb,%eax
  412388:	75 29                	jne    4123b3 <StdioBasePrintf+0x3eb>
  41238a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41238e:	48 8b 40 08          	mov    0x8(%rax),%rax
  412392:	48 8b 10             	mov    (%rax),%rdx
  412395:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  41239c:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4123a3:	48 89 ce             	mov    %rcx,%rsi
  4123a6:	48 89 c7             	mov    %rax,%rdi
  4123a9:	e8 fe fa ff ff       	callq  411eac <StdioFprintfPointer>
  4123ae:	e9 ef 00 00 00       	jmpq   4124a2 <StdioBasePrintf+0x4da>
  4123b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4123b7:	48 8b 00             	mov    (%rax),%rax
  4123ba:	8b 00                	mov    (%rax),%eax
  4123bc:	83 f8 0c             	cmp    $0xc,%eax
  4123bf:	75 3b                	jne    4123fc <StdioBasePrintf+0x434>
  4123c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4123c5:	48 8b 00             	mov    (%rax),%rax
  4123c8:	48 8b 40 18          	mov    0x18(%rax),%rax
  4123cc:	8b 00                	mov    (%rax),%eax
  4123ce:	83 f8 03             	cmp    $0x3,%eax
  4123d1:	75 29                	jne    4123fc <StdioBasePrintf+0x434>
  4123d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4123d7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4123db:	48 89 c2             	mov    %rax,%rdx
  4123de:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  4123e5:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  4123ec:	48 89 ce             	mov    %rcx,%rsi
  4123ef:	48 89 c7             	mov    %rax,%rdi
  4123f2:	e8 b5 fa ff ff       	callq  411eac <StdioFprintfPointer>
  4123f7:	e9 a6 00 00 00       	jmpq   4124a2 <StdioBasePrintf+0x4da>
  4123fc:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  412403:	48 89 c6             	mov    %rax,%rsi
  412406:	bf af 92 41 00       	mov    $0x4192af,%edi
  41240b:	e8 90 f7 ff ff       	callq  411ba0 <StdioOutPuts>
  412410:	e9 8d 00 00 00       	jmpq   4124a2 <StdioBasePrintf+0x4da>
  412415:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412419:	48 8b 80 60 0e 00 00 	mov    0xe60(%rax),%rax
  412420:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
  412424:	75 7c                	jne    4124a2 <StdioBasePrintf+0x4da>
  412426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41242a:	48 8b 00             	mov    (%rax),%rax
  41242d:	8b 00                	mov    (%rax),%eax
  41242f:	83 f8 0b             	cmp    $0xb,%eax
  412432:	75 26                	jne    41245a <StdioBasePrintf+0x492>
  412434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  412438:	48 8b 40 08          	mov    0x8(%rax),%rax
  41243c:	48 8b 10             	mov    (%rax),%rdx
  41243f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  412446:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  41244d:	48 89 ce             	mov    %rcx,%rsi
  412450:	48 89 c7             	mov    %rax,%rdi
  412453:	e8 54 fa ff ff       	callq  411eac <StdioFprintfPointer>
  412458:	eb 48                	jmp    4124a2 <StdioBasePrintf+0x4da>
  41245a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41245e:	48 8b 00             	mov    (%rax),%rax
  412461:	8b 00                	mov    (%rax),%eax
  412463:	83 f8 0c             	cmp    $0xc,%eax
  412466:	75 26                	jne    41248e <StdioBasePrintf+0x4c6>
  412468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41246c:	48 8b 40 08          	mov    0x8(%rax),%rax
  412470:	48 89 c2             	mov    %rax,%rdx
  412473:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
  41247a:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  412481:	48 89 ce             	mov    %rcx,%rsi
  412484:	48 89 c7             	mov    %rax,%rdi
  412487:	e8 20 fa ff ff       	callq  411eac <StdioFprintfPointer>
  41248c:	eb 14                	jmp    4124a2 <StdioBasePrintf+0x4da>
  41248e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
  412495:	48 89 c6             	mov    %rax,%rsi
  412498:	bf af 92 41 00       	mov    $0x4192af,%edi
  41249d:	e8 fe f6 ff ff       	callq  411ba0 <StdioOutPuts>
  4124a2:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  4124a6:	eb 20                	jmp    4124c8 <StdioBasePrintf+0x500>
  4124a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4124ac:	0f b6 00             	movzbl (%rax),%eax
  4124af:	0f be c0             	movsbl %al,%eax
  4124b2:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  4124b9:	48 89 d6             	mov    %rdx,%rsi
  4124bc:	89 c7                	mov    %eax,%edi
  4124be:	e8 32 f6 ff ff       	callq  411af5 <StdioOutPutc>
  4124c3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  4124c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4124cc:	0f b6 00             	movzbl (%rax),%eax
  4124cf:	84 c0                	test   %al,%al
  4124d1:	0f 85 a2 fb ff ff    	jne    412079 <StdioBasePrintf+0xb1>
  4124d7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4124de:	48 85 c0             	test   %rax,%rax
  4124e1:	74 14                	je     4124f7 <StdioBasePrintf+0x52f>
  4124e3:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
  4124e9:	85 c0                	test   %eax,%eax
  4124eb:	7e 0a                	jle    4124f7 <StdioBasePrintf+0x52f>
  4124ed:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  4124f4:	c6 00 00             	movb   $0x0,(%rax)
  4124f7:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
  4124fd:	c9                   	leaveq 
  4124fe:	c3                   	retq   

00000000004124ff <StdioBaseScanf>:
  4124ff:	55                   	push   %rbp
  412500:	48 89 e5             	mov    %rsp,%rbp
  412503:	41 55                	push   %r13
  412505:	41 54                	push   %r12
  412507:	53                   	push   %rbx
  412508:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  41250f:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  412516:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
  41251d:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
  412524:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
  41252b:	4c 89 85 58 ff ff ff 	mov    %r8,-0xa8(%rbp)
  412532:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  412539:	48 8b 00             	mov    (%rax),%rax
  41253c:	48 8b 00             	mov    (%rax),%rax
  41253f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  412543:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  41254a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  412551:	8b 40 08             	mov    0x8(%rax),%eax
  412554:	83 f8 0a             	cmp    $0xa,%eax
  412557:	7e 1e                	jle    412577 <StdioBaseScanf+0x78>
  412559:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  412560:	ba 0a 00 00 00       	mov    $0xa,%edx
  412565:	be 80 96 41 00       	mov    $0x419680,%esi
  41256a:	48 89 c7             	mov    %rax,%rdi
  41256d:	b8 00 00 00 00       	mov    $0x0,%eax
  412572:	e8 67 e1 ff ff       	callq  4106de <ProgramFail>
  412577:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  41257e:	e9 87 00 00 00       	jmpq   41260a <StdioBaseScanf+0x10b>
  412583:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412587:	48 89 c7             	mov    %rax,%rdi
  41258a:	e8 7b ad ff ff       	callq  40d30a <TypeStackSizeValue>
  41258f:	48 98                	cltq   
  412591:	48 83 c0 2f          	add    $0x2f,%rax
  412595:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
  412599:	48 01 45 d8          	add    %rax,-0x28(%rbp)
  41259d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125a1:	48 8b 00             	mov    (%rax),%rax
  4125a4:	8b 00                	mov    (%rax),%eax
  4125a6:	83 f8 0b             	cmp    $0xb,%eax
  4125a9:	75 17                	jne    4125c2 <StdioBaseScanf+0xc3>
  4125ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125af:	48 8b 40 08          	mov    0x8(%rax),%rax
  4125b3:	48 8b 10             	mov    (%rax),%rdx
  4125b6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4125b9:	48 98                	cltq   
  4125bb:	48 89 54 c5 80       	mov    %rdx,-0x80(%rbp,%rax,8)
  4125c0:	eb 44                	jmp    412606 <StdioBaseScanf+0x107>
  4125c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125c6:	48 8b 00             	mov    (%rax),%rax
  4125c9:	8b 00                	mov    (%rax),%eax
  4125cb:	83 f8 0c             	cmp    $0xc,%eax
  4125ce:	75 17                	jne    4125e7 <StdioBaseScanf+0xe8>
  4125d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4125d4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4125d8:	48 89 c2             	mov    %rax,%rdx
  4125db:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4125de:	48 98                	cltq   
  4125e0:	48 89 54 c5 80       	mov    %rdx,-0x80(%rbp,%rax,8)
  4125e5:	eb 1f                	jmp    412606 <StdioBaseScanf+0x107>
  4125e7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4125ea:	8d 50 01             	lea    0x1(%rax),%edx
  4125ed:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
  4125f4:	be a8 96 41 00       	mov    $0x4196a8,%esi
  4125f9:	48 89 c7             	mov    %rax,%rdi
  4125fc:	b8 00 00 00 00       	mov    $0x0,%eax
  412601:	e8 d8 e0 ff ff       	callq  4106de <ProgramFail>
  412606:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  41260a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
  412611:	8b 40 08             	mov    0x8(%rax),%eax
  412614:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
  412617:	0f 8c 66 ff ff ff    	jl     412583 <StdioBaseScanf+0x84>
  41261d:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)
  412624:	00 
  412625:	74 59                	je     412680 <StdioBaseScanf+0x181>
  412627:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  41262b:	4c 8b 5d c0          	mov    -0x40(%rbp),%r11
  41262f:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
  412633:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
  412637:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
  41263b:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  41263f:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
  412643:	4c 8b 65 90          	mov    -0x70(%rbp),%r12
  412647:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  41264b:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  41264f:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  412656:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
  41265d:	53                   	push   %rbx
  41265e:	41 53                	push   %r11
  412660:	41 52                	push   %r10
  412662:	41 51                	push   %r9
  412664:	41 50                	push   %r8
  412666:	57                   	push   %rdi
  412667:	4d 89 e9             	mov    %r13,%r9
  41266a:	4d 89 e0             	mov    %r12,%r8
  41266d:	48 89 c7             	mov    %rax,%rdi
  412670:	b8 00 00 00 00       	mov    $0x0,%eax
  412675:	e8 a6 03 ff ff       	callq  402a20 <__isoc99_fscanf@plt>
  41267a:	48 83 c4 30          	add    $0x30,%rsp
  41267e:	eb 57                	jmp    4126d7 <StdioBaseScanf+0x1d8>
  412680:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
  412684:	4c 8b 5d c0          	mov    -0x40(%rbp),%r11
  412688:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
  41268c:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
  412690:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
  412694:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
  412698:	4c 8b 6d 98          	mov    -0x68(%rbp),%r13
  41269c:	4c 8b 65 90          	mov    -0x70(%rbp),%r12
  4126a0:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
  4126a4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  4126a8:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
  4126af:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
  4126b6:	53                   	push   %rbx
  4126b7:	41 53                	push   %r11
  4126b9:	41 52                	push   %r10
  4126bb:	41 51                	push   %r9
  4126bd:	41 50                	push   %r8
  4126bf:	57                   	push   %rdi
  4126c0:	4d 89 e9             	mov    %r13,%r9
  4126c3:	4d 89 e0             	mov    %r12,%r8
  4126c6:	48 89 c7             	mov    %rax,%rdi
  4126c9:	b8 00 00 00 00       	mov    $0x0,%eax
  4126ce:	e8 7d 08 ff ff       	callq  402f50 <__isoc99_sscanf@plt>
  4126d3:	48 83 c4 30          	add    $0x30,%rsp
  4126d7:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
  4126db:	5b                   	pop    %rbx
  4126dc:	41 5c                	pop    %r12
  4126de:	41 5d                	pop    %r13
  4126e0:	5d                   	pop    %rbp
  4126e1:	c3                   	retq   

00000000004126e2 <StdioFopen>:
  4126e2:	55                   	push   %rbp
  4126e3:	48 89 e5             	mov    %rsp,%rbp
  4126e6:	53                   	push   %rbx
  4126e7:	48 83 ec 28          	sub    $0x28,%rsp
  4126eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4126ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4126f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4126f7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4126fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4126fe:	48 83 c0 08          	add    $0x8,%rax
  412702:	48 8b 00             	mov    (%rax),%rax
  412705:	48 8b 40 08          	mov    0x8(%rax),%rax
  412709:	48 8b 10             	mov    (%rax),%rdx
  41270c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412710:	48 8b 00             	mov    (%rax),%rax
  412713:	48 8b 40 08          	mov    0x8(%rax),%rax
  412717:	48 8b 00             	mov    (%rax),%rax
  41271a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41271e:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412722:	48 89 d6             	mov    %rdx,%rsi
  412725:	48 89 c7             	mov    %rax,%rdi
  412728:	e8 23 0a ff ff       	callq  403150 <fopen@plt>
  41272d:	48 89 03             	mov    %rax,(%rbx)
  412730:	90                   	nop
  412731:	48 83 c4 28          	add    $0x28,%rsp
  412735:	5b                   	pop    %rbx
  412736:	5d                   	pop    %rbp
  412737:	c3                   	retq   

0000000000412738 <StdioFreopen>:
  412738:	55                   	push   %rbp
  412739:	48 89 e5             	mov    %rsp,%rbp
  41273c:	53                   	push   %rbx
  41273d:	48 83 ec 28          	sub    $0x28,%rsp
  412741:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412745:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412749:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41274d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412750:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412754:	48 83 c0 10          	add    $0x10,%rax
  412758:	48 8b 00             	mov    (%rax),%rax
  41275b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41275f:	48 8b 10             	mov    (%rax),%rdx
  412762:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412766:	48 83 c0 08          	add    $0x8,%rax
  41276a:	48 8b 00             	mov    (%rax),%rax
  41276d:	48 8b 40 08          	mov    0x8(%rax),%rax
  412771:	48 8b 08             	mov    (%rax),%rcx
  412774:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412778:	48 8b 00             	mov    (%rax),%rax
  41277b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41277f:	48 8b 00             	mov    (%rax),%rax
  412782:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  412786:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  41278a:	48 89 ce             	mov    %rcx,%rsi
  41278d:	48 89 c7             	mov    %rax,%rdi
  412790:	e8 eb 04 ff ff       	callq  402c80 <freopen@plt>
  412795:	48 89 03             	mov    %rax,(%rbx)
  412798:	90                   	nop
  412799:	48 83 c4 28          	add    $0x28,%rsp
  41279d:	5b                   	pop    %rbx
  41279e:	5d                   	pop    %rbp
  41279f:	c3                   	retq   

00000000004127a0 <StdioFclose>:
  4127a0:	55                   	push   %rbp
  4127a1:	48 89 e5             	mov    %rsp,%rbp
  4127a4:	53                   	push   %rbx
  4127a5:	48 83 ec 28          	sub    $0x28,%rsp
  4127a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4127ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4127b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4127b5:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4127b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4127bc:	48 8b 00             	mov    (%rax),%rax
  4127bf:	48 8b 40 08          	mov    0x8(%rax),%rax
  4127c3:	48 8b 00             	mov    (%rax),%rax
  4127c6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4127ca:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4127ce:	48 89 c7             	mov    %rax,%rdi
  4127d1:	e8 fa 02 ff ff       	callq  402ad0 <fclose@plt>
  4127d6:	89 03                	mov    %eax,(%rbx)
  4127d8:	90                   	nop
  4127d9:	48 83 c4 28          	add    $0x28,%rsp
  4127dd:	5b                   	pop    %rbx
  4127de:	5d                   	pop    %rbp
  4127df:	c3                   	retq   

00000000004127e0 <StdioFread>:
  4127e0:	55                   	push   %rbp
  4127e1:	48 89 e5             	mov    %rsp,%rbp
  4127e4:	48 83 ec 20          	sub    $0x20,%rsp
  4127e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4127ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4127f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4127f4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4127f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4127fb:	48 83 c0 18          	add    $0x18,%rax
  4127ff:	48 8b 00             	mov    (%rax),%rax
  412802:	48 8b 40 08          	mov    0x8(%rax),%rax
  412806:	48 8b 08             	mov    (%rax),%rcx
  412809:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41280d:	48 83 c0 10          	add    $0x10,%rax
  412811:	48 8b 00             	mov    (%rax),%rax
  412814:	48 8b 40 08          	mov    0x8(%rax),%rax
  412818:	8b 00                	mov    (%rax),%eax
  41281a:	48 63 d0             	movslq %eax,%rdx
  41281d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412821:	48 83 c0 08          	add    $0x8,%rax
  412825:	48 8b 00             	mov    (%rax),%rax
  412828:	48 8b 40 08          	mov    0x8(%rax),%rax
  41282c:	8b 00                	mov    (%rax),%eax
  41282e:	48 63 f0             	movslq %eax,%rsi
  412831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412835:	48 8b 00             	mov    (%rax),%rax
  412838:	48 8b 40 08          	mov    0x8(%rax),%rax
  41283c:	48 8b 00             	mov    (%rax),%rax
  41283f:	48 89 c7             	mov    %rax,%rdi
  412842:	e8 29 02 ff ff       	callq  402a70 <fread@plt>
  412847:	48 89 c2             	mov    %rax,%rdx
  41284a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41284e:	48 8b 40 08          	mov    0x8(%rax),%rax
  412852:	89 10                	mov    %edx,(%rax)
  412854:	90                   	nop
  412855:	c9                   	leaveq 
  412856:	c3                   	retq   

0000000000412857 <StdioFwrite>:
  412857:	55                   	push   %rbp
  412858:	48 89 e5             	mov    %rsp,%rbp
  41285b:	48 83 ec 20          	sub    $0x20,%rsp
  41285f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412863:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412867:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41286b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41286e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412872:	48 83 c0 18          	add    $0x18,%rax
  412876:	48 8b 00             	mov    (%rax),%rax
  412879:	48 8b 40 08          	mov    0x8(%rax),%rax
  41287d:	48 8b 08             	mov    (%rax),%rcx
  412880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412884:	48 83 c0 10          	add    $0x10,%rax
  412888:	48 8b 00             	mov    (%rax),%rax
  41288b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41288f:	8b 00                	mov    (%rax),%eax
  412891:	48 63 d0             	movslq %eax,%rdx
  412894:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412898:	48 83 c0 08          	add    $0x8,%rax
  41289c:	48 8b 00             	mov    (%rax),%rax
  41289f:	48 8b 40 08          	mov    0x8(%rax),%rax
  4128a3:	8b 00                	mov    (%rax),%eax
  4128a5:	48 63 f0             	movslq %eax,%rsi
  4128a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4128ac:	48 8b 00             	mov    (%rax),%rax
  4128af:	48 8b 40 08          	mov    0x8(%rax),%rax
  4128b3:	48 8b 00             	mov    (%rax),%rax
  4128b6:	48 89 c7             	mov    %rax,%rdi
  4128b9:	e8 b2 09 ff ff       	callq  403270 <fwrite@plt>
  4128be:	48 89 c2             	mov    %rax,%rdx
  4128c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4128c5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4128c9:	89 10                	mov    %edx,(%rax)
  4128cb:	90                   	nop
  4128cc:	c9                   	leaveq 
  4128cd:	c3                   	retq   

00000000004128ce <StdioFgetc>:
  4128ce:	55                   	push   %rbp
  4128cf:	48 89 e5             	mov    %rsp,%rbp
  4128d2:	53                   	push   %rbx
  4128d3:	48 83 ec 28          	sub    $0x28,%rsp
  4128d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4128db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4128df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4128e3:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4128e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4128ea:	48 8b 00             	mov    (%rax),%rax
  4128ed:	48 8b 40 08          	mov    0x8(%rax),%rax
  4128f1:	48 8b 00             	mov    (%rax),%rax
  4128f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4128f8:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4128fc:	48 89 c7             	mov    %rax,%rdi
  4128ff:	e8 bc 03 ff ff       	callq  402cc0 <fgetc@plt>
  412904:	89 03                	mov    %eax,(%rbx)
  412906:	90                   	nop
  412907:	48 83 c4 28          	add    $0x28,%rsp
  41290b:	5b                   	pop    %rbx
  41290c:	5d                   	pop    %rbp
  41290d:	c3                   	retq   

000000000041290e <StdioFgets>:
  41290e:	55                   	push   %rbp
  41290f:	48 89 e5             	mov    %rsp,%rbp
  412912:	53                   	push   %rbx
  412913:	48 83 ec 28          	sub    $0x28,%rsp
  412917:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41291b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41291f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412923:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41292a:	48 83 c0 10          	add    $0x10,%rax
  41292e:	48 8b 00             	mov    (%rax),%rax
  412931:	48 8b 40 08          	mov    0x8(%rax),%rax
  412935:	48 8b 10             	mov    (%rax),%rdx
  412938:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41293c:	48 83 c0 08          	add    $0x8,%rax
  412940:	48 8b 00             	mov    (%rax),%rax
  412943:	48 8b 40 08          	mov    0x8(%rax),%rax
  412947:	8b 08                	mov    (%rax),%ecx
  412949:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41294d:	48 8b 00             	mov    (%rax),%rax
  412950:	48 8b 40 08          	mov    0x8(%rax),%rax
  412954:	48 8b 00             	mov    (%rax),%rax
  412957:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41295b:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  41295f:	89 ce                	mov    %ecx,%esi
  412961:	48 89 c7             	mov    %rax,%rdi
  412964:	e8 37 04 ff ff       	callq  402da0 <fgets@plt>
  412969:	48 89 03             	mov    %rax,(%rbx)
  41296c:	90                   	nop
  41296d:	48 83 c4 28          	add    $0x28,%rsp
  412971:	5b                   	pop    %rbx
  412972:	5d                   	pop    %rbp
  412973:	c3                   	retq   

0000000000412974 <StdioRemove>:
  412974:	55                   	push   %rbp
  412975:	48 89 e5             	mov    %rsp,%rbp
  412978:	53                   	push   %rbx
  412979:	48 83 ec 28          	sub    $0x28,%rsp
  41297d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412981:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412985:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412989:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41298c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412990:	48 8b 00             	mov    (%rax),%rax
  412993:	48 8b 40 08          	mov    0x8(%rax),%rax
  412997:	48 8b 00             	mov    (%rax),%rax
  41299a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41299e:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4129a2:	48 89 c7             	mov    %rax,%rdi
  4129a5:	e8 26 00 ff ff       	callq  4029d0 <remove@plt>
  4129aa:	89 03                	mov    %eax,(%rbx)
  4129ac:	90                   	nop
  4129ad:	48 83 c4 28          	add    $0x28,%rsp
  4129b1:	5b                   	pop    %rbx
  4129b2:	5d                   	pop    %rbp
  4129b3:	c3                   	retq   

00000000004129b4 <StdioRename>:
  4129b4:	55                   	push   %rbp
  4129b5:	48 89 e5             	mov    %rsp,%rbp
  4129b8:	53                   	push   %rbx
  4129b9:	48 83 ec 28          	sub    $0x28,%rsp
  4129bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4129c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4129c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4129c9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4129cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4129d0:	48 83 c0 08          	add    $0x8,%rax
  4129d4:	48 8b 00             	mov    (%rax),%rax
  4129d7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4129db:	48 8b 10             	mov    (%rax),%rdx
  4129de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4129e2:	48 8b 00             	mov    (%rax),%rax
  4129e5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4129e9:	48 8b 00             	mov    (%rax),%rax
  4129ec:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4129f0:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4129f4:	48 89 d6             	mov    %rdx,%rsi
  4129f7:	48 89 c7             	mov    %rax,%rdi
  4129fa:	e8 a1 07 ff ff       	callq  4031a0 <rename@plt>
  4129ff:	89 03                	mov    %eax,(%rbx)
  412a01:	90                   	nop
  412a02:	48 83 c4 28          	add    $0x28,%rsp
  412a06:	5b                   	pop    %rbx
  412a07:	5d                   	pop    %rbp
  412a08:	c3                   	retq   

0000000000412a09 <StdioRewind>:
  412a09:	55                   	push   %rbp
  412a0a:	48 89 e5             	mov    %rsp,%rbp
  412a0d:	48 83 ec 20          	sub    $0x20,%rsp
  412a11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412a15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412a19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412a1d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412a20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a24:	48 8b 00             	mov    (%rax),%rax
  412a27:	48 8b 40 08          	mov    0x8(%rax),%rax
  412a2b:	48 8b 00             	mov    (%rax),%rax
  412a2e:	48 89 c7             	mov    %rax,%rdi
  412a31:	e8 6a 01 ff ff       	callq  402ba0 <rewind@plt>
  412a36:	90                   	nop
  412a37:	c9                   	leaveq 
  412a38:	c3                   	retq   

0000000000412a39 <StdioTmpfile>:
  412a39:	55                   	push   %rbp
  412a3a:	48 89 e5             	mov    %rsp,%rbp
  412a3d:	53                   	push   %rbx
  412a3e:	48 83 ec 28          	sub    $0x28,%rsp
  412a42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412a46:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412a4a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412a4e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412a51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  412a55:	48 8b 58 08          	mov    0x8(%rax),%rbx
  412a59:	e8 82 03 ff ff       	callq  402de0 <tmpfile@plt>
  412a5e:	48 89 03             	mov    %rax,(%rbx)
  412a61:	90                   	nop
  412a62:	48 83 c4 28          	add    $0x28,%rsp
  412a66:	5b                   	pop    %rbx
  412a67:	5d                   	pop    %rbp
  412a68:	c3                   	retq   

0000000000412a69 <StdioClearerr>:
  412a69:	55                   	push   %rbp
  412a6a:	48 89 e5             	mov    %rsp,%rbp
  412a6d:	48 83 ec 20          	sub    $0x20,%rsp
  412a71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412a75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412a79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412a7d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412a84:	48 8b 00             	mov    (%rax),%rax
  412a87:	48 8b 40 08          	mov    0x8(%rax),%rax
  412a8b:	48 8b 00             	mov    (%rax),%rax
  412a8e:	48 89 c7             	mov    %rax,%rdi
  412a91:	e8 da 03 ff ff       	callq  402e70 <clearerr@plt>
  412a96:	90                   	nop
  412a97:	c9                   	leaveq 
  412a98:	c3                   	retq   

0000000000412a99 <StdioFeof>:
  412a99:	55                   	push   %rbp
  412a9a:	48 89 e5             	mov    %rsp,%rbp
  412a9d:	53                   	push   %rbx
  412a9e:	48 83 ec 28          	sub    $0x28,%rsp
  412aa2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412aa6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412aaa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412aae:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412ab1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ab5:	48 8b 00             	mov    (%rax),%rax
  412ab8:	48 8b 40 08          	mov    0x8(%rax),%rax
  412abc:	48 8b 00             	mov    (%rax),%rax
  412abf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412ac3:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412ac7:	48 89 c7             	mov    %rax,%rdi
  412aca:	e8 81 03 ff ff       	callq  402e50 <feof@plt>
  412acf:	89 03                	mov    %eax,(%rbx)
  412ad1:	90                   	nop
  412ad2:	48 83 c4 28          	add    $0x28,%rsp
  412ad6:	5b                   	pop    %rbx
  412ad7:	5d                   	pop    %rbp
  412ad8:	c3                   	retq   

0000000000412ad9 <StdioFerror>:
  412ad9:	55                   	push   %rbp
  412ada:	48 89 e5             	mov    %rsp,%rbp
  412add:	53                   	push   %rbx
  412ade:	48 83 ec 28          	sub    $0x28,%rsp
  412ae2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412ae6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412aea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412aee:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412af1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412af5:	48 8b 00             	mov    (%rax),%rax
  412af8:	48 8b 40 08          	mov    0x8(%rax),%rax
  412afc:	48 8b 00             	mov    (%rax),%rax
  412aff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412b03:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412b07:	48 89 c7             	mov    %rax,%rdi
  412b0a:	e8 41 ff fe ff       	callq  402a50 <ferror@plt>
  412b0f:	89 03                	mov    %eax,(%rbx)
  412b11:	90                   	nop
  412b12:	48 83 c4 28          	add    $0x28,%rsp
  412b16:	5b                   	pop    %rbx
  412b17:	5d                   	pop    %rbp
  412b18:	c3                   	retq   

0000000000412b19 <StdioFileno>:
  412b19:	55                   	push   %rbp
  412b1a:	48 89 e5             	mov    %rsp,%rbp
  412b1d:	53                   	push   %rbx
  412b1e:	48 83 ec 28          	sub    $0x28,%rsp
  412b22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412b26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412b2a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412b2e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412b31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b35:	48 8b 00             	mov    (%rax),%rax
  412b38:	48 8b 40 08          	mov    0x8(%rax),%rax
  412b3c:	48 8b 00             	mov    (%rax),%rax
  412b3f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412b43:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412b47:	48 89 c7             	mov    %rax,%rdi
  412b4a:	e8 61 03 ff ff       	callq  402eb0 <fileno@plt>
  412b4f:	89 03                	mov    %eax,(%rbx)
  412b51:	90                   	nop
  412b52:	48 83 c4 28          	add    $0x28,%rsp
  412b56:	5b                   	pop    %rbx
  412b57:	5d                   	pop    %rbp
  412b58:	c3                   	retq   

0000000000412b59 <StdioFflush>:
  412b59:	55                   	push   %rbp
  412b5a:	48 89 e5             	mov    %rsp,%rbp
  412b5d:	53                   	push   %rbx
  412b5e:	48 83 ec 28          	sub    $0x28,%rsp
  412b62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412b66:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412b6a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412b6e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412b71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412b75:	48 8b 00             	mov    (%rax),%rax
  412b78:	48 8b 40 08          	mov    0x8(%rax),%rax
  412b7c:	48 8b 00             	mov    (%rax),%rax
  412b7f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412b83:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412b87:	48 89 c7             	mov    %rax,%rdi
  412b8a:	e8 a1 03 ff ff       	callq  402f30 <fflush@plt>
  412b8f:	89 03                	mov    %eax,(%rbx)
  412b91:	90                   	nop
  412b92:	48 83 c4 28          	add    $0x28,%rsp
  412b96:	5b                   	pop    %rbx
  412b97:	5d                   	pop    %rbp
  412b98:	c3                   	retq   

0000000000412b99 <StdioFgetpos>:
  412b99:	55                   	push   %rbp
  412b9a:	48 89 e5             	mov    %rsp,%rbp
  412b9d:	53                   	push   %rbx
  412b9e:	48 83 ec 28          	sub    $0x28,%rsp
  412ba2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412ba6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412baa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412bae:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412bb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412bb5:	48 83 c0 08          	add    $0x8,%rax
  412bb9:	48 8b 00             	mov    (%rax),%rax
  412bbc:	48 8b 40 08          	mov    0x8(%rax),%rax
  412bc0:	48 8b 10             	mov    (%rax),%rdx
  412bc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412bc7:	48 8b 00             	mov    (%rax),%rax
  412bca:	48 8b 40 08          	mov    0x8(%rax),%rax
  412bce:	48 8b 00             	mov    (%rax),%rax
  412bd1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412bd5:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412bd9:	48 89 d6             	mov    %rdx,%rsi
  412bdc:	48 89 c7             	mov    %rax,%rdi
  412bdf:	e8 ac ff fe ff       	callq  402b90 <fgetpos@plt>
  412be4:	89 03                	mov    %eax,(%rbx)
  412be6:	90                   	nop
  412be7:	48 83 c4 28          	add    $0x28,%rsp
  412beb:	5b                   	pop    %rbx
  412bec:	5d                   	pop    %rbp
  412bed:	c3                   	retq   

0000000000412bee <StdioFsetpos>:
  412bee:	55                   	push   %rbp
  412bef:	48 89 e5             	mov    %rsp,%rbp
  412bf2:	53                   	push   %rbx
  412bf3:	48 83 ec 28          	sub    $0x28,%rsp
  412bf7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412bfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412bff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412c03:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412c06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c0a:	48 83 c0 08          	add    $0x8,%rax
  412c0e:	48 8b 00             	mov    (%rax),%rax
  412c11:	48 8b 40 08          	mov    0x8(%rax),%rax
  412c15:	48 8b 10             	mov    (%rax),%rdx
  412c18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c1c:	48 8b 00             	mov    (%rax),%rax
  412c1f:	48 8b 40 08          	mov    0x8(%rax),%rax
  412c23:	48 8b 00             	mov    (%rax),%rax
  412c26:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412c2a:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412c2e:	48 89 d6             	mov    %rdx,%rsi
  412c31:	48 89 c7             	mov    %rax,%rdi
  412c34:	e8 97 05 ff ff       	callq  4031d0 <fsetpos@plt>
  412c39:	89 03                	mov    %eax,(%rbx)
  412c3b:	90                   	nop
  412c3c:	48 83 c4 28          	add    $0x28,%rsp
  412c40:	5b                   	pop    %rbx
  412c41:	5d                   	pop    %rbp
  412c42:	c3                   	retq   

0000000000412c43 <StdioFputc>:
  412c43:	55                   	push   %rbp
  412c44:	48 89 e5             	mov    %rsp,%rbp
  412c47:	53                   	push   %rbx
  412c48:	48 83 ec 28          	sub    $0x28,%rsp
  412c4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412c50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412c54:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412c58:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412c5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c5f:	48 83 c0 08          	add    $0x8,%rax
  412c63:	48 8b 00             	mov    (%rax),%rax
  412c66:	48 8b 40 08          	mov    0x8(%rax),%rax
  412c6a:	48 8b 10             	mov    (%rax),%rdx
  412c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412c71:	48 8b 00             	mov    (%rax),%rax
  412c74:	48 8b 40 08          	mov    0x8(%rax),%rax
  412c78:	8b 00                	mov    (%rax),%eax
  412c7a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412c7e:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412c82:	48 89 d6             	mov    %rdx,%rsi
  412c85:	89 c7                	mov    %eax,%edi
  412c87:	e8 84 00 ff ff       	callq  402d10 <fputc@plt>
  412c8c:	89 03                	mov    %eax,(%rbx)
  412c8e:	90                   	nop
  412c8f:	48 83 c4 28          	add    $0x28,%rsp
  412c93:	5b                   	pop    %rbx
  412c94:	5d                   	pop    %rbp
  412c95:	c3                   	retq   

0000000000412c96 <StdioFputs>:
  412c96:	55                   	push   %rbp
  412c97:	48 89 e5             	mov    %rsp,%rbp
  412c9a:	53                   	push   %rbx
  412c9b:	48 83 ec 28          	sub    $0x28,%rsp
  412c9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412ca3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412ca7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412cab:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412cae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412cb2:	48 83 c0 08          	add    $0x8,%rax
  412cb6:	48 8b 00             	mov    (%rax),%rax
  412cb9:	48 8b 40 08          	mov    0x8(%rax),%rax
  412cbd:	48 8b 10             	mov    (%rax),%rdx
  412cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412cc4:	48 8b 00             	mov    (%rax),%rax
  412cc7:	48 8b 40 08          	mov    0x8(%rax),%rax
  412ccb:	48 8b 00             	mov    (%rax),%rax
  412cce:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412cd2:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412cd6:	48 89 d6             	mov    %rdx,%rsi
  412cd9:	48 89 c7             	mov    %rax,%rdi
  412cdc:	e8 5f ff fe ff       	callq  402c40 <fputs@plt>
  412ce1:	89 03                	mov    %eax,(%rbx)
  412ce3:	90                   	nop
  412ce4:	48 83 c4 28          	add    $0x28,%rsp
  412ce8:	5b                   	pop    %rbx
  412ce9:	5d                   	pop    %rbp
  412cea:	c3                   	retq   

0000000000412ceb <StdioFtell>:
  412ceb:	55                   	push   %rbp
  412cec:	48 89 e5             	mov    %rsp,%rbp
  412cef:	48 83 ec 20          	sub    $0x20,%rsp
  412cf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412cf7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412cfb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412cff:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412d02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412d06:	48 8b 00             	mov    (%rax),%rax
  412d09:	48 8b 40 08          	mov    0x8(%rax),%rax
  412d0d:	48 8b 00             	mov    (%rax),%rax
  412d10:	48 89 c7             	mov    %rax,%rdi
  412d13:	e8 28 01 ff ff       	callq  402e40 <ftell@plt>
  412d18:	48 89 c2             	mov    %rax,%rdx
  412d1b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  412d1f:	48 8b 40 08          	mov    0x8(%rax),%rax
  412d23:	89 10                	mov    %edx,(%rax)
  412d25:	90                   	nop
  412d26:	c9                   	leaveq 
  412d27:	c3                   	retq   

0000000000412d28 <StdioFseek>:
  412d28:	55                   	push   %rbp
  412d29:	48 89 e5             	mov    %rsp,%rbp
  412d2c:	53                   	push   %rbx
  412d2d:	48 83 ec 28          	sub    $0x28,%rsp
  412d31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412d35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412d39:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412d3d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412d40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d44:	48 83 c0 10          	add    $0x10,%rax
  412d48:	48 8b 00             	mov    (%rax),%rax
  412d4b:	48 8b 40 08          	mov    0x8(%rax),%rax
  412d4f:	8b 10                	mov    (%rax),%edx
  412d51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d55:	48 83 c0 08          	add    $0x8,%rax
  412d59:	48 8b 00             	mov    (%rax),%rax
  412d5c:	48 8b 40 08          	mov    0x8(%rax),%rax
  412d60:	8b 00                	mov    (%rax),%eax
  412d62:	48 63 c8             	movslq %eax,%rcx
  412d65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412d69:	48 8b 00             	mov    (%rax),%rax
  412d6c:	48 8b 40 08          	mov    0x8(%rax),%rax
  412d70:	48 8b 00             	mov    (%rax),%rax
  412d73:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  412d77:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  412d7b:	48 89 ce             	mov    %rcx,%rsi
  412d7e:	48 89 c7             	mov    %rax,%rdi
  412d81:	e8 6a 02 ff ff       	callq  402ff0 <fseek@plt>
  412d86:	89 03                	mov    %eax,(%rbx)
  412d88:	90                   	nop
  412d89:	48 83 c4 28          	add    $0x28,%rsp
  412d8d:	5b                   	pop    %rbx
  412d8e:	5d                   	pop    %rbp
  412d8f:	c3                   	retq   

0000000000412d90 <StdioPerror>:
  412d90:	55                   	push   %rbp
  412d91:	48 89 e5             	mov    %rsp,%rbp
  412d94:	48 83 ec 20          	sub    $0x20,%rsp
  412d98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412d9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412da0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412da4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412da7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412dab:	48 8b 00             	mov    (%rax),%rax
  412dae:	48 8b 40 08          	mov    0x8(%rax),%rax
  412db2:	48 8b 00             	mov    (%rax),%rax
  412db5:	48 89 c7             	mov    %rax,%rdi
  412db8:	e8 b3 03 ff ff       	callq  403170 <perror@plt>
  412dbd:	90                   	nop
  412dbe:	c9                   	leaveq 
  412dbf:	c3                   	retq   

0000000000412dc0 <StdioPutc>:
  412dc0:	55                   	push   %rbp
  412dc1:	48 89 e5             	mov    %rsp,%rbp
  412dc4:	53                   	push   %rbx
  412dc5:	48 83 ec 28          	sub    $0x28,%rsp
  412dc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412dcd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412dd1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412dd5:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412dd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412ddc:	48 83 c0 08          	add    $0x8,%rax
  412de0:	48 8b 00             	mov    (%rax),%rax
  412de3:	48 8b 40 08          	mov    0x8(%rax),%rax
  412de7:	48 8b 10             	mov    (%rax),%rdx
  412dea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412dee:	48 8b 00             	mov    (%rax),%rax
  412df1:	48 8b 40 08          	mov    0x8(%rax),%rax
  412df5:	8b 00                	mov    (%rax),%eax
  412df7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412dfb:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412dff:	48 89 d6             	mov    %rdx,%rsi
  412e02:	89 c7                	mov    %eax,%edi
  412e04:	e8 a7 fd fe ff       	callq  402bb0 <_IO_putc@plt>
  412e09:	89 03                	mov    %eax,(%rbx)
  412e0b:	90                   	nop
  412e0c:	48 83 c4 28          	add    $0x28,%rsp
  412e10:	5b                   	pop    %rbx
  412e11:	5d                   	pop    %rbp
  412e12:	c3                   	retq   

0000000000412e13 <StdioPutchar>:
  412e13:	55                   	push   %rbp
  412e14:	48 89 e5             	mov    %rsp,%rbp
  412e17:	53                   	push   %rbx
  412e18:	48 83 ec 28          	sub    $0x28,%rsp
  412e1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412e20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412e24:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412e28:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412e2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412e2f:	48 8b 00             	mov    (%rax),%rax
  412e32:	48 8b 40 08          	mov    0x8(%rax),%rax
  412e36:	8b 00                	mov    (%rax),%eax
  412e38:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412e3c:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412e40:	89 c7                	mov    %eax,%edi
  412e42:	e8 19 fb fe ff       	callq  402960 <putchar@plt>
  412e47:	89 03                	mov    %eax,(%rbx)
  412e49:	90                   	nop
  412e4a:	48 83 c4 28          	add    $0x28,%rsp
  412e4e:	5b                   	pop    %rbx
  412e4f:	5d                   	pop    %rbp
  412e50:	c3                   	retq   

0000000000412e51 <StdioSetbuf>:
  412e51:	55                   	push   %rbp
  412e52:	48 89 e5             	mov    %rsp,%rbp
  412e55:	48 83 ec 20          	sub    $0x20,%rsp
  412e59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412e5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412e61:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412e65:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412e68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e6c:	48 83 c0 08          	add    $0x8,%rax
  412e70:	48 8b 00             	mov    (%rax),%rax
  412e73:	48 8b 40 08          	mov    0x8(%rax),%rax
  412e77:	48 8b 10             	mov    (%rax),%rdx
  412e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412e7e:	48 8b 00             	mov    (%rax),%rax
  412e81:	48 8b 40 08          	mov    0x8(%rax),%rax
  412e85:	48 8b 00             	mov    (%rax),%rax
  412e88:	48 89 d6             	mov    %rdx,%rsi
  412e8b:	48 89 c7             	mov    %rax,%rdi
  412e8e:	e8 9d fc fe ff       	callq  402b30 <setbuf@plt>
  412e93:	90                   	nop
  412e94:	c9                   	leaveq 
  412e95:	c3                   	retq   

0000000000412e96 <StdioSetvbuf>:
  412e96:	55                   	push   %rbp
  412e97:	48 89 e5             	mov    %rsp,%rbp
  412e9a:	48 83 ec 20          	sub    $0x20,%rsp
  412e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  412ea2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  412ea6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  412eaa:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  412ead:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412eb1:	48 83 c0 18          	add    $0x18,%rax
  412eb5:	48 8b 00             	mov    (%rax),%rax
  412eb8:	48 8b 40 08          	mov    0x8(%rax),%rax
  412ebc:	8b 00                	mov    (%rax),%eax
  412ebe:	48 63 c8             	movslq %eax,%rcx
  412ec1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ec5:	48 83 c0 10          	add    $0x10,%rax
  412ec9:	48 8b 00             	mov    (%rax),%rax
  412ecc:	48 8b 40 08          	mov    0x8(%rax),%rax
  412ed0:	8b 10                	mov    (%rax),%edx
  412ed2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ed6:	48 83 c0 08          	add    $0x8,%rax
  412eda:	48 8b 00             	mov    (%rax),%rax
  412edd:	48 8b 40 08          	mov    0x8(%rax),%rax
  412ee1:	48 8b 30             	mov    (%rax),%rsi
  412ee4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  412ee8:	48 8b 00             	mov    (%rax),%rax
  412eeb:	48 8b 40 08          	mov    0x8(%rax),%rax
  412eef:	48 8b 00             	mov    (%rax),%rax
  412ef2:	48 89 c7             	mov    %rax,%rdi
  412ef5:	e8 86 01 ff ff       	callq  403080 <setvbuf@plt>
  412efa:	90                   	nop
  412efb:	c9                   	leaveq 
  412efc:	c3                   	retq   

0000000000412efd <StdioUngetc>:
  412efd:	55                   	push   %rbp
  412efe:	48 89 e5             	mov    %rsp,%rbp
  412f01:	53                   	push   %rbx
  412f02:	48 83 ec 28          	sub    $0x28,%rsp
  412f06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412f0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412f0e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412f12:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412f15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f19:	48 83 c0 08          	add    $0x8,%rax
  412f1d:	48 8b 00             	mov    (%rax),%rax
  412f20:	48 8b 40 08          	mov    0x8(%rax),%rax
  412f24:	48 8b 10             	mov    (%rax),%rdx
  412f27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f2b:	48 8b 00             	mov    (%rax),%rax
  412f2e:	48 8b 40 08          	mov    0x8(%rax),%rax
  412f32:	8b 00                	mov    (%rax),%eax
  412f34:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  412f38:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  412f3c:	48 89 d6             	mov    %rdx,%rsi
  412f3f:	89 c7                	mov    %eax,%edi
  412f41:	e8 1a 00 ff ff       	callq  402f60 <ungetc@plt>
  412f46:	89 03                	mov    %eax,(%rbx)
  412f48:	90                   	nop
  412f49:	48 83 c4 28          	add    $0x28,%rsp
  412f4d:	5b                   	pop    %rbx
  412f4e:	5d                   	pop    %rbp
  412f4f:	c3                   	retq   

0000000000412f50 <StdioPuts>:
  412f50:	55                   	push   %rbp
  412f51:	48 89 e5             	mov    %rsp,%rbp
  412f54:	53                   	push   %rbx
  412f55:	48 83 ec 28          	sub    $0x28,%rsp
  412f59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  412f5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  412f61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  412f65:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  412f68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  412f6c:	48 8b 00             	mov    (%rax),%rax
  412f6f:	48 8b 40 08          	mov    0x8(%rax),%rax
  412f73:	48 8b 00             	mov    (%rax),%rax
  412f76:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  412f7a:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  412f7e:	48 89 c7             	mov    %rax,%rdi
  412f81:	e8 ba fa fe ff       	callq  402a40 <puts@plt>
  412f86:	89 03                	mov    %eax,(%rbx)
  412f88:	90                   	nop
  412f89:	48 83 c4 28          	add    $0x28,%rsp
  412f8d:	5b                   	pop    %rbx
  412f8e:	5d                   	pop    %rbp
  412f8f:	c3                   	retq   

0000000000412f90 <StdioGets>:
  412f90:	55                   	push   %rbp
  412f91:	48 89 e5             	mov    %rsp,%rbp
  412f94:	53                   	push   %rbx
  412f95:	48 83 ec 38          	sub    $0x38,%rsp
  412f99:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  412f9d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  412fa1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  412fa5:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  412fa8:	48 8b 15 c1 d8 20 00 	mov    0x20d8c1(%rip),%rdx        # 620870 <stdin@@GLIBC_2.2.5>
  412faf:	8b 0d 2b cb 20 00    	mov    0x20cb2b(%rip),%ecx        # 61fae0 <GETS_MAXValue>
  412fb5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412fb9:	48 8b 00             	mov    (%rax),%rax
  412fbc:	48 8b 40 08          	mov    0x8(%rax),%rax
  412fc0:	48 8b 00             	mov    (%rax),%rax
  412fc3:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  412fc7:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  412fcb:	89 ce                	mov    %ecx,%esi
  412fcd:	48 89 c7             	mov    %rax,%rdi
  412fd0:	e8 cb fd fe ff       	callq  402da0 <fgets@plt>
  412fd5:	48 89 03             	mov    %rax,(%rbx)
  412fd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  412fdc:	48 8b 40 08          	mov    0x8(%rax),%rax
  412fe0:	48 8b 00             	mov    (%rax),%rax
  412fe3:	48 85 c0             	test   %rax,%rax
  412fe6:	74 2d                	je     413015 <StdioGets+0x85>
  412fe8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  412fec:	48 8b 00             	mov    (%rax),%rax
  412fef:	48 8b 40 08          	mov    0x8(%rax),%rax
  412ff3:	48 8b 00             	mov    (%rax),%rax
  412ff6:	be 0a 00 00 00       	mov    $0xa,%esi
  412ffb:	48 89 c7             	mov    %rax,%rdi
  412ffe:	e8 6d fb fe ff       	callq  402b70 <strchr@plt>
  413003:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  413007:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  41300c:	74 07                	je     413015 <StdioGets+0x85>
  41300e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413012:	c6 00 00             	movb   $0x0,(%rax)
  413015:	90                   	nop
  413016:	48 83 c4 38          	add    $0x38,%rsp
  41301a:	5b                   	pop    %rbx
  41301b:	5d                   	pop    %rbp
  41301c:	c3                   	retq   

000000000041301d <StdioGetchar>:
  41301d:	55                   	push   %rbp
  41301e:	48 89 e5             	mov    %rsp,%rbp
  413021:	53                   	push   %rbx
  413022:	48 83 ec 28          	sub    $0x28,%rsp
  413026:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41302a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41302e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413032:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413035:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413039:	48 8b 58 08          	mov    0x8(%rax),%rbx
  41303d:	e8 be fd fe ff       	callq  402e00 <getchar@plt>
  413042:	89 03                	mov    %eax,(%rbx)
  413044:	90                   	nop
  413045:	48 83 c4 28          	add    $0x28,%rsp
  413049:	5b                   	pop    %rbx
  41304a:	5d                   	pop    %rbp
  41304b:	c3                   	retq   

000000000041304c <StdioPrintf>:
  41304c:	55                   	push   %rbp
  41304d:	48 89 e5             	mov    %rsp,%rbp
  413050:	53                   	push   %rbx
  413051:	48 83 ec 38          	sub    $0x38,%rsp
  413055:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413059:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41305d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413061:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  413064:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413068:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41306c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41306f:	83 e8 01             	sub    $0x1,%eax
  413072:	89 45 e8             	mov    %eax,-0x18(%rbp)
  413075:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413079:	48 8b 00             	mov    (%rax),%rax
  41307c:	48 8b 40 08          	mov    0x8(%rax),%rax
  413080:	48 8b 10             	mov    (%rax),%rdx
  413083:	48 8b 35 d6 d7 20 00 	mov    0x20d7d6(%rip),%rsi        # 620860 <stdout@@GLIBC_2.2.5>
  41308a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41308e:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413092:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  413096:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41309a:	49 89 c9             	mov    %rcx,%r9
  41309d:	49 89 d0             	mov    %rdx,%r8
  4130a0:	b9 00 00 00 00       	mov    $0x0,%ecx
  4130a5:	ba 00 00 00 00       	mov    $0x0,%edx
  4130aa:	48 89 c7             	mov    %rax,%rdi
  4130ad:	e8 16 ef ff ff       	callq  411fc8 <StdioBasePrintf>
  4130b2:	89 03                	mov    %eax,(%rbx)
  4130b4:	90                   	nop
  4130b5:	48 83 c4 38          	add    $0x38,%rsp
  4130b9:	5b                   	pop    %rbx
  4130ba:	5d                   	pop    %rbp
  4130bb:	c3                   	retq   

00000000004130bc <StdioVprintf>:
  4130bc:	55                   	push   %rbp
  4130bd:	48 89 e5             	mov    %rsp,%rbp
  4130c0:	53                   	push   %rbx
  4130c1:	48 83 ec 28          	sub    $0x28,%rsp
  4130c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4130c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4130cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4130d1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4130d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130d8:	48 83 c0 08          	add    $0x8,%rax
  4130dc:	48 8b 00             	mov    (%rax),%rax
  4130df:	48 8b 40 08          	mov    0x8(%rax),%rax
  4130e3:	48 8b 08             	mov    (%rax),%rcx
  4130e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4130ea:	48 8b 00             	mov    (%rax),%rax
  4130ed:	48 8b 40 08          	mov    0x8(%rax),%rax
  4130f1:	48 8b 10             	mov    (%rax),%rdx
  4130f4:	48 8b 35 65 d7 20 00 	mov    0x20d765(%rip),%rsi        # 620860 <stdout@@GLIBC_2.2.5>
  4130fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4130ff:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413107:	49 89 c9             	mov    %rcx,%r9
  41310a:	49 89 d0             	mov    %rdx,%r8
  41310d:	b9 00 00 00 00       	mov    $0x0,%ecx
  413112:	ba 00 00 00 00       	mov    $0x0,%edx
  413117:	48 89 c7             	mov    %rax,%rdi
  41311a:	e8 a9 ee ff ff       	callq  411fc8 <StdioBasePrintf>
  41311f:	89 03                	mov    %eax,(%rbx)
  413121:	90                   	nop
  413122:	48 83 c4 28          	add    $0x28,%rsp
  413126:	5b                   	pop    %rbx
  413127:	5d                   	pop    %rbp
  413128:	c3                   	retq   

0000000000413129 <StdioFprintf>:
  413129:	55                   	push   %rbp
  41312a:	48 89 e5             	mov    %rsp,%rbp
  41312d:	53                   	push   %rbx
  41312e:	48 83 ec 38          	sub    $0x38,%rsp
  413132:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413136:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41313a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41313e:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  413141:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413145:	48 83 c0 08          	add    $0x8,%rax
  413149:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41314d:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  413150:	83 e8 02             	sub    $0x2,%eax
  413153:	89 45 e8             	mov    %eax,-0x18(%rbp)
  413156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41315a:	48 83 c0 08          	add    $0x8,%rax
  41315e:	48 8b 00             	mov    (%rax),%rax
  413161:	48 8b 40 08          	mov    0x8(%rax),%rax
  413165:	48 8b 10             	mov    (%rax),%rdx
  413168:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41316c:	48 8b 00             	mov    (%rax),%rax
  41316f:	48 8b 40 08          	mov    0x8(%rax),%rax
  413173:	48 8b 30             	mov    (%rax),%rsi
  413176:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41317a:	48 8b 58 08          	mov    0x8(%rax),%rbx
  41317e:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  413182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413186:	49 89 c9             	mov    %rcx,%r9
  413189:	49 89 d0             	mov    %rdx,%r8
  41318c:	b9 00 00 00 00       	mov    $0x0,%ecx
  413191:	ba 00 00 00 00       	mov    $0x0,%edx
  413196:	48 89 c7             	mov    %rax,%rdi
  413199:	e8 2a ee ff ff       	callq  411fc8 <StdioBasePrintf>
  41319e:	89 03                	mov    %eax,(%rbx)
  4131a0:	90                   	nop
  4131a1:	48 83 c4 38          	add    $0x38,%rsp
  4131a5:	5b                   	pop    %rbx
  4131a6:	5d                   	pop    %rbp
  4131a7:	c3                   	retq   

00000000004131a8 <StdioVfprintf>:
  4131a8:	55                   	push   %rbp
  4131a9:	48 89 e5             	mov    %rsp,%rbp
  4131ac:	53                   	push   %rbx
  4131ad:	48 83 ec 28          	sub    $0x28,%rsp
  4131b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4131b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4131b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4131bd:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4131c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131c4:	48 83 c0 10          	add    $0x10,%rax
  4131c8:	48 8b 00             	mov    (%rax),%rax
  4131cb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4131cf:	48 8b 08             	mov    (%rax),%rcx
  4131d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131d6:	48 83 c0 08          	add    $0x8,%rax
  4131da:	48 8b 00             	mov    (%rax),%rax
  4131dd:	48 8b 40 08          	mov    0x8(%rax),%rax
  4131e1:	48 8b 10             	mov    (%rax),%rdx
  4131e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4131e8:	48 8b 00             	mov    (%rax),%rax
  4131eb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4131ef:	48 8b 30             	mov    (%rax),%rsi
  4131f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4131f6:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4131fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4131fe:	49 89 c9             	mov    %rcx,%r9
  413201:	49 89 d0             	mov    %rdx,%r8
  413204:	b9 00 00 00 00       	mov    $0x0,%ecx
  413209:	ba 00 00 00 00       	mov    $0x0,%edx
  41320e:	48 89 c7             	mov    %rax,%rdi
  413211:	e8 b2 ed ff ff       	callq  411fc8 <StdioBasePrintf>
  413216:	89 03                	mov    %eax,(%rbx)
  413218:	90                   	nop
  413219:	48 83 c4 28          	add    $0x28,%rsp
  41321d:	5b                   	pop    %rbx
  41321e:	5d                   	pop    %rbp
  41321f:	c3                   	retq   

0000000000413220 <StdioSprintf>:
  413220:	55                   	push   %rbp
  413221:	48 89 e5             	mov    %rsp,%rbp
  413224:	53                   	push   %rbx
  413225:	48 83 ec 38          	sub    $0x38,%rsp
  413229:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41322d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413231:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413235:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  413238:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41323c:	48 83 c0 08          	add    $0x8,%rax
  413240:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  413244:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  413247:	83 e8 02             	sub    $0x2,%eax
  41324a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  41324d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413251:	48 83 c0 08          	add    $0x8,%rax
  413255:	48 8b 00             	mov    (%rax),%rax
  413258:	48 8b 40 08          	mov    0x8(%rax),%rax
  41325c:	48 8b 08             	mov    (%rax),%rcx
  41325f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413263:	48 8b 00             	mov    (%rax),%rax
  413266:	48 8b 40 08          	mov    0x8(%rax),%rax
  41326a:	48 8b 10             	mov    (%rax),%rdx
  41326d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413271:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413275:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
  413279:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41327d:	49 89 f1             	mov    %rsi,%r9
  413280:	49 89 c8             	mov    %rcx,%r8
  413283:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  413288:	be 00 00 00 00       	mov    $0x0,%esi
  41328d:	48 89 c7             	mov    %rax,%rdi
  413290:	e8 33 ed ff ff       	callq  411fc8 <StdioBasePrintf>
  413295:	89 03                	mov    %eax,(%rbx)
  413297:	90                   	nop
  413298:	48 83 c4 38          	add    $0x38,%rsp
  41329c:	5b                   	pop    %rbx
  41329d:	5d                   	pop    %rbp
  41329e:	c3                   	retq   

000000000041329f <StdioSnprintf>:
  41329f:	55                   	push   %rbp
  4132a0:	48 89 e5             	mov    %rsp,%rbp
  4132a3:	53                   	push   %rbx
  4132a4:	48 83 ec 38          	sub    $0x38,%rsp
  4132a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4132ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4132b0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4132b4:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  4132b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4132bb:	48 83 c0 10          	add    $0x10,%rax
  4132bf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4132c3:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4132c6:	83 e8 03             	sub    $0x3,%eax
  4132c9:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4132cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4132d0:	48 83 c0 10          	add    $0x10,%rax
  4132d4:	48 8b 00             	mov    (%rax),%rax
  4132d7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4132db:	48 8b 30             	mov    (%rax),%rsi
  4132de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4132e2:	48 83 c0 08          	add    $0x8,%rax
  4132e6:	48 8b 00             	mov    (%rax),%rax
  4132e9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4132ed:	8b 08                	mov    (%rax),%ecx
  4132ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4132f3:	48 8b 00             	mov    (%rax),%rax
  4132f6:	48 8b 40 08          	mov    0x8(%rax),%rax
  4132fa:	48 8b 10             	mov    (%rax),%rdx
  4132fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413301:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413305:	48 8d 7d e0          	lea    -0x20(%rbp),%rdi
  413309:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41330d:	49 89 f9             	mov    %rdi,%r9
  413310:	49 89 f0             	mov    %rsi,%r8
  413313:	be 00 00 00 00       	mov    $0x0,%esi
  413318:	48 89 c7             	mov    %rax,%rdi
  41331b:	e8 a8 ec ff ff       	callq  411fc8 <StdioBasePrintf>
  413320:	89 03                	mov    %eax,(%rbx)
  413322:	90                   	nop
  413323:	48 83 c4 38          	add    $0x38,%rsp
  413327:	5b                   	pop    %rbx
  413328:	5d                   	pop    %rbp
  413329:	c3                   	retq   

000000000041332a <StdioScanf>:
  41332a:	55                   	push   %rbp
  41332b:	48 89 e5             	mov    %rsp,%rbp
  41332e:	53                   	push   %rbx
  41332f:	48 83 ec 38          	sub    $0x38,%rsp
  413333:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  413337:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  41333b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  41333f:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  413342:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413346:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  41334a:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  41334d:	83 e8 01             	sub    $0x1,%eax
  413350:	89 45 e8             	mov    %eax,-0x18(%rbp)
  413353:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413357:	48 8b 00             	mov    (%rax),%rax
  41335a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41335e:	48 8b 10             	mov    (%rax),%rdx
  413361:	48 8b 35 08 d5 20 00 	mov    0x20d508(%rip),%rsi        # 620870 <stdin@@GLIBC_2.2.5>
  413368:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  41336c:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413370:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  413374:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413378:	49 89 c8             	mov    %rcx,%r8
  41337b:	48 89 d1             	mov    %rdx,%rcx
  41337e:	ba 00 00 00 00       	mov    $0x0,%edx
  413383:	48 89 c7             	mov    %rax,%rdi
  413386:	e8 74 f1 ff ff       	callq  4124ff <StdioBaseScanf>
  41338b:	89 03                	mov    %eax,(%rbx)
  41338d:	90                   	nop
  41338e:	48 83 c4 38          	add    $0x38,%rsp
  413392:	5b                   	pop    %rbx
  413393:	5d                   	pop    %rbp
  413394:	c3                   	retq   

0000000000413395 <StdioFscanf>:
  413395:	55                   	push   %rbp
  413396:	48 89 e5             	mov    %rsp,%rbp
  413399:	53                   	push   %rbx
  41339a:	48 83 ec 38          	sub    $0x38,%rsp
  41339e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4133a2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4133a6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4133aa:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  4133ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4133b1:	48 83 c0 08          	add    $0x8,%rax
  4133b5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4133b9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  4133bc:	83 e8 02             	sub    $0x2,%eax
  4133bf:	89 45 e8             	mov    %eax,-0x18(%rbp)
  4133c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4133c6:	48 83 c0 08          	add    $0x8,%rax
  4133ca:	48 8b 00             	mov    (%rax),%rax
  4133cd:	48 8b 40 08          	mov    0x8(%rax),%rax
  4133d1:	48 8b 10             	mov    (%rax),%rdx
  4133d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4133d8:	48 8b 00             	mov    (%rax),%rax
  4133db:	48 8b 40 08          	mov    0x8(%rax),%rax
  4133df:	48 8b 30             	mov    (%rax),%rsi
  4133e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  4133e6:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4133ea:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
  4133ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4133f2:	49 89 c8             	mov    %rcx,%r8
  4133f5:	48 89 d1             	mov    %rdx,%rcx
  4133f8:	ba 00 00 00 00       	mov    $0x0,%edx
  4133fd:	48 89 c7             	mov    %rax,%rdi
  413400:	e8 fa f0 ff ff       	callq  4124ff <StdioBaseScanf>
  413405:	89 03                	mov    %eax,(%rbx)
  413407:	90                   	nop
  413408:	48 83 c4 38          	add    $0x38,%rsp
  41340c:	5b                   	pop    %rbx
  41340d:	5d                   	pop    %rbp
  41340e:	c3                   	retq   

000000000041340f <StdioSscanf>:
  41340f:	55                   	push   %rbp
  413410:	48 89 e5             	mov    %rsp,%rbp
  413413:	53                   	push   %rbx
  413414:	48 83 ec 38          	sub    $0x38,%rsp
  413418:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  41341c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  413420:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  413424:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
  413427:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  41342b:	48 83 c0 08          	add    $0x8,%rax
  41342f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  413433:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  413436:	83 e8 02             	sub    $0x2,%eax
  413439:	89 45 e8             	mov    %eax,-0x18(%rbp)
  41343c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413440:	48 83 c0 08          	add    $0x8,%rax
  413444:	48 8b 00             	mov    (%rax),%rax
  413447:	48 8b 40 08          	mov    0x8(%rax),%rax
  41344b:	48 8b 08             	mov    (%rax),%rcx
  41344e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  413452:	48 8b 00             	mov    (%rax),%rax
  413455:	48 8b 40 08          	mov    0x8(%rax),%rax
  413459:	48 8b 10             	mov    (%rax),%rdx
  41345c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  413460:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413464:	48 8d 75 e0          	lea    -0x20(%rbp),%rsi
  413468:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41346c:	49 89 f0             	mov    %rsi,%r8
  41346f:	be 00 00 00 00       	mov    $0x0,%esi
  413474:	48 89 c7             	mov    %rax,%rdi
  413477:	e8 83 f0 ff ff       	callq  4124ff <StdioBaseScanf>
  41347c:	89 03                	mov    %eax,(%rbx)
  41347e:	90                   	nop
  41347f:	48 83 c4 38          	add    $0x38,%rsp
  413483:	5b                   	pop    %rbx
  413484:	5d                   	pop    %rbp
  413485:	c3                   	retq   

0000000000413486 <StdioVsprintf>:
  413486:	55                   	push   %rbp
  413487:	48 89 e5             	mov    %rsp,%rbp
  41348a:	53                   	push   %rbx
  41348b:	48 83 ec 28          	sub    $0x28,%rsp
  41348f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413493:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413497:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41349b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41349e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134a2:	48 83 c0 10          	add    $0x10,%rax
  4134a6:	48 8b 00             	mov    (%rax),%rax
  4134a9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4134ad:	48 8b 30             	mov    (%rax),%rsi
  4134b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134b4:	48 83 c0 08          	add    $0x8,%rax
  4134b8:	48 8b 00             	mov    (%rax),%rax
  4134bb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4134bf:	48 8b 08             	mov    (%rax),%rcx
  4134c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4134c6:	48 8b 00             	mov    (%rax),%rax
  4134c9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4134cd:	48 8b 10             	mov    (%rax),%rdx
  4134d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4134d4:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4134d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4134dc:	49 89 f1             	mov    %rsi,%r9
  4134df:	49 89 c8             	mov    %rcx,%r8
  4134e2:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  4134e7:	be 00 00 00 00       	mov    $0x0,%esi
  4134ec:	48 89 c7             	mov    %rax,%rdi
  4134ef:	e8 d4 ea ff ff       	callq  411fc8 <StdioBasePrintf>
  4134f4:	89 03                	mov    %eax,(%rbx)
  4134f6:	90                   	nop
  4134f7:	48 83 c4 28          	add    $0x28,%rsp
  4134fb:	5b                   	pop    %rbx
  4134fc:	5d                   	pop    %rbp
  4134fd:	c3                   	retq   

00000000004134fe <StdioVsnprintf>:
  4134fe:	55                   	push   %rbp
  4134ff:	48 89 e5             	mov    %rsp,%rbp
  413502:	53                   	push   %rbx
  413503:	48 83 ec 28          	sub    $0x28,%rsp
  413507:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41350b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41350f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413513:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413516:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41351a:	48 83 c0 18          	add    $0x18,%rax
  41351e:	48 8b 00             	mov    (%rax),%rax
  413521:	48 8b 40 08          	mov    0x8(%rax),%rax
  413525:	48 8b 38             	mov    (%rax),%rdi
  413528:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41352c:	48 83 c0 10          	add    $0x10,%rax
  413530:	48 8b 00             	mov    (%rax),%rax
  413533:	48 8b 40 08          	mov    0x8(%rax),%rax
  413537:	48 8b 30             	mov    (%rax),%rsi
  41353a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41353e:	48 83 c0 08          	add    $0x8,%rax
  413542:	48 8b 00             	mov    (%rax),%rax
  413545:	48 8b 40 08          	mov    0x8(%rax),%rax
  413549:	8b 08                	mov    (%rax),%ecx
  41354b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41354f:	48 8b 00             	mov    (%rax),%rax
  413552:	48 8b 40 08          	mov    0x8(%rax),%rax
  413556:	48 8b 10             	mov    (%rax),%rdx
  413559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41355d:	48 8b 58 08          	mov    0x8(%rax),%rbx
  413561:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413565:	49 89 f9             	mov    %rdi,%r9
  413568:	49 89 f0             	mov    %rsi,%r8
  41356b:	be 00 00 00 00       	mov    $0x0,%esi
  413570:	48 89 c7             	mov    %rax,%rdi
  413573:	e8 50 ea ff ff       	callq  411fc8 <StdioBasePrintf>
  413578:	89 03                	mov    %eax,(%rbx)
  41357a:	90                   	nop
  41357b:	48 83 c4 28          	add    $0x28,%rsp
  41357f:	5b                   	pop    %rbx
  413580:	5d                   	pop    %rbp
  413581:	c3                   	retq   

0000000000413582 <StdioVscanf>:
  413582:	55                   	push   %rbp
  413583:	48 89 e5             	mov    %rsp,%rbp
  413586:	53                   	push   %rbx
  413587:	48 83 ec 28          	sub    $0x28,%rsp
  41358b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41358f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413593:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413597:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41359a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41359e:	48 83 c0 08          	add    $0x8,%rax
  4135a2:	48 8b 00             	mov    (%rax),%rax
  4135a5:	48 8b 40 08          	mov    0x8(%rax),%rax
  4135a9:	48 8b 08             	mov    (%rax),%rcx
  4135ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4135b0:	48 8b 00             	mov    (%rax),%rax
  4135b3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4135b7:	48 8b 10             	mov    (%rax),%rdx
  4135ba:	48 8b 35 af d2 20 00 	mov    0x20d2af(%rip),%rsi        # 620870 <stdin@@GLIBC_2.2.5>
  4135c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4135c5:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4135c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4135cd:	49 89 c8             	mov    %rcx,%r8
  4135d0:	48 89 d1             	mov    %rdx,%rcx
  4135d3:	ba 00 00 00 00       	mov    $0x0,%edx
  4135d8:	48 89 c7             	mov    %rax,%rdi
  4135db:	e8 1f ef ff ff       	callq  4124ff <StdioBaseScanf>
  4135e0:	89 03                	mov    %eax,(%rbx)
  4135e2:	90                   	nop
  4135e3:	48 83 c4 28          	add    $0x28,%rsp
  4135e7:	5b                   	pop    %rbx
  4135e8:	5d                   	pop    %rbp
  4135e9:	c3                   	retq   

00000000004135ea <StdioVfscanf>:
  4135ea:	55                   	push   %rbp
  4135eb:	48 89 e5             	mov    %rsp,%rbp
  4135ee:	53                   	push   %rbx
  4135ef:	48 83 ec 28          	sub    $0x28,%rsp
  4135f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4135f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4135fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4135ff:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413602:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413606:	48 83 c0 10          	add    $0x10,%rax
  41360a:	48 8b 00             	mov    (%rax),%rax
  41360d:	48 8b 40 08          	mov    0x8(%rax),%rax
  413611:	48 8b 08             	mov    (%rax),%rcx
  413614:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413618:	48 83 c0 08          	add    $0x8,%rax
  41361c:	48 8b 00             	mov    (%rax),%rax
  41361f:	48 8b 40 08          	mov    0x8(%rax),%rax
  413623:	48 8b 10             	mov    (%rax),%rdx
  413626:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41362a:	48 8b 00             	mov    (%rax),%rax
  41362d:	48 8b 40 08          	mov    0x8(%rax),%rax
  413631:	48 8b 30             	mov    (%rax),%rsi
  413634:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  413638:	48 8b 58 08          	mov    0x8(%rax),%rbx
  41363c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413640:	49 89 c8             	mov    %rcx,%r8
  413643:	48 89 d1             	mov    %rdx,%rcx
  413646:	ba 00 00 00 00       	mov    $0x0,%edx
  41364b:	48 89 c7             	mov    %rax,%rdi
  41364e:	e8 ac ee ff ff       	callq  4124ff <StdioBaseScanf>
  413653:	89 03                	mov    %eax,(%rbx)
  413655:	90                   	nop
  413656:	48 83 c4 28          	add    $0x28,%rsp
  41365a:	5b                   	pop    %rbx
  41365b:	5d                   	pop    %rbp
  41365c:	c3                   	retq   

000000000041365d <StdioVsscanf>:
  41365d:	55                   	push   %rbp
  41365e:	48 89 e5             	mov    %rsp,%rbp
  413661:	53                   	push   %rbx
  413662:	48 83 ec 28          	sub    $0x28,%rsp
  413666:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41366a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41366e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413672:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413675:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413679:	48 83 c0 10          	add    $0x10,%rax
  41367d:	48 8b 00             	mov    (%rax),%rax
  413680:	48 8b 40 08          	mov    0x8(%rax),%rax
  413684:	48 8b 30             	mov    (%rax),%rsi
  413687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41368b:	48 83 c0 08          	add    $0x8,%rax
  41368f:	48 8b 00             	mov    (%rax),%rax
  413692:	48 8b 40 08          	mov    0x8(%rax),%rax
  413696:	48 8b 08             	mov    (%rax),%rcx
  413699:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41369d:	48 8b 00             	mov    (%rax),%rax
  4136a0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4136a4:	48 8b 10             	mov    (%rax),%rdx
  4136a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4136ab:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4136af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4136b3:	49 89 f0             	mov    %rsi,%r8
  4136b6:	be 00 00 00 00       	mov    $0x0,%esi
  4136bb:	48 89 c7             	mov    %rax,%rdi
  4136be:	e8 3c ee ff ff       	callq  4124ff <StdioBaseScanf>
  4136c3:	89 03                	mov    %eax,(%rbx)
  4136c5:	90                   	nop
  4136c6:	48 83 c4 28          	add    $0x28,%rsp
  4136ca:	5b                   	pop    %rbx
  4136cb:	5d                   	pop    %rbp
  4136cc:	c3                   	retq   

00000000004136cd <StdioSetupFunc>:
  4136cd:	55                   	push   %rbp
  4136ce:	48 89 e5             	mov    %rsp,%rbp
  4136d1:	48 83 ec 20          	sub    $0x20,%rsp
  4136d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4136d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4136dd:	be 86 9c 41 00       	mov    $0x419c86,%esi
  4136e2:	48 89 c7             	mov    %rax,%rdi
  4136e5:	e8 17 05 ff ff       	callq  403c01 <TableStrRegister>
  4136ea:	48 89 c2             	mov    %rax,%rdx
  4136ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4136f1:	b9 d8 00 00 00       	mov    $0xd8,%ecx
  4136f6:	be 00 00 00 00       	mov    $0x0,%esi
  4136fb:	48 89 c7             	mov    %rax,%rdi
  4136fe:	e8 88 a6 ff ff       	callq  40dd8b <TypeCreateOpaqueStruct>
  413703:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  413707:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41370b:	48 8b 88 f8 13 00 00 	mov    0x13f8(%rax),%rcx
  413712:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  413716:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41371a:	48 83 ec 08          	sub    $0x8,%rsp
  41371e:	6a 01                	pushq  $0x1
  413720:	49 89 c9             	mov    %rcx,%r9
  413723:	41 b8 00 00 00 00    	mov    $0x0,%r8d
  413729:	b9 0b 00 00 00       	mov    $0xb,%ecx
  41372e:	be 00 00 00 00       	mov    $0x0,%esi
  413733:	48 89 c7             	mov    %rax,%rdi
  413736:	e8 ac 9a ff ff       	callq  40d1e7 <TypeGetMatching>
  41373b:	48 83 c4 10          	add    $0x10,%rsp
  41373f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  413743:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413747:	be 93 9c 41 00       	mov    $0x419c93,%esi
  41374c:	48 89 c7             	mov    %rax,%rdi
  41374f:	e8 ad 04 ff ff       	callq  403c01 <TableStrRegister>
  413754:	48 89 c2             	mov    %rax,%rdx
  413757:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41375b:	b9 d8 00 00 00       	mov    $0xd8,%ecx
  413760:	be 00 00 00 00       	mov    $0x0,%esi
  413765:	48 89 c7             	mov    %rax,%rdi
  413768:	e8 1e a6 ff ff       	callq  40dd8b <TypeCreateOpaqueStruct>
  41376d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413771:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413778:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41377c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413782:	41 b8 c0 fa 61 00    	mov    $0x61fac0,%r8d
  413788:	48 89 d1             	mov    %rdx,%rcx
  41378b:	ba a3 9c 41 00       	mov    $0x419ca3,%edx
  413790:	be 00 00 00 00       	mov    $0x0,%esi
  413795:	48 89 c7             	mov    %rax,%rdi
  413798:	e8 c2 c0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41379d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4137a1:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4137a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4137ac:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4137b2:	41 b8 ec 08 62 00    	mov    $0x6208ec,%r8d
  4137b8:	48 89 d1             	mov    %rdx,%rcx
  4137bb:	ba a7 9c 41 00       	mov    $0x419ca7,%edx
  4137c0:	be 00 00 00 00       	mov    $0x0,%esi
  4137c5:	48 89 c7             	mov    %rax,%rdi
  4137c8:	e8 92 c0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4137cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4137d1:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4137d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4137dc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4137e2:	41 b8 c4 fa 61 00    	mov    $0x61fac4,%r8d
  4137e8:	48 89 d1             	mov    %rdx,%rcx
  4137eb:	ba b0 9c 41 00       	mov    $0x419cb0,%edx
  4137f0:	be 00 00 00 00       	mov    $0x0,%esi
  4137f5:	48 89 c7             	mov    %rax,%rdi
  4137f8:	e8 62 c0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4137fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413801:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41380c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413812:	41 b8 c8 fa 61 00    	mov    $0x61fac8,%r8d
  413818:	48 89 d1             	mov    %rdx,%rcx
  41381b:	ba b9 9c 41 00       	mov    $0x419cb9,%edx
  413820:	be 00 00 00 00       	mov    $0x0,%esi
  413825:	48 89 c7             	mov    %rax,%rdi
  413828:	e8 32 c0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41382d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413831:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41383c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413842:	41 b8 cc fa 61 00    	mov    $0x61facc,%r8d
  413848:	48 89 d1             	mov    %rdx,%rcx
  41384b:	ba c2 9c 41 00       	mov    $0x419cc2,%edx
  413850:	be 00 00 00 00       	mov    $0x0,%esi
  413855:	48 89 c7             	mov    %rax,%rdi
  413858:	e8 02 c0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41385d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413861:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413868:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41386c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413872:	41 b8 d0 fa 61 00    	mov    $0x61fad0,%r8d
  413878:	48 89 d1             	mov    %rdx,%rcx
  41387b:	ba c9 9c 41 00       	mov    $0x419cc9,%edx
  413880:	be 00 00 00 00       	mov    $0x0,%esi
  413885:	48 89 c7             	mov    %rax,%rdi
  413888:	e8 d2 bf ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41388d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413891:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41389c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4138a2:	41 b8 f0 08 62 00    	mov    $0x6208f0,%r8d
  4138a8:	48 89 d1             	mov    %rdx,%rcx
  4138ab:	ba d6 9c 41 00       	mov    $0x419cd6,%edx
  4138b0:	be 00 00 00 00       	mov    $0x0,%esi
  4138b5:	48 89 c7             	mov    %rax,%rdi
  4138b8:	e8 a2 bf ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4138bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4138c1:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4138c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4138cc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4138d2:	41 b8 d4 fa 61 00    	mov    $0x61fad4,%r8d
  4138d8:	48 89 d1             	mov    %rdx,%rcx
  4138db:	ba dd 9c 41 00       	mov    $0x419cdd,%edx
  4138e0:	be 00 00 00 00       	mov    $0x0,%esi
  4138e5:	48 89 c7             	mov    %rax,%rdi
  4138e8:	e8 72 bf ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4138ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4138f1:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4138f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4138fc:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413902:	41 b8 d8 fa 61 00    	mov    $0x61fad8,%r8d
  413908:	48 89 d1             	mov    %rdx,%rcx
  41390b:	ba e4 9c 41 00       	mov    $0x419ce4,%edx
  413910:	be 00 00 00 00       	mov    $0x0,%esi
  413915:	48 89 c7             	mov    %rax,%rdi
  413918:	e8 42 bf ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41391d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413921:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41392c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413932:	41 b8 dc fa 61 00    	mov    $0x61fadc,%r8d
  413938:	48 89 d1             	mov    %rdx,%rcx
  41393b:	ba eb 9c 41 00       	mov    $0x419ceb,%edx
  413940:	be 00 00 00 00       	mov    $0x0,%esi
  413945:	48 89 c7             	mov    %rax,%rdi
  413948:	e8 12 bf ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41394d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413951:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413958:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41395c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413962:	41 b8 e0 fa 61 00    	mov    $0x61fae0,%r8d
  413968:	48 89 d1             	mov    %rdx,%rcx
  41396b:	ba f4 9c 41 00       	mov    $0x419cf4,%edx
  413970:	be 00 00 00 00       	mov    $0x0,%esi
  413975:	48 89 c7             	mov    %rax,%rdi
  413978:	e8 e2 be ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41397d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413985:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  41398b:	41 b8 f8 08 62 00    	mov    $0x6208f8,%r8d
  413991:	48 89 d1             	mov    %rdx,%rcx
  413994:	ba fd 9c 41 00       	mov    $0x419cfd,%edx
  413999:	be 00 00 00 00       	mov    $0x0,%esi
  41399e:	48 89 c7             	mov    %rax,%rdi
  4139a1:	e8 b9 be ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4139a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4139aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139ae:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4139b4:	41 b8 00 09 62 00    	mov    $0x620900,%r8d
  4139ba:	48 89 d1             	mov    %rdx,%rcx
  4139bd:	ba 03 9d 41 00       	mov    $0x419d03,%edx
  4139c2:	be 00 00 00 00       	mov    $0x0,%esi
  4139c7:	48 89 c7             	mov    %rax,%rdi
  4139ca:	e8 90 be ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4139cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4139d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139d7:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4139dd:	41 b8 08 09 62 00    	mov    $0x620908,%r8d
  4139e3:	48 89 d1             	mov    %rdx,%rcx
  4139e6:	ba 0a 9d 41 00       	mov    $0x419d0a,%edx
  4139eb:	be 00 00 00 00       	mov    $0x0,%esi
  4139f0:	48 89 c7             	mov    %rax,%rdi
  4139f3:	e8 67 be ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4139f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4139fc:	be 11 9d 41 00       	mov    $0x419d11,%esi
  413a01:	48 89 c7             	mov    %rax,%rdi
  413a04:	e8 f8 01 ff ff       	callq  403c01 <TableStrRegister>
  413a09:	48 89 c2             	mov    %rax,%rdx
  413a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a10:	48 89 d6             	mov    %rdx,%rsi
  413a13:	48 89 c7             	mov    %rax,%rdi
  413a16:	e8 e4 bc ff ff       	callq  40f6ff <VariableDefined>
  413a1b:	85 c0                	test   %eax,%eax
  413a1d:	75 30                	jne    413a4f <StdioSetupFunc+0x382>
  413a1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a23:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  413a2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413a2e:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  413a34:	41 b8 e8 08 62 00    	mov    $0x6208e8,%r8d
  413a3a:	48 89 d1             	mov    %rdx,%rcx
  413a3d:	ba 11 9d 41 00       	mov    $0x419d11,%edx
  413a42:	be 00 00 00 00       	mov    $0x0,%esi
  413a47:	48 89 c7             	mov    %rax,%rdi
  413a4a:	e8 10 be ff ff       	callq  40f85f <VariableDefinePlatformVar>
  413a4f:	90                   	nop
  413a50:	c9                   	leaveq 
  413a51:	c3                   	retq   

0000000000413a52 <PrintCh>:
  413a52:	55                   	push   %rbp
  413a53:	48 89 e5             	mov    %rsp,%rbp
  413a56:	48 83 ec 10          	sub    $0x10,%rsp
  413a5a:	89 f8                	mov    %edi,%eax
  413a5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413a60:	88 45 fc             	mov    %al,-0x4(%rbp)
  413a63:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
  413a67:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413a6b:	48 89 d6             	mov    %rdx,%rsi
  413a6e:	89 c7                	mov    %eax,%edi
  413a70:	e8 3b f1 fe ff       	callq  402bb0 <_IO_putc@plt>
  413a75:	90                   	nop
  413a76:	c9                   	leaveq 
  413a77:	c3                   	retq   

0000000000413a78 <PrintSimpleInt>:
  413a78:	55                   	push   %rbp
  413a79:	48 89 e5             	mov    %rsp,%rbp
  413a7c:	48 83 ec 10          	sub    $0x10,%rsp
  413a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413a84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413a88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  413a8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413a90:	be 16 9d 41 00       	mov    $0x419d16,%esi
  413a95:	48 89 c7             	mov    %rax,%rdi
  413a98:	b8 00 00 00 00       	mov    $0x0,%eax
  413a9d:	e8 8e f3 fe ff       	callq  402e30 <fprintf@plt>
  413aa2:	90                   	nop
  413aa3:	c9                   	leaveq 
  413aa4:	c3                   	retq   

0000000000413aa5 <PrintStr>:
  413aa5:	55                   	push   %rbp
  413aa6:	48 89 e5             	mov    %rsp,%rbp
  413aa9:	48 83 ec 10          	sub    $0x10,%rsp
  413aad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413ab1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413ab5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  413ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  413abd:	48 89 d6             	mov    %rdx,%rsi
  413ac0:	48 89 c7             	mov    %rax,%rdi
  413ac3:	e8 78 f1 fe ff       	callq  402c40 <fputs@plt>
  413ac8:	90                   	nop
  413ac9:	c9                   	leaveq 
  413aca:	c3                   	retq   

0000000000413acb <PrintFP>:
  413acb:	55                   	push   %rbp
  413acc:	48 89 e5             	mov    %rsp,%rbp
  413acf:	48 83 ec 20          	sub    $0x20,%rsp
  413ad3:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
  413ad8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
  413adc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  413ae0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413ae4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  413ae8:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
  413aed:	be 1a 9d 41 00       	mov    $0x419d1a,%esi
  413af2:	48 89 c7             	mov    %rax,%rdi
  413af5:	b8 01 00 00 00       	mov    $0x1,%eax
  413afa:	e8 31 f3 fe ff       	callq  402e30 <fprintf@plt>
  413aff:	90                   	nop
  413b00:	c9                   	leaveq 
  413b01:	c3                   	retq   

0000000000413b02 <StringStrcpy>:
  413b02:	55                   	push   %rbp
  413b03:	48 89 e5             	mov    %rsp,%rbp
  413b06:	53                   	push   %rbx
  413b07:	48 83 ec 28          	sub    $0x28,%rsp
  413b0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413b0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413b13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413b17:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413b1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b1e:	48 83 c0 08          	add    $0x8,%rax
  413b22:	48 8b 00             	mov    (%rax),%rax
  413b25:	48 8b 40 08          	mov    0x8(%rax),%rax
  413b29:	48 8b 10             	mov    (%rax),%rdx
  413b2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b30:	48 8b 00             	mov    (%rax),%rax
  413b33:	48 8b 40 08          	mov    0x8(%rax),%rax
  413b37:	48 8b 00             	mov    (%rax),%rax
  413b3a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  413b3e:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  413b42:	48 89 d6             	mov    %rdx,%rsi
  413b45:	48 89 c7             	mov    %rax,%rdi
  413b48:	e8 b3 ee fe ff       	callq  402a00 <strcpy@plt>
  413b4d:	48 89 03             	mov    %rax,(%rbx)
  413b50:	90                   	nop
  413b51:	48 83 c4 28          	add    $0x28,%rsp
  413b55:	5b                   	pop    %rbx
  413b56:	5d                   	pop    %rbp
  413b57:	c3                   	retq   

0000000000413b58 <StringStrncpy>:
  413b58:	55                   	push   %rbp
  413b59:	48 89 e5             	mov    %rsp,%rbp
  413b5c:	53                   	push   %rbx
  413b5d:	48 83 ec 28          	sub    $0x28,%rsp
  413b61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413b65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413b69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413b6d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413b70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b74:	48 83 c0 10          	add    $0x10,%rax
  413b78:	48 8b 00             	mov    (%rax),%rax
  413b7b:	48 8b 40 08          	mov    0x8(%rax),%rax
  413b7f:	8b 00                	mov    (%rax),%eax
  413b81:	48 63 d0             	movslq %eax,%rdx
  413b84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b88:	48 83 c0 08          	add    $0x8,%rax
  413b8c:	48 8b 00             	mov    (%rax),%rax
  413b8f:	48 8b 40 08          	mov    0x8(%rax),%rax
  413b93:	48 8b 08             	mov    (%rax),%rcx
  413b96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413b9a:	48 8b 00             	mov    (%rax),%rax
  413b9d:	48 8b 40 08          	mov    0x8(%rax),%rax
  413ba1:	48 8b 00             	mov    (%rax),%rax
  413ba4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413ba8:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413bac:	48 89 ce             	mov    %rcx,%rsi
  413baf:	48 89 c7             	mov    %rax,%rdi
  413bb2:	e8 f9 ed fe ff       	callq  4029b0 <strncpy@plt>
  413bb7:	48 89 03             	mov    %rax,(%rbx)
  413bba:	90                   	nop
  413bbb:	48 83 c4 28          	add    $0x28,%rsp
  413bbf:	5b                   	pop    %rbx
  413bc0:	5d                   	pop    %rbp
  413bc1:	c3                   	retq   

0000000000413bc2 <StringStrcmp>:
  413bc2:	55                   	push   %rbp
  413bc3:	48 89 e5             	mov    %rsp,%rbp
  413bc6:	53                   	push   %rbx
  413bc7:	48 83 ec 28          	sub    $0x28,%rsp
  413bcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413bcf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413bd3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413bd7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413bda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413bde:	48 83 c0 08          	add    $0x8,%rax
  413be2:	48 8b 00             	mov    (%rax),%rax
  413be5:	48 8b 40 08          	mov    0x8(%rax),%rax
  413be9:	48 8b 10             	mov    (%rax),%rdx
  413bec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413bf0:	48 8b 00             	mov    (%rax),%rax
  413bf3:	48 8b 40 08          	mov    0x8(%rax),%rax
  413bf7:	48 8b 00             	mov    (%rax),%rax
  413bfa:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  413bfe:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  413c02:	48 89 d6             	mov    %rdx,%rsi
  413c05:	48 89 c7             	mov    %rax,%rdi
  413c08:	e8 e3 f1 fe ff       	callq  402df0 <strcmp@plt>
  413c0d:	89 03                	mov    %eax,(%rbx)
  413c0f:	90                   	nop
  413c10:	48 83 c4 28          	add    $0x28,%rsp
  413c14:	5b                   	pop    %rbx
  413c15:	5d                   	pop    %rbp
  413c16:	c3                   	retq   

0000000000413c17 <StringStrncmp>:
  413c17:	55                   	push   %rbp
  413c18:	48 89 e5             	mov    %rsp,%rbp
  413c1b:	53                   	push   %rbx
  413c1c:	48 83 ec 28          	sub    $0x28,%rsp
  413c20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413c24:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413c28:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413c2c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c33:	48 83 c0 10          	add    $0x10,%rax
  413c37:	48 8b 00             	mov    (%rax),%rax
  413c3a:	48 8b 40 08          	mov    0x8(%rax),%rax
  413c3e:	8b 00                	mov    (%rax),%eax
  413c40:	48 63 d0             	movslq %eax,%rdx
  413c43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c47:	48 83 c0 08          	add    $0x8,%rax
  413c4b:	48 8b 00             	mov    (%rax),%rax
  413c4e:	48 8b 40 08          	mov    0x8(%rax),%rax
  413c52:	48 8b 08             	mov    (%rax),%rcx
  413c55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c59:	48 8b 00             	mov    (%rax),%rax
  413c5c:	48 8b 40 08          	mov    0x8(%rax),%rax
  413c60:	48 8b 00             	mov    (%rax),%rax
  413c63:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413c67:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413c6b:	48 89 ce             	mov    %rcx,%rsi
  413c6e:	48 89 c7             	mov    %rax,%rdi
  413c71:	e8 6a ed fe ff       	callq  4029e0 <strncmp@plt>
  413c76:	89 03                	mov    %eax,(%rbx)
  413c78:	90                   	nop
  413c79:	48 83 c4 28          	add    $0x28,%rsp
  413c7d:	5b                   	pop    %rbx
  413c7e:	5d                   	pop    %rbp
  413c7f:	c3                   	retq   

0000000000413c80 <StringStrcat>:
  413c80:	55                   	push   %rbp
  413c81:	48 89 e5             	mov    %rsp,%rbp
  413c84:	53                   	push   %rbx
  413c85:	48 83 ec 28          	sub    $0x28,%rsp
  413c89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413c8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413c91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413c95:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413c98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413c9c:	48 83 c0 08          	add    $0x8,%rax
  413ca0:	48 8b 00             	mov    (%rax),%rax
  413ca3:	48 8b 40 08          	mov    0x8(%rax),%rax
  413ca7:	48 8b 10             	mov    (%rax),%rdx
  413caa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413cae:	48 8b 00             	mov    (%rax),%rax
  413cb1:	48 8b 40 08          	mov    0x8(%rax),%rax
  413cb5:	48 8b 00             	mov    (%rax),%rax
  413cb8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  413cbc:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  413cc0:	48 89 d6             	mov    %rdx,%rsi
  413cc3:	48 89 c7             	mov    %rax,%rdi
  413cc6:	e8 35 f5 fe ff       	callq  403200 <strcat@plt>
  413ccb:	48 89 03             	mov    %rax,(%rbx)
  413cce:	90                   	nop
  413ccf:	48 83 c4 28          	add    $0x28,%rsp
  413cd3:	5b                   	pop    %rbx
  413cd4:	5d                   	pop    %rbp
  413cd5:	c3                   	retq   

0000000000413cd6 <StringStrncat>:
  413cd6:	55                   	push   %rbp
  413cd7:	48 89 e5             	mov    %rsp,%rbp
  413cda:	53                   	push   %rbx
  413cdb:	48 83 ec 28          	sub    $0x28,%rsp
  413cdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413ce3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413ce7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413ceb:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413cf2:	48 83 c0 10          	add    $0x10,%rax
  413cf6:	48 8b 00             	mov    (%rax),%rax
  413cf9:	48 8b 40 08          	mov    0x8(%rax),%rax
  413cfd:	8b 00                	mov    (%rax),%eax
  413cff:	48 63 d0             	movslq %eax,%rdx
  413d02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413d06:	48 83 c0 08          	add    $0x8,%rax
  413d0a:	48 8b 00             	mov    (%rax),%rax
  413d0d:	48 8b 40 08          	mov    0x8(%rax),%rax
  413d11:	48 8b 08             	mov    (%rax),%rcx
  413d14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413d18:	48 8b 00             	mov    (%rax),%rax
  413d1b:	48 8b 40 08          	mov    0x8(%rax),%rax
  413d1f:	48 8b 00             	mov    (%rax),%rax
  413d22:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413d26:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413d2a:	48 89 ce             	mov    %rcx,%rsi
  413d2d:	48 89 c7             	mov    %rax,%rdi
  413d30:	e8 7b ef fe ff       	callq  402cb0 <strncat@plt>
  413d35:	48 89 03             	mov    %rax,(%rbx)
  413d38:	90                   	nop
  413d39:	48 83 c4 28          	add    $0x28,%rsp
  413d3d:	5b                   	pop    %rbx
  413d3e:	5d                   	pop    %rbp
  413d3f:	c3                   	retq   

0000000000413d40 <StringIndex>:
  413d40:	55                   	push   %rbp
  413d41:	48 89 e5             	mov    %rsp,%rbp
  413d44:	53                   	push   %rbx
  413d45:	48 83 ec 28          	sub    $0x28,%rsp
  413d49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413d4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413d51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413d55:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413d58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413d5c:	48 83 c0 08          	add    $0x8,%rax
  413d60:	48 8b 00             	mov    (%rax),%rax
  413d63:	48 8b 40 08          	mov    0x8(%rax),%rax
  413d67:	8b 10                	mov    (%rax),%edx
  413d69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413d6d:	48 8b 00             	mov    (%rax),%rax
  413d70:	48 8b 40 08          	mov    0x8(%rax),%rax
  413d74:	48 8b 00             	mov    (%rax),%rax
  413d77:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  413d7b:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  413d7f:	89 d6                	mov    %edx,%esi
  413d81:	48 89 c7             	mov    %rax,%rdi
  413d84:	e8 07 ef fe ff       	callq  402c90 <index@plt>
  413d89:	48 89 03             	mov    %rax,(%rbx)
  413d8c:	90                   	nop
  413d8d:	48 83 c4 28          	add    $0x28,%rsp
  413d91:	5b                   	pop    %rbx
  413d92:	5d                   	pop    %rbp
  413d93:	c3                   	retq   

0000000000413d94 <StringRindex>:
  413d94:	55                   	push   %rbp
  413d95:	48 89 e5             	mov    %rsp,%rbp
  413d98:	53                   	push   %rbx
  413d99:	48 83 ec 28          	sub    $0x28,%rsp
  413d9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413da1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413da5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413da9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413dac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413db0:	48 83 c0 08          	add    $0x8,%rax
  413db4:	48 8b 00             	mov    (%rax),%rax
  413db7:	48 8b 40 08          	mov    0x8(%rax),%rax
  413dbb:	8b 10                	mov    (%rax),%edx
  413dbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413dc1:	48 8b 00             	mov    (%rax),%rax
  413dc4:	48 8b 40 08          	mov    0x8(%rax),%rax
  413dc8:	48 8b 00             	mov    (%rax),%rax
  413dcb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  413dcf:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  413dd3:	89 d6                	mov    %edx,%esi
  413dd5:	48 89 c7             	mov    %rax,%rdi
  413dd8:	e8 83 f3 fe ff       	callq  403160 <rindex@plt>
  413ddd:	48 89 03             	mov    %rax,(%rbx)
  413de0:	90                   	nop
  413de1:	48 83 c4 28          	add    $0x28,%rsp
  413de5:	5b                   	pop    %rbx
  413de6:	5d                   	pop    %rbp
  413de7:	c3                   	retq   

0000000000413de8 <StringStrlen>:
  413de8:	55                   	push   %rbp
  413de9:	48 89 e5             	mov    %rsp,%rbp
  413dec:	48 83 ec 20          	sub    $0x20,%rsp
  413df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  413df4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  413df8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  413dfc:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  413dff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  413e03:	48 8b 00             	mov    (%rax),%rax
  413e06:	48 8b 40 08          	mov    0x8(%rax),%rax
  413e0a:	48 8b 00             	mov    (%rax),%rax
  413e0d:	48 89 c7             	mov    %rax,%rdi
  413e10:	e8 eb ec fe ff       	callq  402b00 <strlen@plt>
  413e15:	48 89 c2             	mov    %rax,%rdx
  413e18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  413e1c:	48 8b 40 08          	mov    0x8(%rax),%rax
  413e20:	89 10                	mov    %edx,(%rax)
  413e22:	90                   	nop
  413e23:	c9                   	leaveq 
  413e24:	c3                   	retq   

0000000000413e25 <StringMemset>:
  413e25:	55                   	push   %rbp
  413e26:	48 89 e5             	mov    %rsp,%rbp
  413e29:	53                   	push   %rbx
  413e2a:	48 83 ec 28          	sub    $0x28,%rsp
  413e2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413e32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413e36:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413e3a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413e3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413e41:	48 83 c0 10          	add    $0x10,%rax
  413e45:	48 8b 00             	mov    (%rax),%rax
  413e48:	48 8b 40 08          	mov    0x8(%rax),%rax
  413e4c:	8b 00                	mov    (%rax),%eax
  413e4e:	48 63 d0             	movslq %eax,%rdx
  413e51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413e55:	48 83 c0 08          	add    $0x8,%rax
  413e59:	48 8b 00             	mov    (%rax),%rax
  413e5c:	48 8b 40 08          	mov    0x8(%rax),%rax
  413e60:	8b 08                	mov    (%rax),%ecx
  413e62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413e66:	48 8b 00             	mov    (%rax),%rax
  413e69:	48 8b 40 08          	mov    0x8(%rax),%rax
  413e6d:	48 8b 00             	mov    (%rax),%rax
  413e70:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413e74:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413e78:	89 ce                	mov    %ecx,%esi
  413e7a:	48 89 c7             	mov    %rax,%rdi
  413e7d:	e8 de ed fe ff       	callq  402c60 <memset@plt>
  413e82:	48 89 03             	mov    %rax,(%rbx)
  413e85:	90                   	nop
  413e86:	48 83 c4 28          	add    $0x28,%rsp
  413e8a:	5b                   	pop    %rbx
  413e8b:	5d                   	pop    %rbp
  413e8c:	c3                   	retq   

0000000000413e8d <StringMemcpy>:
  413e8d:	55                   	push   %rbp
  413e8e:	48 89 e5             	mov    %rsp,%rbp
  413e91:	53                   	push   %rbx
  413e92:	48 83 ec 28          	sub    $0x28,%rsp
  413e96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413e9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413e9e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413ea2:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413ea5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ea9:	48 83 c0 10          	add    $0x10,%rax
  413ead:	48 8b 00             	mov    (%rax),%rax
  413eb0:	48 8b 40 08          	mov    0x8(%rax),%rax
  413eb4:	8b 00                	mov    (%rax),%eax
  413eb6:	48 63 d0             	movslq %eax,%rdx
  413eb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ebd:	48 83 c0 08          	add    $0x8,%rax
  413ec1:	48 8b 00             	mov    (%rax),%rax
  413ec4:	48 8b 40 08          	mov    0x8(%rax),%rax
  413ec8:	48 8b 08             	mov    (%rax),%rcx
  413ecb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ecf:	48 8b 00             	mov    (%rax),%rax
  413ed2:	48 8b 40 08          	mov    0x8(%rax),%rax
  413ed6:	48 8b 00             	mov    (%rax),%rax
  413ed9:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413edd:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413ee1:	48 89 ce             	mov    %rcx,%rsi
  413ee4:	48 89 c7             	mov    %rax,%rdi
  413ee7:	e8 94 ef fe ff       	callq  402e80 <memcpy@plt>
  413eec:	48 89 03             	mov    %rax,(%rbx)
  413eef:	90                   	nop
  413ef0:	48 83 c4 28          	add    $0x28,%rsp
  413ef4:	5b                   	pop    %rbx
  413ef5:	5d                   	pop    %rbp
  413ef6:	c3                   	retq   

0000000000413ef7 <StringMemcmp>:
  413ef7:	55                   	push   %rbp
  413ef8:	48 89 e5             	mov    %rsp,%rbp
  413efb:	53                   	push   %rbx
  413efc:	48 83 ec 28          	sub    $0x28,%rsp
  413f00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413f04:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413f08:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413f0c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413f0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f13:	48 83 c0 10          	add    $0x10,%rax
  413f17:	48 8b 00             	mov    (%rax),%rax
  413f1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  413f1e:	8b 00                	mov    (%rax),%eax
  413f20:	48 63 d0             	movslq %eax,%rdx
  413f23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f27:	48 83 c0 08          	add    $0x8,%rax
  413f2b:	48 8b 00             	mov    (%rax),%rax
  413f2e:	48 8b 40 08          	mov    0x8(%rax),%rax
  413f32:	48 8b 08             	mov    (%rax),%rcx
  413f35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f39:	48 8b 00             	mov    (%rax),%rax
  413f3c:	48 8b 40 08          	mov    0x8(%rax),%rax
  413f40:	48 8b 00             	mov    (%rax),%rax
  413f43:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413f47:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413f4b:	48 89 ce             	mov    %rcx,%rsi
  413f4e:	48 89 c7             	mov    %rax,%rdi
  413f51:	e8 2a ee fe ff       	callq  402d80 <memcmp@plt>
  413f56:	89 03                	mov    %eax,(%rbx)
  413f58:	90                   	nop
  413f59:	48 83 c4 28          	add    $0x28,%rsp
  413f5d:	5b                   	pop    %rbx
  413f5e:	5d                   	pop    %rbp
  413f5f:	c3                   	retq   

0000000000413f60 <StringMemmove>:
  413f60:	55                   	push   %rbp
  413f61:	48 89 e5             	mov    %rsp,%rbp
  413f64:	53                   	push   %rbx
  413f65:	48 83 ec 28          	sub    $0x28,%rsp
  413f69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413f6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413f71:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413f75:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413f78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f7c:	48 83 c0 10          	add    $0x10,%rax
  413f80:	48 8b 00             	mov    (%rax),%rax
  413f83:	48 8b 40 08          	mov    0x8(%rax),%rax
  413f87:	8b 00                	mov    (%rax),%eax
  413f89:	48 63 d0             	movslq %eax,%rdx
  413f8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413f90:	48 83 c0 08          	add    $0x8,%rax
  413f94:	48 8b 00             	mov    (%rax),%rax
  413f97:	48 8b 40 08          	mov    0x8(%rax),%rax
  413f9b:	48 8b 08             	mov    (%rax),%rcx
  413f9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413fa2:	48 8b 00             	mov    (%rax),%rax
  413fa5:	48 8b 40 08          	mov    0x8(%rax),%rax
  413fa9:	48 8b 00             	mov    (%rax),%rax
  413fac:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  413fb0:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  413fb4:	48 89 ce             	mov    %rcx,%rsi
  413fb7:	48 89 c7             	mov    %rax,%rdi
  413fba:	e8 f1 f0 fe ff       	callq  4030b0 <memmove@plt>
  413fbf:	48 89 03             	mov    %rax,(%rbx)
  413fc2:	90                   	nop
  413fc3:	48 83 c4 28          	add    $0x28,%rsp
  413fc7:	5b                   	pop    %rbx
  413fc8:	5d                   	pop    %rbp
  413fc9:	c3                   	retq   

0000000000413fca <StringMemchr>:
  413fca:	55                   	push   %rbp
  413fcb:	48 89 e5             	mov    %rsp,%rbp
  413fce:	53                   	push   %rbx
  413fcf:	48 83 ec 28          	sub    $0x28,%rsp
  413fd3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  413fd7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  413fdb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  413fdf:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  413fe2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413fe6:	48 83 c0 10          	add    $0x10,%rax
  413fea:	48 8b 00             	mov    (%rax),%rax
  413fed:	48 8b 40 08          	mov    0x8(%rax),%rax
  413ff1:	8b 00                	mov    (%rax),%eax
  413ff3:	48 63 d0             	movslq %eax,%rdx
  413ff6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  413ffa:	48 83 c0 08          	add    $0x8,%rax
  413ffe:	48 8b 00             	mov    (%rax),%rax
  414001:	48 8b 40 08          	mov    0x8(%rax),%rax
  414005:	8b 08                	mov    (%rax),%ecx
  414007:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41400b:	48 8b 00             	mov    (%rax),%rax
  41400e:	48 8b 40 08          	mov    0x8(%rax),%rax
  414012:	48 8b 00             	mov    (%rax),%rax
  414015:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  414019:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  41401d:	89 ce                	mov    %ecx,%esi
  41401f:	48 89 c7             	mov    %rax,%rdi
  414022:	e8 29 ed fe ff       	callq  402d50 <memchr@plt>
  414027:	48 89 03             	mov    %rax,(%rbx)
  41402a:	90                   	nop
  41402b:	48 83 c4 28          	add    $0x28,%rsp
  41402f:	5b                   	pop    %rbx
  414030:	5d                   	pop    %rbp
  414031:	c3                   	retq   

0000000000414032 <StringStrchr>:
  414032:	55                   	push   %rbp
  414033:	48 89 e5             	mov    %rsp,%rbp
  414036:	53                   	push   %rbx
  414037:	48 83 ec 28          	sub    $0x28,%rsp
  41403b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41403f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414043:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414047:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41404a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41404e:	48 83 c0 08          	add    $0x8,%rax
  414052:	48 8b 00             	mov    (%rax),%rax
  414055:	48 8b 40 08          	mov    0x8(%rax),%rax
  414059:	8b 10                	mov    (%rax),%edx
  41405b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41405f:	48 8b 00             	mov    (%rax),%rax
  414062:	48 8b 40 08          	mov    0x8(%rax),%rax
  414066:	48 8b 00             	mov    (%rax),%rax
  414069:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41406d:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  414071:	89 d6                	mov    %edx,%esi
  414073:	48 89 c7             	mov    %rax,%rdi
  414076:	e8 f5 ea fe ff       	callq  402b70 <strchr@plt>
  41407b:	48 89 03             	mov    %rax,(%rbx)
  41407e:	90                   	nop
  41407f:	48 83 c4 28          	add    $0x28,%rsp
  414083:	5b                   	pop    %rbx
  414084:	5d                   	pop    %rbp
  414085:	c3                   	retq   

0000000000414086 <StringStrrchr>:
  414086:	55                   	push   %rbp
  414087:	48 89 e5             	mov    %rsp,%rbp
  41408a:	53                   	push   %rbx
  41408b:	48 83 ec 28          	sub    $0x28,%rsp
  41408f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414093:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414097:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41409b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41409e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140a2:	48 83 c0 08          	add    $0x8,%rax
  4140a6:	48 8b 00             	mov    (%rax),%rax
  4140a9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4140ad:	8b 10                	mov    (%rax),%edx
  4140af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140b3:	48 8b 00             	mov    (%rax),%rax
  4140b6:	48 8b 40 08          	mov    0x8(%rax),%rax
  4140ba:	48 8b 00             	mov    (%rax),%rax
  4140bd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4140c1:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4140c5:	89 d6                	mov    %edx,%esi
  4140c7:	48 89 c7             	mov    %rax,%rdi
  4140ca:	e8 11 eb fe ff       	callq  402be0 <strrchr@plt>
  4140cf:	48 89 03             	mov    %rax,(%rbx)
  4140d2:	90                   	nop
  4140d3:	48 83 c4 28          	add    $0x28,%rsp
  4140d7:	5b                   	pop    %rbx
  4140d8:	5d                   	pop    %rbp
  4140d9:	c3                   	retq   

00000000004140da <StringStrcoll>:
  4140da:	55                   	push   %rbp
  4140db:	48 89 e5             	mov    %rsp,%rbp
  4140de:	53                   	push   %rbx
  4140df:	48 83 ec 28          	sub    $0x28,%rsp
  4140e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4140e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4140eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4140ef:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4140f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4140f6:	48 83 c0 08          	add    $0x8,%rax
  4140fa:	48 8b 00             	mov    (%rax),%rax
  4140fd:	48 8b 40 08          	mov    0x8(%rax),%rax
  414101:	48 8b 10             	mov    (%rax),%rdx
  414104:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414108:	48 8b 00             	mov    (%rax),%rax
  41410b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41410f:	48 8b 00             	mov    (%rax),%rax
  414112:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  414116:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  41411a:	48 89 d6             	mov    %rdx,%rsi
  41411d:	48 89 c7             	mov    %rax,%rdi
  414120:	e8 8b ee fe ff       	callq  402fb0 <strcoll@plt>
  414125:	89 03                	mov    %eax,(%rbx)
  414127:	90                   	nop
  414128:	48 83 c4 28          	add    $0x28,%rsp
  41412c:	5b                   	pop    %rbx
  41412d:	5d                   	pop    %rbp
  41412e:	c3                   	retq   

000000000041412f <StringStrerror>:
  41412f:	55                   	push   %rbp
  414130:	48 89 e5             	mov    %rsp,%rbp
  414133:	53                   	push   %rbx
  414134:	48 83 ec 28          	sub    $0x28,%rsp
  414138:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41413c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414140:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414144:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414147:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41414b:	48 8b 00             	mov    (%rax),%rax
  41414e:	48 8b 40 08          	mov    0x8(%rax),%rax
  414152:	8b 00                	mov    (%rax),%eax
  414154:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  414158:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41415c:	89 c7                	mov    %eax,%edi
  41415e:	e8 3d f1 fe ff       	callq  4032a0 <strerror@plt>
  414163:	48 89 03             	mov    %rax,(%rbx)
  414166:	90                   	nop
  414167:	48 83 c4 28          	add    $0x28,%rsp
  41416b:	5b                   	pop    %rbx
  41416c:	5d                   	pop    %rbp
  41416d:	c3                   	retq   

000000000041416e <StringStrspn>:
  41416e:	55                   	push   %rbp
  41416f:	48 89 e5             	mov    %rsp,%rbp
  414172:	48 83 ec 20          	sub    $0x20,%rsp
  414176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41417a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41417e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414182:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414185:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414189:	48 83 c0 08          	add    $0x8,%rax
  41418d:	48 8b 00             	mov    (%rax),%rax
  414190:	48 8b 40 08          	mov    0x8(%rax),%rax
  414194:	48 8b 10             	mov    (%rax),%rdx
  414197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41419b:	48 8b 00             	mov    (%rax),%rax
  41419e:	48 8b 40 08          	mov    0x8(%rax),%rax
  4141a2:	48 8b 00             	mov    (%rax),%rax
  4141a5:	48 89 d6             	mov    %rdx,%rsi
  4141a8:	48 89 c7             	mov    %rax,%rdi
  4141ab:	e8 50 eb fe ff       	callq  402d00 <strspn@plt>
  4141b0:	48 89 c2             	mov    %rax,%rdx
  4141b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4141b7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4141bb:	89 10                	mov    %edx,(%rax)
  4141bd:	90                   	nop
  4141be:	c9                   	leaveq 
  4141bf:	c3                   	retq   

00000000004141c0 <StringStrcspn>:
  4141c0:	55                   	push   %rbp
  4141c1:	48 89 e5             	mov    %rsp,%rbp
  4141c4:	48 83 ec 20          	sub    $0x20,%rsp
  4141c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4141cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4141d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4141d4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4141d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4141db:	48 83 c0 08          	add    $0x8,%rax
  4141df:	48 8b 00             	mov    (%rax),%rax
  4141e2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4141e6:	48 8b 10             	mov    (%rax),%rdx
  4141e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4141ed:	48 8b 00             	mov    (%rax),%rax
  4141f0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4141f4:	48 8b 00             	mov    (%rax),%rax
  4141f7:	48 89 d6             	mov    %rdx,%rsi
  4141fa:	48 89 c7             	mov    %rax,%rdi
  4141fd:	e8 2e eb fe ff       	callq  402d30 <strcspn@plt>
  414202:	48 89 c2             	mov    %rax,%rdx
  414205:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414209:	48 8b 40 08          	mov    0x8(%rax),%rax
  41420d:	89 10                	mov    %edx,(%rax)
  41420f:	90                   	nop
  414210:	c9                   	leaveq 
  414211:	c3                   	retq   

0000000000414212 <StringStrpbrk>:
  414212:	55                   	push   %rbp
  414213:	48 89 e5             	mov    %rsp,%rbp
  414216:	53                   	push   %rbx
  414217:	48 83 ec 28          	sub    $0x28,%rsp
  41421b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41421f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414223:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414227:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41422a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41422e:	48 83 c0 08          	add    $0x8,%rax
  414232:	48 8b 00             	mov    (%rax),%rax
  414235:	48 8b 40 08          	mov    0x8(%rax),%rax
  414239:	48 8b 10             	mov    (%rax),%rdx
  41423c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414240:	48 8b 00             	mov    (%rax),%rax
  414243:	48 8b 40 08          	mov    0x8(%rax),%rax
  414247:	48 8b 00             	mov    (%rax),%rax
  41424a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41424e:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  414252:	48 89 d6             	mov    %rdx,%rsi
  414255:	48 89 c7             	mov    %rax,%rdi
  414258:	e8 73 ed fe ff       	callq  402fd0 <strpbrk@plt>
  41425d:	48 89 03             	mov    %rax,(%rbx)
  414260:	90                   	nop
  414261:	48 83 c4 28          	add    $0x28,%rsp
  414265:	5b                   	pop    %rbx
  414266:	5d                   	pop    %rbp
  414267:	c3                   	retq   

0000000000414268 <StringStrstr>:
  414268:	55                   	push   %rbp
  414269:	48 89 e5             	mov    %rsp,%rbp
  41426c:	53                   	push   %rbx
  41426d:	48 83 ec 28          	sub    $0x28,%rsp
  414271:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414275:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414279:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41427d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414280:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414284:	48 83 c0 08          	add    $0x8,%rax
  414288:	48 8b 00             	mov    (%rax),%rax
  41428b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41428f:	48 8b 10             	mov    (%rax),%rdx
  414292:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414296:	48 8b 00             	mov    (%rax),%rax
  414299:	48 8b 40 08          	mov    0x8(%rax),%rax
  41429d:	48 8b 00             	mov    (%rax),%rax
  4142a0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4142a4:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4142a8:	48 89 d6             	mov    %rdx,%rsi
  4142ab:	48 89 c7             	mov    %rax,%rdi
  4142ae:	e8 3d f0 fe ff       	callq  4032f0 <strstr@plt>
  4142b3:	48 89 03             	mov    %rax,(%rbx)
  4142b6:	90                   	nop
  4142b7:	48 83 c4 28          	add    $0x28,%rsp
  4142bb:	5b                   	pop    %rbx
  4142bc:	5d                   	pop    %rbp
  4142bd:	c3                   	retq   

00000000004142be <StringStrtok>:
  4142be:	55                   	push   %rbp
  4142bf:	48 89 e5             	mov    %rsp,%rbp
  4142c2:	53                   	push   %rbx
  4142c3:	48 83 ec 28          	sub    $0x28,%rsp
  4142c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4142cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4142cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4142d3:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4142d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142da:	48 83 c0 08          	add    $0x8,%rax
  4142de:	48 8b 00             	mov    (%rax),%rax
  4142e1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4142e5:	48 8b 10             	mov    (%rax),%rdx
  4142e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4142ec:	48 8b 00             	mov    (%rax),%rax
  4142ef:	48 8b 40 08          	mov    0x8(%rax),%rax
  4142f3:	48 8b 00             	mov    (%rax),%rax
  4142f6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4142fa:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4142fe:	48 89 d6             	mov    %rdx,%rsi
  414301:	48 89 c7             	mov    %rax,%rdi
  414304:	e8 77 ee fe ff       	callq  403180 <strtok@plt>
  414309:	48 89 03             	mov    %rax,(%rbx)
  41430c:	90                   	nop
  41430d:	48 83 c4 28          	add    $0x28,%rsp
  414311:	5b                   	pop    %rbx
  414312:	5d                   	pop    %rbp
  414313:	c3                   	retq   

0000000000414314 <StringStrxfrm>:
  414314:	55                   	push   %rbp
  414315:	48 89 e5             	mov    %rsp,%rbp
  414318:	48 83 ec 20          	sub    $0x20,%rsp
  41431c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414324:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414328:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41432b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41432f:	48 83 c0 10          	add    $0x10,%rax
  414333:	48 8b 00             	mov    (%rax),%rax
  414336:	48 8b 40 08          	mov    0x8(%rax),%rax
  41433a:	8b 00                	mov    (%rax),%eax
  41433c:	48 63 d0             	movslq %eax,%rdx
  41433f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414343:	48 83 c0 08          	add    $0x8,%rax
  414347:	48 8b 00             	mov    (%rax),%rax
  41434a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41434e:	48 8b 08             	mov    (%rax),%rcx
  414351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414355:	48 8b 00             	mov    (%rax),%rax
  414358:	48 8b 40 08          	mov    0x8(%rax),%rax
  41435c:	48 8b 00             	mov    (%rax),%rax
  41435f:	48 89 ce             	mov    %rcx,%rsi
  414362:	48 89 c7             	mov    %rax,%rdi
  414365:	e8 66 ea fe ff       	callq  402dd0 <strxfrm@plt>
  41436a:	48 89 c2             	mov    %rax,%rdx
  41436d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414371:	48 8b 40 08          	mov    0x8(%rax),%rax
  414375:	89 10                	mov    %edx,(%rax)
  414377:	90                   	nop
  414378:	c9                   	leaveq 
  414379:	c3                   	retq   

000000000041437a <StringStrdup>:
  41437a:	55                   	push   %rbp
  41437b:	48 89 e5             	mov    %rsp,%rbp
  41437e:	53                   	push   %rbx
  41437f:	48 83 ec 28          	sub    $0x28,%rsp
  414383:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414387:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41438b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41438f:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414392:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414396:	48 8b 00             	mov    (%rax),%rax
  414399:	48 8b 40 08          	mov    0x8(%rax),%rax
  41439d:	48 8b 00             	mov    (%rax),%rax
  4143a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4143a4:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4143a8:	48 89 c7             	mov    %rax,%rdi
  4143ab:	e8 e0 ee fe ff       	callq  403290 <strdup@plt>
  4143b0:	48 89 03             	mov    %rax,(%rbx)
  4143b3:	90                   	nop
  4143b4:	48 83 c4 28          	add    $0x28,%rsp
  4143b8:	5b                   	pop    %rbx
  4143b9:	5d                   	pop    %rbp
  4143ba:	c3                   	retq   

00000000004143bb <StringStrtok_r>:
  4143bb:	55                   	push   %rbp
  4143bc:	48 89 e5             	mov    %rsp,%rbp
  4143bf:	53                   	push   %rbx
  4143c0:	48 83 ec 28          	sub    $0x28,%rsp
  4143c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4143c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4143cc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4143d0:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4143d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4143d7:	48 83 c0 10          	add    $0x10,%rax
  4143db:	48 8b 00             	mov    (%rax),%rax
  4143de:	48 8b 40 08          	mov    0x8(%rax),%rax
  4143e2:	48 8b 10             	mov    (%rax),%rdx
  4143e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4143e9:	48 83 c0 08          	add    $0x8,%rax
  4143ed:	48 8b 00             	mov    (%rax),%rax
  4143f0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4143f4:	48 8b 08             	mov    (%rax),%rcx
  4143f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4143fb:	48 8b 00             	mov    (%rax),%rax
  4143fe:	48 8b 40 08          	mov    0x8(%rax),%rax
  414402:	48 8b 00             	mov    (%rax),%rax
  414405:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  414409:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  41440d:	48 89 ce             	mov    %rcx,%rsi
  414410:	48 89 c7             	mov    %rax,%rdi
  414413:	e8 28 e9 fe ff       	callq  402d40 <strtok_r@plt>
  414418:	48 89 03             	mov    %rax,(%rbx)
  41441b:	90                   	nop
  41441c:	48 83 c4 28          	add    $0x28,%rsp
  414420:	5b                   	pop    %rbx
  414421:	5d                   	pop    %rbp
  414422:	c3                   	retq   

0000000000414423 <StringSetupFunc>:
  414423:	55                   	push   %rbp
  414424:	48 89 e5             	mov    %rsp,%rbp
  414427:	48 83 ec 10          	sub    $0x10,%rsp
  41442b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41442f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414433:	be 37 a0 41 00       	mov    $0x41a037,%esi
  414438:	48 89 c7             	mov    %rax,%rdi
  41443b:	e8 c1 f7 fe ff       	callq  403c01 <TableStrRegister>
  414440:	48 89 c2             	mov    %rax,%rdx
  414443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414447:	48 89 d6             	mov    %rdx,%rsi
  41444a:	48 89 c7             	mov    %rax,%rdi
  41444d:	e8 ad b2 ff ff       	callq  40f6ff <VariableDefined>
  414452:	85 c0                	test   %eax,%eax
  414454:	75 30                	jne    414486 <StringSetupFunc+0x63>
  414456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41445a:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414465:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  41446b:	41 b8 10 09 62 00    	mov    $0x620910,%r8d
  414471:	48 89 d1             	mov    %rdx,%rcx
  414474:	ba 37 a0 41 00       	mov    $0x41a037,%edx
  414479:	be 00 00 00 00       	mov    $0x0,%esi
  41447e:	48 89 c7             	mov    %rax,%rdi
  414481:	e8 d9 b3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414486:	90                   	nop
  414487:	c9                   	leaveq 
  414488:	c3                   	retq   

0000000000414489 <StdlibAtoi>:
  414489:	55                   	push   %rbp
  41448a:	48 89 e5             	mov    %rsp,%rbp
  41448d:	53                   	push   %rbx
  41448e:	48 83 ec 28          	sub    $0x28,%rsp
  414492:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414496:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41449a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41449e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4144a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4144a5:	48 8b 00             	mov    (%rax),%rax
  4144a8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4144ac:	48 8b 00             	mov    (%rax),%rax
  4144af:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4144b3:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4144b7:	48 89 c7             	mov    %rax,%rdi
  4144ba:	e8 31 ed fe ff       	callq  4031f0 <atoi@plt>
  4144bf:	89 03                	mov    %eax,(%rbx)
  4144c1:	90                   	nop
  4144c2:	48 83 c4 28          	add    $0x28,%rsp
  4144c6:	5b                   	pop    %rbx
  4144c7:	5d                   	pop    %rbp
  4144c8:	c3                   	retq   

00000000004144c9 <StdlibAtol>:
  4144c9:	55                   	push   %rbp
  4144ca:	48 89 e5             	mov    %rsp,%rbp
  4144cd:	48 83 ec 20          	sub    $0x20,%rsp
  4144d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4144d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4144d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4144dd:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4144e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4144e4:	48 8b 00             	mov    (%rax),%rax
  4144e7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4144eb:	48 8b 00             	mov    (%rax),%rax
  4144ee:	48 89 c7             	mov    %rax,%rdi
  4144f1:	e8 1a ec fe ff       	callq  403110 <atol@plt>
  4144f6:	48 89 c2             	mov    %rax,%rdx
  4144f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4144fd:	48 8b 40 08          	mov    0x8(%rax),%rax
  414501:	89 10                	mov    %edx,(%rax)
  414503:	90                   	nop
  414504:	c9                   	leaveq 
  414505:	c3                   	retq   

0000000000414506 <StdlibStrtol>:
  414506:	55                   	push   %rbp
  414507:	48 89 e5             	mov    %rsp,%rbp
  41450a:	48 83 ec 20          	sub    $0x20,%rsp
  41450e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414512:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414516:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41451a:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41451d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414521:	48 83 c0 10          	add    $0x10,%rax
  414525:	48 8b 00             	mov    (%rax),%rax
  414528:	48 8b 40 08          	mov    0x8(%rax),%rax
  41452c:	8b 10                	mov    (%rax),%edx
  41452e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414532:	48 83 c0 08          	add    $0x8,%rax
  414536:	48 8b 00             	mov    (%rax),%rax
  414539:	48 8b 40 08          	mov    0x8(%rax),%rax
  41453d:	48 8b 08             	mov    (%rax),%rcx
  414540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414544:	48 8b 00             	mov    (%rax),%rax
  414547:	48 8b 40 08          	mov    0x8(%rax),%rax
  41454b:	48 8b 00             	mov    (%rax),%rax
  41454e:	48 89 ce             	mov    %rcx,%rsi
  414551:	48 89 c7             	mov    %rax,%rdi
  414554:	e8 07 e9 fe ff       	callq  402e60 <strtol@plt>
  414559:	48 89 c2             	mov    %rax,%rdx
  41455c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414560:	48 8b 40 08          	mov    0x8(%rax),%rax
  414564:	89 10                	mov    %edx,(%rax)
  414566:	90                   	nop
  414567:	c9                   	leaveq 
  414568:	c3                   	retq   

0000000000414569 <StdlibStrtoul>:
  414569:	55                   	push   %rbp
  41456a:	48 89 e5             	mov    %rsp,%rbp
  41456d:	48 83 ec 20          	sub    $0x20,%rsp
  414571:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414575:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414579:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41457d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414584:	48 83 c0 10          	add    $0x10,%rax
  414588:	48 8b 00             	mov    (%rax),%rax
  41458b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41458f:	8b 10                	mov    (%rax),%edx
  414591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414595:	48 83 c0 08          	add    $0x8,%rax
  414599:	48 8b 00             	mov    (%rax),%rax
  41459c:	48 8b 40 08          	mov    0x8(%rax),%rax
  4145a0:	48 8b 08             	mov    (%rax),%rcx
  4145a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4145a7:	48 8b 00             	mov    (%rax),%rax
  4145aa:	48 8b 40 08          	mov    0x8(%rax),%rax
  4145ae:	48 8b 00             	mov    (%rax),%rax
  4145b1:	48 89 ce             	mov    %rcx,%rsi
  4145b4:	48 89 c7             	mov    %rax,%rdi
  4145b7:	e8 24 ec fe ff       	callq  4031e0 <strtoul@plt>
  4145bc:	48 89 c2             	mov    %rax,%rdx
  4145bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4145c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4145c7:	89 10                	mov    %edx,(%rax)
  4145c9:	90                   	nop
  4145ca:	c9                   	leaveq 
  4145cb:	c3                   	retq   

00000000004145cc <StdlibMalloc>:
  4145cc:	55                   	push   %rbp
  4145cd:	48 89 e5             	mov    %rsp,%rbp
  4145d0:	53                   	push   %rbx
  4145d1:	48 83 ec 28          	sub    $0x28,%rsp
  4145d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4145d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4145dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4145e1:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4145e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4145e8:	48 8b 00             	mov    (%rax),%rax
  4145eb:	48 8b 40 08          	mov    0x8(%rax),%rax
  4145ef:	8b 00                	mov    (%rax),%eax
  4145f1:	48 98                	cltq   
  4145f3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4145f7:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4145fb:	48 89 c7             	mov    %rax,%rdi
  4145fe:	e8 1d e9 fe ff       	callq  402f20 <malloc@plt>
  414603:	48 89 03             	mov    %rax,(%rbx)
  414606:	90                   	nop
  414607:	48 83 c4 28          	add    $0x28,%rsp
  41460b:	5b                   	pop    %rbx
  41460c:	5d                   	pop    %rbp
  41460d:	c3                   	retq   

000000000041460e <StdlibCalloc>:
  41460e:	55                   	push   %rbp
  41460f:	48 89 e5             	mov    %rsp,%rbp
  414612:	53                   	push   %rbx
  414613:	48 83 ec 28          	sub    $0x28,%rsp
  414617:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41461b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41461f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414623:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414626:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41462a:	48 83 c0 08          	add    $0x8,%rax
  41462e:	48 8b 00             	mov    (%rax),%rax
  414631:	48 8b 40 08          	mov    0x8(%rax),%rax
  414635:	8b 00                	mov    (%rax),%eax
  414637:	48 63 d0             	movslq %eax,%rdx
  41463a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41463e:	48 8b 00             	mov    (%rax),%rax
  414641:	48 8b 40 08          	mov    0x8(%rax),%rax
  414645:	8b 00                	mov    (%rax),%eax
  414647:	48 98                	cltq   
  414649:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41464d:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  414651:	48 89 d6             	mov    %rdx,%rsi
  414654:	48 89 c7             	mov    %rax,%rdi
  414657:	e8 64 e7 fe ff       	callq  402dc0 <calloc@plt>
  41465c:	48 89 03             	mov    %rax,(%rbx)
  41465f:	90                   	nop
  414660:	48 83 c4 28          	add    $0x28,%rsp
  414664:	5b                   	pop    %rbx
  414665:	5d                   	pop    %rbp
  414666:	c3                   	retq   

0000000000414667 <StdlibRealloc>:
  414667:	55                   	push   %rbp
  414668:	48 89 e5             	mov    %rsp,%rbp
  41466b:	53                   	push   %rbx
  41466c:	48 83 ec 28          	sub    $0x28,%rsp
  414670:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414674:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414678:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41467c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41467f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414683:	48 83 c0 08          	add    $0x8,%rax
  414687:	48 8b 00             	mov    (%rax),%rax
  41468a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41468e:	8b 00                	mov    (%rax),%eax
  414690:	48 63 d0             	movslq %eax,%rdx
  414693:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414697:	48 8b 00             	mov    (%rax),%rax
  41469a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41469e:	48 8b 00             	mov    (%rax),%rax
  4146a1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4146a5:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4146a9:	48 89 d6             	mov    %rdx,%rsi
  4146ac:	48 89 c7             	mov    %rax,%rdi
  4146af:	e8 9c e9 fe ff       	callq  403050 <realloc@plt>
  4146b4:	48 89 03             	mov    %rax,(%rbx)
  4146b7:	90                   	nop
  4146b8:	48 83 c4 28          	add    $0x28,%rsp
  4146bc:	5b                   	pop    %rbx
  4146bd:	5d                   	pop    %rbp
  4146be:	c3                   	retq   

00000000004146bf <StdlibFree>:
  4146bf:	55                   	push   %rbp
  4146c0:	48 89 e5             	mov    %rsp,%rbp
  4146c3:	48 83 ec 20          	sub    $0x20,%rsp
  4146c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4146cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4146cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4146d3:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4146d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4146da:	48 8b 00             	mov    (%rax),%rax
  4146dd:	48 8b 40 08          	mov    0x8(%rax),%rax
  4146e1:	48 8b 00             	mov    (%rax),%rax
  4146e4:	48 89 c7             	mov    %rax,%rdi
  4146e7:	e8 64 e2 fe ff       	callq  402950 <free@plt>
  4146ec:	90                   	nop
  4146ed:	c9                   	leaveq 
  4146ee:	c3                   	retq   

00000000004146ef <StdlibRand>:
  4146ef:	55                   	push   %rbp
  4146f0:	48 89 e5             	mov    %rsp,%rbp
  4146f3:	53                   	push   %rbx
  4146f4:	48 83 ec 28          	sub    $0x28,%rsp
  4146f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4146fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414700:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414704:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414707:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41470b:	48 8b 58 08          	mov    0x8(%rax),%rbx
  41470f:	e8 fc eb fe ff       	callq  403310 <rand@plt>
  414714:	89 03                	mov    %eax,(%rbx)
  414716:	90                   	nop
  414717:	48 83 c4 28          	add    $0x28,%rsp
  41471b:	5b                   	pop    %rbx
  41471c:	5d                   	pop    %rbp
  41471d:	c3                   	retq   

000000000041471e <StdlibSrand>:
  41471e:	55                   	push   %rbp
  41471f:	48 89 e5             	mov    %rsp,%rbp
  414722:	48 83 ec 20          	sub    $0x20,%rsp
  414726:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41472a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41472e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414732:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414739:	48 8b 00             	mov    (%rax),%rax
  41473c:	48 8b 40 08          	mov    0x8(%rax),%rax
  414740:	8b 00                	mov    (%rax),%eax
  414742:	89 c7                	mov    %eax,%edi
  414744:	e8 27 e6 fe ff       	callq  402d70 <srand@plt>
  414749:	90                   	nop
  41474a:	c9                   	leaveq 
  41474b:	c3                   	retq   

000000000041474c <StdlibAbort>:
  41474c:	55                   	push   %rbp
  41474d:	48 89 e5             	mov    %rsp,%rbp
  414750:	48 83 ec 20          	sub    $0x20,%rsp
  414754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41475c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414760:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414767:	be 40 a0 41 00       	mov    $0x41a040,%esi
  41476c:	48 89 c7             	mov    %rax,%rdi
  41476f:	b8 00 00 00 00       	mov    $0x0,%eax
  414774:	e8 65 bf ff ff       	callq  4106de <ProgramFail>
  414779:	90                   	nop
  41477a:	c9                   	leaveq 
  41477b:	c3                   	retq   

000000000041477c <StdlibExit>:
  41477c:	55                   	push   %rbp
  41477d:	48 89 e5             	mov    %rsp,%rbp
  414780:	48 83 ec 20          	sub    $0x20,%rsp
  414784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414788:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41478c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414790:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414797:	48 8b 00             	mov    (%rax),%rax
  41479a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41479e:	8b 10                	mov    (%rax),%edx
  4147a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4147a4:	48 8b 00             	mov    (%rax),%rax
  4147a7:	89 d6                	mov    %edx,%esi
  4147a9:	48 89 c7             	mov    %rax,%rdi
  4147ac:	e8 1f d2 ff ff       	callq  4119d0 <PlatformExit>
  4147b1:	90                   	nop
  4147b2:	c9                   	leaveq 
  4147b3:	c3                   	retq   

00000000004147b4 <StdlibGetenv>:
  4147b4:	55                   	push   %rbp
  4147b5:	48 89 e5             	mov    %rsp,%rbp
  4147b8:	53                   	push   %rbx
  4147b9:	48 83 ec 28          	sub    $0x28,%rsp
  4147bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4147c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4147c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4147c9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4147cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4147d0:	48 8b 00             	mov    (%rax),%rax
  4147d3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4147d7:	48 8b 00             	mov    (%rax),%rax
  4147da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4147de:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4147e2:	48 89 c7             	mov    %rax,%rdi
  4147e5:	e8 56 e1 fe ff       	callq  402940 <getenv@plt>
  4147ea:	48 89 03             	mov    %rax,(%rbx)
  4147ed:	90                   	nop
  4147ee:	48 83 c4 28          	add    $0x28,%rsp
  4147f2:	5b                   	pop    %rbx
  4147f3:	5d                   	pop    %rbp
  4147f4:	c3                   	retq   

00000000004147f5 <StdlibSystem>:
  4147f5:	55                   	push   %rbp
  4147f6:	48 89 e5             	mov    %rsp,%rbp
  4147f9:	53                   	push   %rbx
  4147fa:	48 83 ec 28          	sub    $0x28,%rsp
  4147fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414802:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414806:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41480a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41480d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414811:	48 8b 00             	mov    (%rax),%rax
  414814:	48 8b 40 08          	mov    0x8(%rax),%rax
  414818:	48 8b 00             	mov    (%rax),%rax
  41481b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41481f:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  414823:	48 89 c7             	mov    %rax,%rdi
  414826:	e8 25 e3 fe ff       	callq  402b50 <system@plt>
  41482b:	89 03                	mov    %eax,(%rbx)
  41482d:	90                   	nop
  41482e:	48 83 c4 28          	add    $0x28,%rsp
  414832:	5b                   	pop    %rbx
  414833:	5d                   	pop    %rbp
  414834:	c3                   	retq   

0000000000414835 <StdlibAbs>:
  414835:	55                   	push   %rbp
  414836:	48 89 e5             	mov    %rsp,%rbp
  414839:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41483d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414841:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414845:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414848:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41484c:	48 8b 00             	mov    (%rax),%rax
  41484f:	48 8b 40 08          	mov    0x8(%rax),%rax
  414853:	8b 00                	mov    (%rax),%eax
  414855:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414859:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
  41485d:	99                   	cltd   
  41485e:	31 d0                	xor    %edx,%eax
  414860:	29 d0                	sub    %edx,%eax
  414862:	89 01                	mov    %eax,(%rcx)
  414864:	90                   	nop
  414865:	5d                   	pop    %rbp
  414866:	c3                   	retq   

0000000000414867 <StdlibLabs>:
  414867:	55                   	push   %rbp
  414868:	48 89 e5             	mov    %rsp,%rbp
  41486b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41486f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414873:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414877:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41487a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41487e:	48 8b 00             	mov    (%rax),%rax
  414881:	48 8b 40 08          	mov    0x8(%rax),%rax
  414885:	8b 00                	mov    (%rax),%eax
  414887:	48 98                	cltq   
  414889:	48 99                	cqto   
  41488b:	48 31 d0             	xor    %rdx,%rax
  41488e:	48 29 d0             	sub    %rdx,%rax
  414891:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  414895:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  414899:	89 02                	mov    %eax,(%rdx)
  41489b:	90                   	nop
  41489c:	5d                   	pop    %rbp
  41489d:	c3                   	retq   

000000000041489e <StdlibSetupFunc>:
  41489e:	55                   	push   %rbp
  41489f:	48 89 e5             	mov    %rsp,%rbp
  4148a2:	48 83 ec 10          	sub    $0x10,%rsp
  4148a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4148aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4148ae:	be 8b a1 41 00       	mov    $0x41a18b,%esi
  4148b3:	48 89 c7             	mov    %rax,%rdi
  4148b6:	e8 46 f3 fe ff       	callq  403c01 <TableStrRegister>
  4148bb:	48 89 c2             	mov    %rax,%rdx
  4148be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4148c2:	48 89 d6             	mov    %rdx,%rsi
  4148c5:	48 89 c7             	mov    %rax,%rdi
  4148c8:	e8 32 ae ff ff       	callq  40f6ff <VariableDefined>
  4148cd:	85 c0                	test   %eax,%eax
  4148cf:	75 30                	jne    414901 <StdlibSetupFunc+0x63>
  4148d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4148d5:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4148dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4148e0:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4148e6:	41 b8 14 09 62 00    	mov    $0x620914,%r8d
  4148ec:	48 89 d1             	mov    %rdx,%rcx
  4148ef:	ba 8b a1 41 00       	mov    $0x41a18b,%edx
  4148f4:	be 00 00 00 00       	mov    $0x0,%esi
  4148f9:	48 89 c7             	mov    %rax,%rdi
  4148fc:	e8 5e af ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414901:	90                   	nop
  414902:	c9                   	leaveq 
  414903:	c3                   	retq   

0000000000414904 <StdAsctime>:
  414904:	55                   	push   %rbp
  414905:	48 89 e5             	mov    %rsp,%rbp
  414908:	53                   	push   %rbx
  414909:	48 83 ec 28          	sub    $0x28,%rsp
  41490d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414911:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414915:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414919:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41491c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414920:	48 8b 00             	mov    (%rax),%rax
  414923:	48 8b 40 08          	mov    0x8(%rax),%rax
  414927:	48 8b 00             	mov    (%rax),%rax
  41492a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41492e:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  414932:	48 89 c7             	mov    %rax,%rdi
  414935:	e8 06 e2 fe ff       	callq  402b40 <asctime@plt>
  41493a:	48 89 03             	mov    %rax,(%rbx)
  41493d:	90                   	nop
  41493e:	48 83 c4 28          	add    $0x28,%rsp
  414942:	5b                   	pop    %rbx
  414943:	5d                   	pop    %rbp
  414944:	c3                   	retq   

0000000000414945 <StdClock>:
  414945:	55                   	push   %rbp
  414946:	48 89 e5             	mov    %rsp,%rbp
  414949:	48 83 ec 20          	sub    $0x20,%rsp
  41494d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414951:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414955:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414959:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41495c:	e8 5f e1 fe ff       	callq  402ac0 <clock@plt>
  414961:	48 89 c2             	mov    %rax,%rdx
  414964:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414968:	48 8b 40 08          	mov    0x8(%rax),%rax
  41496c:	89 10                	mov    %edx,(%rax)
  41496e:	90                   	nop
  41496f:	c9                   	leaveq 
  414970:	c3                   	retq   

0000000000414971 <StdCtime>:
  414971:	55                   	push   %rbp
  414972:	48 89 e5             	mov    %rsp,%rbp
  414975:	53                   	push   %rbx
  414976:	48 83 ec 28          	sub    $0x28,%rsp
  41497a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41497e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414982:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414986:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414989:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41498d:	48 8b 00             	mov    (%rax),%rax
  414990:	48 8b 40 08          	mov    0x8(%rax),%rax
  414994:	48 8b 00             	mov    (%rax),%rax
  414997:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41499b:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41499f:	48 89 c7             	mov    %rax,%rdi
  4149a2:	e8 39 e1 fe ff       	callq  402ae0 <ctime@plt>
  4149a7:	48 89 03             	mov    %rax,(%rbx)
  4149aa:	90                   	nop
  4149ab:	48 83 c4 28          	add    $0x28,%rsp
  4149af:	5b                   	pop    %rbx
  4149b0:	5d                   	pop    %rbp
  4149b1:	c3                   	retq   

00000000004149b2 <StdGmtime>:
  4149b2:	55                   	push   %rbp
  4149b3:	48 89 e5             	mov    %rsp,%rbp
  4149b6:	53                   	push   %rbx
  4149b7:	48 83 ec 28          	sub    $0x28,%rsp
  4149bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4149bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4149c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4149c7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4149ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4149ce:	48 8b 00             	mov    (%rax),%rax
  4149d1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4149d5:	48 8b 00             	mov    (%rax),%rax
  4149d8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4149dc:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4149e0:	48 89 c7             	mov    %rax,%rdi
  4149e3:	e8 c8 e7 fe ff       	callq  4031b0 <gmtime@plt>
  4149e8:	48 89 03             	mov    %rax,(%rbx)
  4149eb:	90                   	nop
  4149ec:	48 83 c4 28          	add    $0x28,%rsp
  4149f0:	5b                   	pop    %rbx
  4149f1:	5d                   	pop    %rbp
  4149f2:	c3                   	retq   

00000000004149f3 <StdLocaltime>:
  4149f3:	55                   	push   %rbp
  4149f4:	48 89 e5             	mov    %rsp,%rbp
  4149f7:	53                   	push   %rbx
  4149f8:	48 83 ec 28          	sub    $0x28,%rsp
  4149fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414a00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414a04:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414a08:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414a0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414a0f:	48 8b 00             	mov    (%rax),%rax
  414a12:	48 8b 40 08          	mov    0x8(%rax),%rax
  414a16:	48 8b 00             	mov    (%rax),%rax
  414a19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  414a1d:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  414a21:	48 89 c7             	mov    %rax,%rdi
  414a24:	e8 47 df fe ff       	callq  402970 <localtime@plt>
  414a29:	48 89 03             	mov    %rax,(%rbx)
  414a2c:	90                   	nop
  414a2d:	48 83 c4 28          	add    $0x28,%rsp
  414a31:	5b                   	pop    %rbx
  414a32:	5d                   	pop    %rbp
  414a33:	c3                   	retq   

0000000000414a34 <StdMktime>:
  414a34:	55                   	push   %rbp
  414a35:	48 89 e5             	mov    %rsp,%rbp
  414a38:	48 83 ec 20          	sub    $0x20,%rsp
  414a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414a40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414a44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414a48:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414a4f:	48 8b 00             	mov    (%rax),%rax
  414a52:	48 8b 40 08          	mov    0x8(%rax),%rax
  414a56:	48 8b 00             	mov    (%rax),%rax
  414a59:	48 89 c7             	mov    %rax,%rdi
  414a5c:	e8 5f e5 fe ff       	callq  402fc0 <mktime@plt>
  414a61:	48 89 c2             	mov    %rax,%rdx
  414a64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414a68:	48 8b 40 08          	mov    0x8(%rax),%rax
  414a6c:	89 10                	mov    %edx,(%rax)
  414a6e:	90                   	nop
  414a6f:	c9                   	leaveq 
  414a70:	c3                   	retq   

0000000000414a71 <StdTime>:
  414a71:	55                   	push   %rbp
  414a72:	48 89 e5             	mov    %rsp,%rbp
  414a75:	48 83 ec 20          	sub    $0x20,%rsp
  414a79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414a7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414a81:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414a85:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414a8c:	48 8b 00             	mov    (%rax),%rax
  414a8f:	48 8b 40 08          	mov    0x8(%rax),%rax
  414a93:	48 8b 00             	mov    (%rax),%rax
  414a96:	48 89 c7             	mov    %rax,%rdi
  414a99:	e8 02 e4 fe ff       	callq  402ea0 <time@plt>
  414a9e:	48 89 c2             	mov    %rax,%rdx
  414aa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414aa5:	48 8b 40 08          	mov    0x8(%rax),%rax
  414aa9:	89 10                	mov    %edx,(%rax)
  414aab:	90                   	nop
  414aac:	c9                   	leaveq 
  414aad:	c3                   	retq   

0000000000414aae <StdStrftime>:
  414aae:	55                   	push   %rbp
  414aaf:	48 89 e5             	mov    %rsp,%rbp
  414ab2:	48 83 ec 20          	sub    $0x20,%rsp
  414ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414abe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414ac2:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414ac5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414ac9:	48 83 c0 18          	add    $0x18,%rax
  414acd:	48 8b 00             	mov    (%rax),%rax
  414ad0:	48 8b 40 08          	mov    0x8(%rax),%rax
  414ad4:	48 8b 08             	mov    (%rax),%rcx
  414ad7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414adb:	48 83 c0 10          	add    $0x10,%rax
  414adf:	48 8b 00             	mov    (%rax),%rax
  414ae2:	48 8b 40 08          	mov    0x8(%rax),%rax
  414ae6:	48 8b 10             	mov    (%rax),%rdx
  414ae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414aed:	48 83 c0 08          	add    $0x8,%rax
  414af1:	48 8b 00             	mov    (%rax),%rax
  414af4:	48 8b 40 08          	mov    0x8(%rax),%rax
  414af8:	8b 00                	mov    (%rax),%eax
  414afa:	48 63 f0             	movslq %eax,%rsi
  414afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414b01:	48 8b 00             	mov    (%rax),%rax
  414b04:	48 8b 40 08          	mov    0x8(%rax),%rax
  414b08:	48 8b 00             	mov    (%rax),%rax
  414b0b:	48 89 c7             	mov    %rax,%rdi
  414b0e:	e8 8d e5 fe ff       	callq  4030a0 <strftime@plt>
  414b13:	48 89 c2             	mov    %rax,%rdx
  414b16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414b1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  414b1e:	89 10                	mov    %edx,(%rax)
  414b20:	90                   	nop
  414b21:	c9                   	leaveq 
  414b22:	c3                   	retq   

0000000000414b23 <StdStrptime>:
  414b23:	55                   	push   %rbp
  414b24:	48 89 e5             	mov    %rsp,%rbp
  414b27:	53                   	push   %rbx
  414b28:	48 83 ec 28          	sub    $0x28,%rsp
  414b2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414b30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414b34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414b38:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414b3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b3f:	48 83 c0 10          	add    $0x10,%rax
  414b43:	48 8b 00             	mov    (%rax),%rax
  414b46:	48 8b 40 08          	mov    0x8(%rax),%rax
  414b4a:	48 8b 10             	mov    (%rax),%rdx
  414b4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b51:	48 83 c0 08          	add    $0x8,%rax
  414b55:	48 8b 00             	mov    (%rax),%rax
  414b58:	48 8b 40 08          	mov    0x8(%rax),%rax
  414b5c:	48 8b 08             	mov    (%rax),%rcx
  414b5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414b63:	48 8b 00             	mov    (%rax),%rax
  414b66:	48 8b 40 08          	mov    0x8(%rax),%rax
  414b6a:	48 8b 00             	mov    (%rax),%rax
  414b6d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  414b71:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  414b75:	48 89 ce             	mov    %rcx,%rsi
  414b78:	48 89 c7             	mov    %rax,%rdi
  414b7b:	e8 40 e7 fe ff       	callq  4032c0 <strptime@plt>
  414b80:	48 89 03             	mov    %rax,(%rbx)
  414b83:	90                   	nop
  414b84:	48 83 c4 28          	add    $0x28,%rsp
  414b88:	5b                   	pop    %rbx
  414b89:	5d                   	pop    %rbp
  414b8a:	c3                   	retq   

0000000000414b8b <StdGmtime_r>:
  414b8b:	55                   	push   %rbp
  414b8c:	48 89 e5             	mov    %rsp,%rbp
  414b8f:	53                   	push   %rbx
  414b90:	48 83 ec 28          	sub    $0x28,%rsp
  414b94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  414b98:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  414b9c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  414ba0:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  414ba3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414ba7:	48 83 c0 08          	add    $0x8,%rax
  414bab:	48 8b 00             	mov    (%rax),%rax
  414bae:	48 8b 40 08          	mov    0x8(%rax),%rax
  414bb2:	48 8b 10             	mov    (%rax),%rdx
  414bb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  414bb9:	48 8b 00             	mov    (%rax),%rax
  414bbc:	48 8b 40 08          	mov    0x8(%rax),%rax
  414bc0:	48 8b 00             	mov    (%rax),%rax
  414bc3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  414bc7:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  414bcb:	48 89 d6             	mov    %rdx,%rsi
  414bce:	48 89 c7             	mov    %rax,%rdi
  414bd1:	e8 2a e0 fe ff       	callq  402c00 <gmtime_r@plt>
  414bd6:	48 89 03             	mov    %rax,(%rbx)
  414bd9:	90                   	nop
  414bda:	48 83 c4 28          	add    $0x28,%rsp
  414bde:	5b                   	pop    %rbx
  414bdf:	5d                   	pop    %rbp
  414be0:	c3                   	retq   

0000000000414be1 <StdTimegm>:
  414be1:	55                   	push   %rbp
  414be2:	48 89 e5             	mov    %rsp,%rbp
  414be5:	48 83 ec 20          	sub    $0x20,%rsp
  414be9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414bed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  414bf1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  414bf5:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  414bf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  414bfc:	48 8b 00             	mov    (%rax),%rax
  414bff:	48 8b 40 08          	mov    0x8(%rax),%rax
  414c03:	48 8b 00             	mov    (%rax),%rax
  414c06:	48 89 c7             	mov    %rax,%rdi
  414c09:	e8 62 e4 fe ff       	callq  403070 <timegm@plt>
  414c0e:	48 89 c2             	mov    %rax,%rdx
  414c11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  414c15:	48 8b 40 08          	mov    0x8(%rax),%rax
  414c19:	89 10                	mov    %edx,(%rax)
  414c1b:	90                   	nop
  414c1c:	c9                   	leaveq 
  414c1d:	c3                   	retq   

0000000000414c1e <StdTimeSetupFunc>:
  414c1e:	55                   	push   %rbp
  414c1f:	48 89 e5             	mov    %rsp,%rbp
  414c22:	48 83 ec 10          	sub    $0x10,%rsp
  414c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c2e:	be 12 a3 41 00       	mov    $0x41a312,%esi
  414c33:	48 89 c7             	mov    %rax,%rdi
  414c36:	e8 c6 ef fe ff       	callq  403c01 <TableStrRegister>
  414c3b:	48 89 c2             	mov    %rax,%rdx
  414c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c42:	b9 38 00 00 00       	mov    $0x38,%ecx
  414c47:	be 00 00 00 00       	mov    $0x0,%esi
  414c4c:	48 89 c7             	mov    %rax,%rdi
  414c4f:	e8 37 91 ff ff       	callq  40dd8b <TypeCreateOpaqueStruct>
  414c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c58:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c63:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414c69:	41 b8 e0 00 62 00    	mov    $0x6200e0,%r8d
  414c6f:	48 89 d1             	mov    %rdx,%rcx
  414c72:	ba 15 a3 41 00       	mov    $0x41a315,%edx
  414c77:	be 00 00 00 00       	mov    $0x0,%esi
  414c7c:	48 89 c7             	mov    %rax,%rdi
  414c7f:	e8 db ab ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414c84:	90                   	nop
  414c85:	c9                   	leaveq 
  414c86:	c3                   	retq   

0000000000414c87 <StdErrnoSetupFunc>:
  414c87:	55                   	push   %rbp
  414c88:	48 89 e5             	mov    %rsp,%rbp
  414c8b:	48 83 ec 10          	sub    $0x10,%rsp
  414c8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  414c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414c97:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ca2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414ca8:	41 b8 c0 01 62 00    	mov    $0x6201c0,%r8d
  414cae:	48 89 d1             	mov    %rdx,%rcx
  414cb1:	ba 24 a3 41 00       	mov    $0x41a324,%edx
  414cb6:	be 00 00 00 00       	mov    $0x0,%esi
  414cbb:	48 89 c7             	mov    %rax,%rdi
  414cbe:	e8 9c ab ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414cc7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414cd2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414cd8:	41 b8 c4 01 62 00    	mov    $0x6201c4,%r8d
  414cde:	48 89 d1             	mov    %rdx,%rcx
  414ce1:	ba 2b a3 41 00       	mov    $0x41a32b,%edx
  414ce6:	be 00 00 00 00       	mov    $0x0,%esi
  414ceb:	48 89 c7             	mov    %rax,%rdi
  414cee:	e8 6c ab ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414cf7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d02:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414d08:	41 b8 c8 01 62 00    	mov    $0x6201c8,%r8d
  414d0e:	48 89 d1             	mov    %rdx,%rcx
  414d11:	ba 36 a3 41 00       	mov    $0x41a336,%edx
  414d16:	be 00 00 00 00       	mov    $0x0,%esi
  414d1b:	48 89 c7             	mov    %rax,%rdi
  414d1e:	e8 3c ab ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d27:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d32:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414d38:	41 b8 cc 01 62 00    	mov    $0x6201cc,%r8d
  414d3e:	48 89 d1             	mov    %rdx,%rcx
  414d41:	ba 44 a3 41 00       	mov    $0x41a344,%edx
  414d46:	be 00 00 00 00       	mov    $0x0,%esi
  414d4b:	48 89 c7             	mov    %rax,%rdi
  414d4e:	e8 0c ab ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414d53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d57:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d62:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414d68:	41 b8 d0 01 62 00    	mov    $0x6201d0,%r8d
  414d6e:	48 89 d1             	mov    %rdx,%rcx
  414d71:	ba 51 a3 41 00       	mov    $0x41a351,%edx
  414d76:	be 00 00 00 00       	mov    $0x0,%esi
  414d7b:	48 89 c7             	mov    %rax,%rdi
  414d7e:	e8 dc aa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d87:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414d92:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414d98:	41 b8 d4 01 62 00    	mov    $0x6201d4,%r8d
  414d9e:	48 89 d1             	mov    %rdx,%rcx
  414da1:	ba 58 a3 41 00       	mov    $0x41a358,%edx
  414da6:	be 00 00 00 00       	mov    $0x0,%esi
  414dab:	48 89 c7             	mov    %rax,%rdi
  414dae:	e8 ac aa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414db7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414dbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414dc2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414dc8:	41 b8 d8 01 62 00    	mov    $0x6201d8,%r8d
  414dce:	48 89 d1             	mov    %rdx,%rcx
  414dd1:	ba 61 a3 41 00       	mov    $0x41a361,%edx
  414dd6:	be 00 00 00 00       	mov    $0x0,%esi
  414ddb:	48 89 c7             	mov    %rax,%rdi
  414dde:	e8 7c aa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414de7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414df2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414df8:	41 b8 dc 01 62 00    	mov    $0x6201dc,%r8d
  414dfe:	48 89 d1             	mov    %rdx,%rcx
  414e01:	ba 67 a3 41 00       	mov    $0x41a367,%edx
  414e06:	be 00 00 00 00       	mov    $0x0,%esi
  414e0b:	48 89 c7             	mov    %rax,%rdi
  414e0e:	e8 4c aa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e17:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e22:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414e28:	41 b8 e0 01 62 00    	mov    $0x6201e0,%r8d
  414e2e:	48 89 d1             	mov    %rdx,%rcx
  414e31:	ba 6f a3 41 00       	mov    $0x41a36f,%edx
  414e36:	be 00 00 00 00       	mov    $0x0,%esi
  414e3b:	48 89 c7             	mov    %rax,%rdi
  414e3e:	e8 1c aa ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414e43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e47:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e52:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414e58:	41 b8 e4 01 62 00    	mov    $0x6201e4,%r8d
  414e5e:	48 89 d1             	mov    %rdx,%rcx
  414e61:	ba 75 a3 41 00       	mov    $0x41a375,%edx
  414e66:	be 00 00 00 00       	mov    $0x0,%esi
  414e6b:	48 89 c7             	mov    %rax,%rdi
  414e6e:	e8 ec a9 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e77:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414e82:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414e88:	41 b8 e8 01 62 00    	mov    $0x6201e8,%r8d
  414e8e:	48 89 d1             	mov    %rdx,%rcx
  414e91:	ba 7f a3 41 00       	mov    $0x41a37f,%edx
  414e96:	be 00 00 00 00       	mov    $0x0,%esi
  414e9b:	48 89 c7             	mov    %rax,%rdi
  414e9e:	e8 bc a9 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ea7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414eb2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414eb8:	41 b8 ec 01 62 00    	mov    $0x6201ec,%r8d
  414ebe:	48 89 d1             	mov    %rdx,%rcx
  414ec1:	ba 86 a3 41 00       	mov    $0x41a386,%edx
  414ec6:	be 00 00 00 00       	mov    $0x0,%esi
  414ecb:	48 89 c7             	mov    %rax,%rdi
  414ece:	e8 8c a9 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ed7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ee2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414ee8:	41 b8 f0 01 62 00    	mov    $0x6201f0,%r8d
  414eee:	48 89 d1             	mov    %rdx,%rcx
  414ef1:	ba 93 a3 41 00       	mov    $0x41a393,%edx
  414ef6:	be 00 00 00 00       	mov    $0x0,%esi
  414efb:	48 89 c7             	mov    %rax,%rdi
  414efe:	e8 5c a9 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414f03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f07:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414f0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f12:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414f18:	41 b8 f4 01 62 00    	mov    $0x6201f4,%r8d
  414f1e:	48 89 d1             	mov    %rdx,%rcx
  414f21:	ba a0 a3 41 00       	mov    $0x41a3a0,%edx
  414f26:	be 00 00 00 00       	mov    $0x0,%esi
  414f2b:	48 89 c7             	mov    %rax,%rdi
  414f2e:	e8 2c a9 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f37:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f42:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414f48:	41 b8 f8 01 62 00    	mov    $0x6201f8,%r8d
  414f4e:	48 89 d1             	mov    %rdx,%rcx
  414f51:	ba ab a3 41 00       	mov    $0x41a3ab,%edx
  414f56:	be 00 00 00 00       	mov    $0x0,%esi
  414f5b:	48 89 c7             	mov    %rax,%rdi
  414f5e:	e8 fc a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414f63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f67:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f72:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414f78:	41 b8 fc 01 62 00    	mov    $0x6201fc,%r8d
  414f7e:	48 89 d1             	mov    %rdx,%rcx
  414f81:	ba b3 a3 41 00       	mov    $0x41a3b3,%edx
  414f86:	be 00 00 00 00       	mov    $0x0,%esi
  414f8b:	48 89 c7             	mov    %rax,%rdi
  414f8e:	e8 cc a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414f93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414f97:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414fa2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414fa8:	41 b8 00 02 62 00    	mov    $0x620200,%r8d
  414fae:	48 89 d1             	mov    %rdx,%rcx
  414fb1:	ba c0 a3 41 00       	mov    $0x41a3c0,%edx
  414fb6:	be 00 00 00 00       	mov    $0x0,%esi
  414fbb:	48 89 c7             	mov    %rax,%rdi
  414fbe:	e8 9c a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414fc7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414fce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414fd2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  414fd8:	41 b8 04 02 62 00    	mov    $0x620204,%r8d
  414fde:	48 89 d1             	mov    %rdx,%rcx
  414fe1:	ba c5 a3 41 00       	mov    $0x41a3c5,%edx
  414fe6:	be 00 00 00 00       	mov    $0x0,%esi
  414feb:	48 89 c7             	mov    %rax,%rdi
  414fee:	e8 6c a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  414ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  414ff7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  414ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415002:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415008:	41 b8 08 02 62 00    	mov    $0x620208,%r8d
  41500e:	48 89 d1             	mov    %rdx,%rcx
  415011:	ba cc a3 41 00       	mov    $0x41a3cc,%edx
  415016:	be 00 00 00 00       	mov    $0x0,%esi
  41501b:	48 89 c7             	mov    %rax,%rdi
  41501e:	e8 3c a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415027:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41502e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415032:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415038:	41 b8 0c 02 62 00    	mov    $0x62020c,%r8d
  41503e:	48 89 d1             	mov    %rdx,%rcx
  415041:	ba d3 a3 41 00       	mov    $0x41a3d3,%edx
  415046:	be 00 00 00 00       	mov    $0x0,%esi
  41504b:	48 89 c7             	mov    %rax,%rdi
  41504e:	e8 0c a8 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415057:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41505e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415062:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415068:	41 b8 10 02 62 00    	mov    $0x620210,%r8d
  41506e:	48 89 d1             	mov    %rdx,%rcx
  415071:	ba da a3 41 00       	mov    $0x41a3da,%edx
  415076:	be 00 00 00 00       	mov    $0x0,%esi
  41507b:	48 89 c7             	mov    %rax,%rdi
  41507e:	e8 dc a7 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415087:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41508e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415092:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415098:	41 b8 14 02 62 00    	mov    $0x620214,%r8d
  41509e:	48 89 d1             	mov    %rdx,%rcx
  4150a1:	ba e0 a3 41 00       	mov    $0x41a3e0,%edx
  4150a6:	be 00 00 00 00       	mov    $0x0,%esi
  4150ab:	48 89 c7             	mov    %rax,%rdi
  4150ae:	e8 ac a7 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4150b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150b7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4150be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150c2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4150c8:	41 b8 18 02 62 00    	mov    $0x620218,%r8d
  4150ce:	48 89 d1             	mov    %rdx,%rcx
  4150d1:	ba ed a3 41 00       	mov    $0x41a3ed,%edx
  4150d6:	be 00 00 00 00       	mov    $0x0,%esi
  4150db:	48 89 c7             	mov    %rax,%rdi
  4150de:	e8 7c a7 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4150e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150e7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4150ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4150f2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4150f8:	41 b8 1c 02 62 00    	mov    $0x62021c,%r8d
  4150fe:	48 89 d1             	mov    %rdx,%rcx
  415101:	ba f3 a3 41 00       	mov    $0x41a3f3,%edx
  415106:	be 00 00 00 00       	mov    $0x0,%esi
  41510b:	48 89 c7             	mov    %rax,%rdi
  41510e:	e8 4c a7 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415117:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41511e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415122:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415128:	41 b8 20 02 62 00    	mov    $0x620220,%r8d
  41512e:	48 89 d1             	mov    %rdx,%rcx
  415131:	ba fa a3 41 00       	mov    $0x41a3fa,%edx
  415136:	be 00 00 00 00       	mov    $0x0,%esi
  41513b:	48 89 c7             	mov    %rax,%rdi
  41513e:	e8 1c a7 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415147:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41514e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415152:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415158:	41 b8 24 02 62 00    	mov    $0x620224,%r8d
  41515e:	48 89 d1             	mov    %rdx,%rcx
  415161:	ba 06 a4 41 00       	mov    $0x41a406,%edx
  415166:	be 00 00 00 00       	mov    $0x0,%esi
  41516b:	48 89 c7             	mov    %rax,%rdi
  41516e:	e8 ec a6 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415173:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415177:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41517e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415182:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415188:	41 b8 28 02 62 00    	mov    $0x620228,%r8d
  41518e:	48 89 d1             	mov    %rdx,%rcx
  415191:	ba 0c a4 41 00       	mov    $0x41a40c,%edx
  415196:	be 00 00 00 00       	mov    $0x0,%esi
  41519b:	48 89 c7             	mov    %rax,%rdi
  41519e:	e8 bc a6 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4151a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4151a7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4151ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4151b2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4151b8:	41 b8 2c 02 62 00    	mov    $0x62022c,%r8d
  4151be:	48 89 d1             	mov    %rdx,%rcx
  4151c1:	ba 13 a4 41 00       	mov    $0x41a413,%edx
  4151c6:	be 00 00 00 00       	mov    $0x0,%esi
  4151cb:	48 89 c7             	mov    %rax,%rdi
  4151ce:	e8 8c a6 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4151d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4151d7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4151de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4151e2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4151e8:	41 b8 30 02 62 00    	mov    $0x620230,%r8d
  4151ee:	48 89 d1             	mov    %rdx,%rcx
  4151f1:	ba 17 a4 41 00       	mov    $0x41a417,%edx
  4151f6:	be 00 00 00 00       	mov    $0x0,%esi
  4151fb:	48 89 c7             	mov    %rax,%rdi
  4151fe:	e8 5c a6 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415207:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41520e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415212:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415218:	41 b8 34 02 62 00    	mov    $0x620234,%r8d
  41521e:	48 89 d1             	mov    %rdx,%rcx
  415221:	ba 1f a4 41 00       	mov    $0x41a41f,%edx
  415226:	be 00 00 00 00       	mov    $0x0,%esi
  41522b:	48 89 c7             	mov    %rax,%rdi
  41522e:	e8 2c a6 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415237:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41523e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415242:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415248:	41 b8 38 02 62 00    	mov    $0x620238,%r8d
  41524e:	48 89 d1             	mov    %rdx,%rcx
  415251:	ba 26 a4 41 00       	mov    $0x41a426,%edx
  415256:	be 00 00 00 00       	mov    $0x0,%esi
  41525b:	48 89 c7             	mov    %rax,%rdi
  41525e:	e8 fc a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415267:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41526e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415272:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415278:	41 b8 3c 02 62 00    	mov    $0x62023c,%r8d
  41527e:	48 89 d1             	mov    %rdx,%rcx
  415281:	ba 2c a4 41 00       	mov    $0x41a42c,%edx
  415286:	be 00 00 00 00       	mov    $0x0,%esi
  41528b:	48 89 c7             	mov    %rax,%rdi
  41528e:	e8 cc a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415297:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41529e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152a2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4152a8:	41 b8 40 02 62 00    	mov    $0x620240,%r8d
  4152ae:	48 89 d1             	mov    %rdx,%rcx
  4152b1:	ba 33 a4 41 00       	mov    $0x41a433,%edx
  4152b6:	be 00 00 00 00       	mov    $0x0,%esi
  4152bb:	48 89 c7             	mov    %rax,%rdi
  4152be:	e8 9c a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4152c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152c7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4152ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152d2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4152d8:	41 b8 44 02 62 00    	mov    $0x620244,%r8d
  4152de:	48 89 d1             	mov    %rdx,%rcx
  4152e1:	ba 3a a4 41 00       	mov    $0x41a43a,%edx
  4152e6:	be 00 00 00 00       	mov    $0x0,%esi
  4152eb:	48 89 c7             	mov    %rax,%rdi
  4152ee:	e8 6c a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4152f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4152f7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4152fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415302:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415308:	41 b8 48 02 62 00    	mov    $0x620248,%r8d
  41530e:	48 89 d1             	mov    %rdx,%rcx
  415311:	ba 43 a4 41 00       	mov    $0x41a443,%edx
  415316:	be 00 00 00 00       	mov    $0x0,%esi
  41531b:	48 89 c7             	mov    %rax,%rdi
  41531e:	e8 3c a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415327:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41532e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415332:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415338:	41 b8 4c 02 62 00    	mov    $0x62024c,%r8d
  41533e:	48 89 d1             	mov    %rdx,%rcx
  415341:	ba 4d a4 41 00       	mov    $0x41a44d,%edx
  415346:	be 00 00 00 00       	mov    $0x0,%esi
  41534b:	48 89 c7             	mov    %rax,%rdi
  41534e:	e8 0c a5 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415357:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41535e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415362:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415368:	41 b8 50 02 62 00    	mov    $0x620250,%r8d
  41536e:	48 89 d1             	mov    %rdx,%rcx
  415371:	ba 5a a4 41 00       	mov    $0x41a45a,%edx
  415376:	be 00 00 00 00       	mov    $0x0,%esi
  41537b:	48 89 c7             	mov    %rax,%rdi
  41537e:	e8 dc a4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415387:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41538e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415392:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415398:	41 b8 54 02 62 00    	mov    $0x620254,%r8d
  41539e:	48 89 d1             	mov    %rdx,%rcx
  4153a1:	ba 63 a4 41 00       	mov    $0x41a463,%edx
  4153a6:	be 00 00 00 00       	mov    $0x0,%esi
  4153ab:	48 89 c7             	mov    %rax,%rdi
  4153ae:	e8 ac a4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4153b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4153b7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4153be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4153c2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4153c8:	41 b8 58 02 62 00    	mov    $0x620258,%r8d
  4153ce:	48 89 d1             	mov    %rdx,%rcx
  4153d1:	ba 6d a4 41 00       	mov    $0x41a46d,%edx
  4153d6:	be 00 00 00 00       	mov    $0x0,%esi
  4153db:	48 89 c7             	mov    %rax,%rdi
  4153de:	e8 7c a4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4153e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4153e7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4153ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4153f2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4153f8:	41 b8 5c 02 62 00    	mov    $0x62025c,%r8d
  4153fe:	48 89 d1             	mov    %rdx,%rcx
  415401:	ba 79 a4 41 00       	mov    $0x41a479,%edx
  415406:	be 00 00 00 00       	mov    $0x0,%esi
  41540b:	48 89 c7             	mov    %rax,%rdi
  41540e:	e8 4c a4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415413:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415417:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41541e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415422:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415428:	41 b8 60 02 62 00    	mov    $0x620260,%r8d
  41542e:	48 89 d1             	mov    %rdx,%rcx
  415431:	ba 80 a4 41 00       	mov    $0x41a480,%edx
  415436:	be 00 00 00 00       	mov    $0x0,%esi
  41543b:	48 89 c7             	mov    %rax,%rdi
  41543e:	e8 1c a4 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415447:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41544e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415452:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415458:	41 b8 64 02 62 00    	mov    $0x620264,%r8d
  41545e:	48 89 d1             	mov    %rdx,%rcx
  415461:	ba 88 a4 41 00       	mov    $0x41a488,%edx
  415466:	be 00 00 00 00       	mov    $0x0,%esi
  41546b:	48 89 c7             	mov    %rax,%rdi
  41546e:	e8 ec a3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415477:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41547e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415482:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415488:	41 b8 68 02 62 00    	mov    $0x620268,%r8d
  41548e:	48 89 d1             	mov    %rdx,%rcx
  415491:	ba 90 a4 41 00       	mov    $0x41a490,%edx
  415496:	be 00 00 00 00       	mov    $0x0,%esi
  41549b:	48 89 c7             	mov    %rax,%rdi
  41549e:	e8 bc a3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4154a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4154a7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4154ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4154b2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4154b8:	41 b8 6c 02 62 00    	mov    $0x62026c,%r8d
  4154be:	48 89 d1             	mov    %rdx,%rcx
  4154c1:	ba 97 a4 41 00       	mov    $0x41a497,%edx
  4154c6:	be 00 00 00 00       	mov    $0x0,%esi
  4154cb:	48 89 c7             	mov    %rax,%rdi
  4154ce:	e8 8c a3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4154d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4154d7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4154de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4154e2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4154e8:	41 b8 70 02 62 00    	mov    $0x620270,%r8d
  4154ee:	48 89 d1             	mov    %rdx,%rcx
  4154f1:	ba 9e a4 41 00       	mov    $0x41a49e,%edx
  4154f6:	be 00 00 00 00       	mov    $0x0,%esi
  4154fb:	48 89 c7             	mov    %rax,%rdi
  4154fe:	e8 5c a3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415503:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415507:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41550e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415512:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415518:	41 b8 74 02 62 00    	mov    $0x620274,%r8d
  41551e:	48 89 d1             	mov    %rdx,%rcx
  415521:	ba a6 a4 41 00       	mov    $0x41a4a6,%edx
  415526:	be 00 00 00 00       	mov    $0x0,%esi
  41552b:	48 89 c7             	mov    %rax,%rdi
  41552e:	e8 2c a3 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415537:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41553e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415542:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415548:	41 b8 78 02 62 00    	mov    $0x620278,%r8d
  41554e:	48 89 d1             	mov    %rdx,%rcx
  415551:	ba ad a4 41 00       	mov    $0x41a4ad,%edx
  415556:	be 00 00 00 00       	mov    $0x0,%esi
  41555b:	48 89 c7             	mov    %rax,%rdi
  41555e:	e8 fc a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415567:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41556e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415572:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415578:	41 b8 7c 02 62 00    	mov    $0x62027c,%r8d
  41557e:	48 89 d1             	mov    %rdx,%rcx
  415581:	ba b5 a4 41 00       	mov    $0x41a4b5,%edx
  415586:	be 00 00 00 00       	mov    $0x0,%esi
  41558b:	48 89 c7             	mov    %rax,%rdi
  41558e:	e8 cc a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415597:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41559e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4155a2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4155a8:	41 b8 80 02 62 00    	mov    $0x620280,%r8d
  4155ae:	48 89 d1             	mov    %rdx,%rcx
  4155b1:	ba bc a4 41 00       	mov    $0x41a4bc,%edx
  4155b6:	be 00 00 00 00       	mov    $0x0,%esi
  4155bb:	48 89 c7             	mov    %rax,%rdi
  4155be:	e8 9c a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4155c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4155c7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4155ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4155d2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4155d8:	41 b8 84 02 62 00    	mov    $0x620284,%r8d
  4155de:	48 89 d1             	mov    %rdx,%rcx
  4155e1:	ba c3 a4 41 00       	mov    $0x41a4c3,%edx
  4155e6:	be 00 00 00 00       	mov    $0x0,%esi
  4155eb:	48 89 c7             	mov    %rax,%rdi
  4155ee:	e8 6c a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4155f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4155f7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4155fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415602:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415608:	41 b8 88 02 62 00    	mov    $0x620288,%r8d
  41560e:	48 89 d1             	mov    %rdx,%rcx
  415611:	ba cf a4 41 00       	mov    $0x41a4cf,%edx
  415616:	be 00 00 00 00       	mov    $0x0,%esi
  41561b:	48 89 c7             	mov    %rax,%rdi
  41561e:	e8 3c a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415627:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41562e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415632:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415638:	41 b8 8c 02 62 00    	mov    $0x62028c,%r8d
  41563e:	48 89 d1             	mov    %rdx,%rcx
  415641:	ba d6 a4 41 00       	mov    $0x41a4d6,%edx
  415646:	be 00 00 00 00       	mov    $0x0,%esi
  41564b:	48 89 c7             	mov    %rax,%rdi
  41564e:	e8 0c a2 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415657:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41565e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415662:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415668:	41 b8 90 02 62 00    	mov    $0x620290,%r8d
  41566e:	48 89 d1             	mov    %rdx,%rcx
  415671:	ba dc a4 41 00       	mov    $0x41a4dc,%edx
  415676:	be 00 00 00 00       	mov    $0x0,%esi
  41567b:	48 89 c7             	mov    %rax,%rdi
  41567e:	e8 dc a1 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415687:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41568e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415692:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415698:	41 b8 94 02 62 00    	mov    $0x620294,%r8d
  41569e:	48 89 d1             	mov    %rdx,%rcx
  4156a1:	ba e3 a4 41 00       	mov    $0x41a4e3,%edx
  4156a6:	be 00 00 00 00       	mov    $0x0,%esi
  4156ab:	48 89 c7             	mov    %rax,%rdi
  4156ae:	e8 ac a1 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4156b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156b7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4156be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156c2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4156c8:	41 b8 98 02 62 00    	mov    $0x620298,%r8d
  4156ce:	48 89 d1             	mov    %rdx,%rcx
  4156d1:	ba ea a4 41 00       	mov    $0x41a4ea,%edx
  4156d6:	be 00 00 00 00       	mov    $0x0,%esi
  4156db:	48 89 c7             	mov    %rax,%rdi
  4156de:	e8 7c a1 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4156e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156e7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4156ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4156f2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4156f8:	41 b8 9c 02 62 00    	mov    $0x62029c,%r8d
  4156fe:	48 89 d1             	mov    %rdx,%rcx
  415701:	ba f3 a4 41 00       	mov    $0x41a4f3,%edx
  415706:	be 00 00 00 00       	mov    $0x0,%esi
  41570b:	48 89 c7             	mov    %rax,%rdi
  41570e:	e8 4c a1 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415717:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41571e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415722:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415728:	41 b8 a0 02 62 00    	mov    $0x6202a0,%r8d
  41572e:	48 89 d1             	mov    %rdx,%rcx
  415731:	ba fb a4 41 00       	mov    $0x41a4fb,%edx
  415736:	be 00 00 00 00       	mov    $0x0,%esi
  41573b:	48 89 c7             	mov    %rax,%rdi
  41573e:	e8 1c a1 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415747:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41574e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415752:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415758:	41 b8 a4 02 62 00    	mov    $0x6202a4,%r8d
  41575e:	48 89 d1             	mov    %rdx,%rcx
  415761:	ba 05 a5 41 00       	mov    $0x41a505,%edx
  415766:	be 00 00 00 00       	mov    $0x0,%esi
  41576b:	48 89 c7             	mov    %rax,%rdi
  41576e:	e8 ec a0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415777:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41577e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415782:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415788:	41 b8 a8 02 62 00    	mov    $0x6202a8,%r8d
  41578e:	48 89 d1             	mov    %rdx,%rcx
  415791:	ba 15 a5 41 00       	mov    $0x41a515,%edx
  415796:	be 00 00 00 00       	mov    $0x0,%esi
  41579b:	48 89 c7             	mov    %rax,%rdi
  41579e:	e8 bc a0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4157a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4157a7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4157ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4157b2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4157b8:	41 b8 ac 02 62 00    	mov    $0x6202ac,%r8d
  4157be:	48 89 d1             	mov    %rdx,%rcx
  4157c1:	ba 1e a5 41 00       	mov    $0x41a51e,%edx
  4157c6:	be 00 00 00 00       	mov    $0x0,%esi
  4157cb:	48 89 c7             	mov    %rax,%rdi
  4157ce:	e8 8c a0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4157d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4157d7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4157de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4157e2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4157e8:	41 b8 b0 02 62 00    	mov    $0x6202b0,%r8d
  4157ee:	48 89 d1             	mov    %rdx,%rcx
  4157f1:	ba 26 a5 41 00       	mov    $0x41a526,%edx
  4157f6:	be 00 00 00 00       	mov    $0x0,%esi
  4157fb:	48 89 c7             	mov    %rax,%rdi
  4157fe:	e8 5c a0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415807:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41580e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415812:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415818:	41 b8 b4 02 62 00    	mov    $0x6202b4,%r8d
  41581e:	48 89 d1             	mov    %rdx,%rcx
  415821:	ba 2d a5 41 00       	mov    $0x41a52d,%edx
  415826:	be 00 00 00 00       	mov    $0x0,%esi
  41582b:	48 89 c7             	mov    %rax,%rdi
  41582e:	e8 2c a0 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415837:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41583e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415842:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415848:	41 b8 b8 02 62 00    	mov    $0x6202b8,%r8d
  41584e:	48 89 d1             	mov    %rdx,%rcx
  415851:	ba 33 a5 41 00       	mov    $0x41a533,%edx
  415856:	be 00 00 00 00       	mov    $0x0,%esi
  41585b:	48 89 c7             	mov    %rax,%rdi
  41585e:	e8 fc 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415867:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41586e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415872:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415878:	41 b8 bc 02 62 00    	mov    $0x6202bc,%r8d
  41587e:	48 89 d1             	mov    %rdx,%rcx
  415881:	ba 3e a5 41 00       	mov    $0x41a53e,%edx
  415886:	be 00 00 00 00       	mov    $0x0,%esi
  41588b:	48 89 c7             	mov    %rax,%rdi
  41588e:	e8 cc 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415897:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41589e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4158a2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4158a8:	41 b8 c0 02 62 00    	mov    $0x6202c0,%r8d
  4158ae:	48 89 d1             	mov    %rdx,%rcx
  4158b1:	ba 48 a5 41 00       	mov    $0x41a548,%edx
  4158b6:	be 00 00 00 00       	mov    $0x0,%esi
  4158bb:	48 89 c7             	mov    %rax,%rdi
  4158be:	e8 9c 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4158c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4158c7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4158ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4158d2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4158d8:	41 b8 c4 02 62 00    	mov    $0x6202c4,%r8d
  4158de:	48 89 d1             	mov    %rdx,%rcx
  4158e1:	ba 53 a5 41 00       	mov    $0x41a553,%edx
  4158e6:	be 00 00 00 00       	mov    $0x0,%esi
  4158eb:	48 89 c7             	mov    %rax,%rdi
  4158ee:	e8 6c 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4158f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4158f7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4158fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415902:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415908:	41 b8 c8 02 62 00    	mov    $0x6202c8,%r8d
  41590e:	48 89 d1             	mov    %rdx,%rcx
  415911:	ba 59 a5 41 00       	mov    $0x41a559,%edx
  415916:	be 00 00 00 00       	mov    $0x0,%esi
  41591b:	48 89 c7             	mov    %rax,%rdi
  41591e:	e8 3c 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415927:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41592e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415932:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415938:	41 b8 cc 02 62 00    	mov    $0x6202cc,%r8d
  41593e:	48 89 d1             	mov    %rdx,%rcx
  415941:	ba 5f a5 41 00       	mov    $0x41a55f,%edx
  415946:	be 00 00 00 00       	mov    $0x0,%esi
  41594b:	48 89 c7             	mov    %rax,%rdi
  41594e:	e8 0c 9f ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415957:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41595e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415962:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415968:	41 b8 d0 02 62 00    	mov    $0x6202d0,%r8d
  41596e:	48 89 d1             	mov    %rdx,%rcx
  415971:	ba 66 a5 41 00       	mov    $0x41a566,%edx
  415976:	be 00 00 00 00       	mov    $0x0,%esi
  41597b:	48 89 c7             	mov    %rax,%rdi
  41597e:	e8 dc 9e ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415983:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415987:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41598e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415992:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415998:	41 b8 d4 02 62 00    	mov    $0x6202d4,%r8d
  41599e:	48 89 d1             	mov    %rdx,%rcx
  4159a1:	ba 76 a5 41 00       	mov    $0x41a576,%edx
  4159a6:	be 00 00 00 00       	mov    $0x0,%esi
  4159ab:	48 89 c7             	mov    %rax,%rdi
  4159ae:	e8 ac 9e ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4159b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4159b7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4159be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4159c2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4159c8:	41 b8 d8 02 62 00    	mov    $0x6202d8,%r8d
  4159ce:	48 89 d1             	mov    %rdx,%rcx
  4159d1:	ba 81 a5 41 00       	mov    $0x41a581,%edx
  4159d6:	be 00 00 00 00       	mov    $0x0,%esi
  4159db:	48 89 c7             	mov    %rax,%rdi
  4159de:	e8 7c 9e ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4159e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4159e7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4159ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4159f2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4159f8:	41 b8 dc 02 62 00    	mov    $0x6202dc,%r8d
  4159fe:	48 89 d1             	mov    %rdx,%rcx
  415a01:	ba 88 a5 41 00       	mov    $0x41a588,%edx
  415a06:	be 00 00 00 00       	mov    $0x0,%esi
  415a0b:	48 89 c7             	mov    %rax,%rdi
  415a0e:	e8 4c 9e ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415a13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a17:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a22:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415a28:	41 b8 e0 02 62 00    	mov    $0x6202e0,%r8d
  415a2e:	48 89 d1             	mov    %rdx,%rcx
  415a31:	ba 8e a5 41 00       	mov    $0x41a58e,%edx
  415a36:	be 00 00 00 00       	mov    $0x0,%esi
  415a3b:	48 89 c7             	mov    %rax,%rdi
  415a3e:	e8 1c 9e ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a47:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a52:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415a58:	41 b8 e4 02 62 00    	mov    $0x6202e4,%r8d
  415a5e:	48 89 d1             	mov    %rdx,%rcx
  415a61:	ba 95 a5 41 00       	mov    $0x41a595,%edx
  415a66:	be 00 00 00 00       	mov    $0x0,%esi
  415a6b:	48 89 c7             	mov    %rax,%rdi
  415a6e:	e8 ec 9d ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415a73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a77:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415a82:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415a88:	41 b8 e8 02 62 00    	mov    $0x6202e8,%r8d
  415a8e:	48 89 d1             	mov    %rdx,%rcx
  415a91:	ba 9b a5 41 00       	mov    $0x41a59b,%edx
  415a96:	be 00 00 00 00       	mov    $0x0,%esi
  415a9b:	48 89 c7             	mov    %rax,%rdi
  415a9e:	e8 bc 9d ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415aa7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415ab2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415ab8:	41 b8 ec 02 62 00    	mov    $0x6202ec,%r8d
  415abe:	48 89 d1             	mov    %rdx,%rcx
  415ac1:	ba a2 a5 41 00       	mov    $0x41a5a2,%edx
  415ac6:	be 00 00 00 00       	mov    $0x0,%esi
  415acb:	48 89 c7             	mov    %rax,%rdi
  415ace:	e8 8c 9d ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415ad7:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415ae2:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415ae8:	41 b8 f0 02 62 00    	mov    $0x6202f0,%r8d
  415aee:	48 89 d1             	mov    %rdx,%rcx
  415af1:	ba a8 a5 41 00       	mov    $0x41a5a8,%edx
  415af6:	be 00 00 00 00       	mov    $0x0,%esi
  415afb:	48 89 c7             	mov    %rax,%rdi
  415afe:	e8 5c 9d ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b07:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b12:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415b18:	41 b8 f4 02 62 00    	mov    $0x6202f4,%r8d
  415b1e:	48 89 d1             	mov    %rdx,%rcx
  415b21:	ba b2 a5 41 00       	mov    $0x41a5b2,%edx
  415b26:	be 00 00 00 00       	mov    $0x0,%esi
  415b2b:	48 89 c7             	mov    %rax,%rdi
  415b2e:	e8 2c 9d ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b37:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b42:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415b48:	41 b8 f8 02 62 00    	mov    $0x6202f8,%r8d
  415b4e:	48 89 d1             	mov    %rdx,%rcx
  415b51:	ba ba a5 41 00       	mov    $0x41a5ba,%edx
  415b56:	be 00 00 00 00       	mov    $0x0,%esi
  415b5b:	48 89 c7             	mov    %rax,%rdi
  415b5e:	e8 fc 9c ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b67:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b72:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  415b78:	41 b8 fc 02 62 00    	mov    $0x6202fc,%r8d
  415b7e:	48 89 d1             	mov    %rdx,%rcx
  415b81:	ba c6 a5 41 00       	mov    $0x41a5c6,%edx
  415b86:	be 00 00 00 00       	mov    $0x0,%esi
  415b8b:	48 89 c7             	mov    %rax,%rdi
  415b8e:	e8 cc 9c ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415b93:	e8 e8 cd fe ff       	callq  402980 <__errno_location@plt>
  415b98:	48 89 c1             	mov    %rax,%rcx
  415b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415b9f:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  415ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  415baa:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  415bb0:	49 89 c8             	mov    %rcx,%r8
  415bb3:	48 89 d1             	mov    %rdx,%rcx
  415bb6:	ba cc a5 41 00       	mov    $0x41a5cc,%edx
  415bbb:	be 00 00 00 00       	mov    $0x0,%esi
  415bc0:	48 89 c7             	mov    %rax,%rdi
  415bc3:	e8 97 9c ff ff       	callq  40f85f <VariableDefinePlatformVar>
  415bc8:	90                   	nop
  415bc9:	c9                   	leaveq 
  415bca:	c3                   	retq   

0000000000415bcb <StdIsalnum>:
  415bcb:	55                   	push   %rbp
  415bcc:	48 89 e5             	mov    %rsp,%rbp
  415bcf:	48 83 ec 20          	sub    $0x20,%rsp
  415bd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415bd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415bdb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415bdf:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415be2:	e8 39 d7 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415be7:	48 8b 10             	mov    (%rax),%rdx
  415bea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415bee:	48 8b 00             	mov    (%rax),%rax
  415bf1:	48 8b 40 08          	mov    0x8(%rax),%rax
  415bf5:	8b 00                	mov    (%rax),%eax
  415bf7:	48 98                	cltq   
  415bf9:	48 01 c0             	add    %rax,%rax
  415bfc:	48 01 d0             	add    %rdx,%rax
  415bff:	0f b7 00             	movzwl (%rax),%eax
  415c02:	0f b7 d0             	movzwl %ax,%edx
  415c05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415c09:	48 8b 40 08          	mov    0x8(%rax),%rax
  415c0d:	83 e2 08             	and    $0x8,%edx
  415c10:	89 10                	mov    %edx,(%rax)
  415c12:	90                   	nop
  415c13:	c9                   	leaveq 
  415c14:	c3                   	retq   

0000000000415c15 <StdIsalpha>:
  415c15:	55                   	push   %rbp
  415c16:	48 89 e5             	mov    %rsp,%rbp
  415c19:	48 83 ec 20          	sub    $0x20,%rsp
  415c1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415c21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415c25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415c29:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415c2c:	e8 ef d6 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415c31:	48 8b 10             	mov    (%rax),%rdx
  415c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415c38:	48 8b 00             	mov    (%rax),%rax
  415c3b:	48 8b 40 08          	mov    0x8(%rax),%rax
  415c3f:	8b 00                	mov    (%rax),%eax
  415c41:	48 98                	cltq   
  415c43:	48 01 c0             	add    %rax,%rax
  415c46:	48 01 d0             	add    %rdx,%rax
  415c49:	0f b7 00             	movzwl (%rax),%eax
  415c4c:	0f b7 d0             	movzwl %ax,%edx
  415c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415c53:	48 8b 40 08          	mov    0x8(%rax),%rax
  415c57:	81 e2 00 04 00 00    	and    $0x400,%edx
  415c5d:	89 10                	mov    %edx,(%rax)
  415c5f:	90                   	nop
  415c60:	c9                   	leaveq 
  415c61:	c3                   	retq   

0000000000415c62 <StdIsblank>:
  415c62:	55                   	push   %rbp
  415c63:	48 89 e5             	mov    %rsp,%rbp
  415c66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415c6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415c6e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  415c72:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  415c75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415c79:	48 8b 00             	mov    (%rax),%rax
  415c7c:	48 8b 40 08          	mov    0x8(%rax),%rax
  415c80:	8b 00                	mov    (%rax),%eax
  415c82:	89 45 fc             	mov    %eax,-0x4(%rbp)
  415c85:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
  415c89:	0f 94 c2             	sete   %dl
  415c8c:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  415c90:	0f 94 c0             	sete   %al
  415c93:	09 c2                	or     %eax,%edx
  415c95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  415c99:	48 8b 40 08          	mov    0x8(%rax),%rax
  415c9d:	0f b6 d2             	movzbl %dl,%edx
  415ca0:	89 10                	mov    %edx,(%rax)
  415ca2:	90                   	nop
  415ca3:	5d                   	pop    %rbp
  415ca4:	c3                   	retq   

0000000000415ca5 <StdIscntrl>:
  415ca5:	55                   	push   %rbp
  415ca6:	48 89 e5             	mov    %rsp,%rbp
  415ca9:	48 83 ec 20          	sub    $0x20,%rsp
  415cad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415cb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415cb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415cb9:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415cbc:	e8 5f d6 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415cc1:	48 8b 10             	mov    (%rax),%rdx
  415cc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415cc8:	48 8b 00             	mov    (%rax),%rax
  415ccb:	48 8b 40 08          	mov    0x8(%rax),%rax
  415ccf:	8b 00                	mov    (%rax),%eax
  415cd1:	48 98                	cltq   
  415cd3:	48 01 c0             	add    %rax,%rax
  415cd6:	48 01 d0             	add    %rdx,%rax
  415cd9:	0f b7 00             	movzwl (%rax),%eax
  415cdc:	0f b7 d0             	movzwl %ax,%edx
  415cdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415ce3:	48 8b 40 08          	mov    0x8(%rax),%rax
  415ce7:	83 e2 02             	and    $0x2,%edx
  415cea:	89 10                	mov    %edx,(%rax)
  415cec:	90                   	nop
  415ced:	c9                   	leaveq 
  415cee:	c3                   	retq   

0000000000415cef <StdIsdigit>:
  415cef:	55                   	push   %rbp
  415cf0:	48 89 e5             	mov    %rsp,%rbp
  415cf3:	48 83 ec 20          	sub    $0x20,%rsp
  415cf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415cfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415cff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415d03:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415d06:	e8 15 d6 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415d0b:	48 8b 10             	mov    (%rax),%rdx
  415d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415d12:	48 8b 00             	mov    (%rax),%rax
  415d15:	48 8b 40 08          	mov    0x8(%rax),%rax
  415d19:	8b 00                	mov    (%rax),%eax
  415d1b:	48 98                	cltq   
  415d1d:	48 01 c0             	add    %rax,%rax
  415d20:	48 01 d0             	add    %rdx,%rax
  415d23:	0f b7 00             	movzwl (%rax),%eax
  415d26:	0f b7 d0             	movzwl %ax,%edx
  415d29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415d2d:	48 8b 40 08          	mov    0x8(%rax),%rax
  415d31:	81 e2 00 08 00 00    	and    $0x800,%edx
  415d37:	89 10                	mov    %edx,(%rax)
  415d39:	90                   	nop
  415d3a:	c9                   	leaveq 
  415d3b:	c3                   	retq   

0000000000415d3c <StdIsgraph>:
  415d3c:	55                   	push   %rbp
  415d3d:	48 89 e5             	mov    %rsp,%rbp
  415d40:	48 83 ec 20          	sub    $0x20,%rsp
  415d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415d48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415d4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415d50:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415d53:	e8 c8 d5 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415d58:	48 8b 10             	mov    (%rax),%rdx
  415d5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415d5f:	48 8b 00             	mov    (%rax),%rax
  415d62:	48 8b 40 08          	mov    0x8(%rax),%rax
  415d66:	8b 00                	mov    (%rax),%eax
  415d68:	48 98                	cltq   
  415d6a:	48 01 c0             	add    %rax,%rax
  415d6d:	48 01 d0             	add    %rdx,%rax
  415d70:	0f b7 00             	movzwl (%rax),%eax
  415d73:	0f b7 d0             	movzwl %ax,%edx
  415d76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415d7a:	48 8b 40 08          	mov    0x8(%rax),%rax
  415d7e:	81 e2 00 80 00 00    	and    $0x8000,%edx
  415d84:	89 10                	mov    %edx,(%rax)
  415d86:	90                   	nop
  415d87:	c9                   	leaveq 
  415d88:	c3                   	retq   

0000000000415d89 <StdIslower>:
  415d89:	55                   	push   %rbp
  415d8a:	48 89 e5             	mov    %rsp,%rbp
  415d8d:	48 83 ec 20          	sub    $0x20,%rsp
  415d91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415d95:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415d99:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415d9d:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415da0:	e8 7b d5 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415da5:	48 8b 10             	mov    (%rax),%rdx
  415da8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415dac:	48 8b 00             	mov    (%rax),%rax
  415daf:	48 8b 40 08          	mov    0x8(%rax),%rax
  415db3:	8b 00                	mov    (%rax),%eax
  415db5:	48 98                	cltq   
  415db7:	48 01 c0             	add    %rax,%rax
  415dba:	48 01 d0             	add    %rdx,%rax
  415dbd:	0f b7 00             	movzwl (%rax),%eax
  415dc0:	0f b7 d0             	movzwl %ax,%edx
  415dc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415dc7:	48 8b 40 08          	mov    0x8(%rax),%rax
  415dcb:	81 e2 00 02 00 00    	and    $0x200,%edx
  415dd1:	89 10                	mov    %edx,(%rax)
  415dd3:	90                   	nop
  415dd4:	c9                   	leaveq 
  415dd5:	c3                   	retq   

0000000000415dd6 <StdIsprint>:
  415dd6:	55                   	push   %rbp
  415dd7:	48 89 e5             	mov    %rsp,%rbp
  415dda:	48 83 ec 20          	sub    $0x20,%rsp
  415dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415de2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415de6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415dea:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415ded:	e8 2e d5 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415df2:	48 8b 10             	mov    (%rax),%rdx
  415df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415df9:	48 8b 00             	mov    (%rax),%rax
  415dfc:	48 8b 40 08          	mov    0x8(%rax),%rax
  415e00:	8b 00                	mov    (%rax),%eax
  415e02:	48 98                	cltq   
  415e04:	48 01 c0             	add    %rax,%rax
  415e07:	48 01 d0             	add    %rdx,%rax
  415e0a:	0f b7 00             	movzwl (%rax),%eax
  415e0d:	0f b7 d0             	movzwl %ax,%edx
  415e10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415e14:	48 8b 40 08          	mov    0x8(%rax),%rax
  415e18:	81 e2 00 40 00 00    	and    $0x4000,%edx
  415e1e:	89 10                	mov    %edx,(%rax)
  415e20:	90                   	nop
  415e21:	c9                   	leaveq 
  415e22:	c3                   	retq   

0000000000415e23 <StdIspunct>:
  415e23:	55                   	push   %rbp
  415e24:	48 89 e5             	mov    %rsp,%rbp
  415e27:	48 83 ec 20          	sub    $0x20,%rsp
  415e2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415e2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415e33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415e37:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415e3a:	e8 e1 d4 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415e3f:	48 8b 10             	mov    (%rax),%rdx
  415e42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415e46:	48 8b 00             	mov    (%rax),%rax
  415e49:	48 8b 40 08          	mov    0x8(%rax),%rax
  415e4d:	8b 00                	mov    (%rax),%eax
  415e4f:	48 98                	cltq   
  415e51:	48 01 c0             	add    %rax,%rax
  415e54:	48 01 d0             	add    %rdx,%rax
  415e57:	0f b7 00             	movzwl (%rax),%eax
  415e5a:	0f b7 d0             	movzwl %ax,%edx
  415e5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415e61:	48 8b 40 08          	mov    0x8(%rax),%rax
  415e65:	83 e2 04             	and    $0x4,%edx
  415e68:	89 10                	mov    %edx,(%rax)
  415e6a:	90                   	nop
  415e6b:	c9                   	leaveq 
  415e6c:	c3                   	retq   

0000000000415e6d <StdIsspace>:
  415e6d:	55                   	push   %rbp
  415e6e:	48 89 e5             	mov    %rsp,%rbp
  415e71:	48 83 ec 20          	sub    $0x20,%rsp
  415e75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415e79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415e7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415e81:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415e84:	e8 97 d4 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415e89:	48 8b 10             	mov    (%rax),%rdx
  415e8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415e90:	48 8b 00             	mov    (%rax),%rax
  415e93:	48 8b 40 08          	mov    0x8(%rax),%rax
  415e97:	8b 00                	mov    (%rax),%eax
  415e99:	48 98                	cltq   
  415e9b:	48 01 c0             	add    %rax,%rax
  415e9e:	48 01 d0             	add    %rdx,%rax
  415ea1:	0f b7 00             	movzwl (%rax),%eax
  415ea4:	0f b7 d0             	movzwl %ax,%edx
  415ea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415eab:	48 8b 40 08          	mov    0x8(%rax),%rax
  415eaf:	81 e2 00 20 00 00    	and    $0x2000,%edx
  415eb5:	89 10                	mov    %edx,(%rax)
  415eb7:	90                   	nop
  415eb8:	c9                   	leaveq 
  415eb9:	c3                   	retq   

0000000000415eba <StdIsupper>:
  415eba:	55                   	push   %rbp
  415ebb:	48 89 e5             	mov    %rsp,%rbp
  415ebe:	48 83 ec 20          	sub    $0x20,%rsp
  415ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415ec6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415eca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415ece:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415ed1:	e8 4a d4 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415ed6:	48 8b 10             	mov    (%rax),%rdx
  415ed9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415edd:	48 8b 00             	mov    (%rax),%rax
  415ee0:	48 8b 40 08          	mov    0x8(%rax),%rax
  415ee4:	8b 00                	mov    (%rax),%eax
  415ee6:	48 98                	cltq   
  415ee8:	48 01 c0             	add    %rax,%rax
  415eeb:	48 01 d0             	add    %rdx,%rax
  415eee:	0f b7 00             	movzwl (%rax),%eax
  415ef1:	0f b7 d0             	movzwl %ax,%edx
  415ef4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415ef8:	48 8b 40 08          	mov    0x8(%rax),%rax
  415efc:	81 e2 00 01 00 00    	and    $0x100,%edx
  415f02:	89 10                	mov    %edx,(%rax)
  415f04:	90                   	nop
  415f05:	c9                   	leaveq 
  415f06:	c3                   	retq   

0000000000415f07 <StdIsxdigit>:
  415f07:	55                   	push   %rbp
  415f08:	48 89 e5             	mov    %rsp,%rbp
  415f0b:	48 83 ec 20          	sub    $0x20,%rsp
  415f0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415f13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415f17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415f1b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415f1e:	e8 fd d3 fe ff       	callq  403320 <__ctype_b_loc@plt>
  415f23:	48 8b 10             	mov    (%rax),%rdx
  415f26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415f2a:	48 8b 00             	mov    (%rax),%rax
  415f2d:	48 8b 40 08          	mov    0x8(%rax),%rax
  415f31:	8b 00                	mov    (%rax),%eax
  415f33:	48 98                	cltq   
  415f35:	48 01 c0             	add    %rax,%rax
  415f38:	48 01 d0             	add    %rdx,%rax
  415f3b:	0f b7 00             	movzwl (%rax),%eax
  415f3e:	0f b7 d0             	movzwl %ax,%edx
  415f41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415f45:	48 8b 40 08          	mov    0x8(%rax),%rax
  415f49:	81 e2 00 10 00 00    	and    $0x1000,%edx
  415f4f:	89 10                	mov    %edx,(%rax)
  415f51:	90                   	nop
  415f52:	c9                   	leaveq 
  415f53:	c3                   	retq   

0000000000415f54 <StdTolower>:
  415f54:	55                   	push   %rbp
  415f55:	48 89 e5             	mov    %rsp,%rbp
  415f58:	53                   	push   %rbx
  415f59:	48 83 ec 28          	sub    $0x28,%rsp
  415f5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415f61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415f65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  415f69:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  415f6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415f70:	48 8b 00             	mov    (%rax),%rax
  415f73:	48 8b 40 08          	mov    0x8(%rax),%rax
  415f77:	8b 00                	mov    (%rax),%eax
  415f79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  415f7d:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  415f81:	89 c7                	mov    %eax,%edi
  415f83:	e8 78 cf fe ff       	callq  402f00 <tolower@plt>
  415f88:	89 03                	mov    %eax,(%rbx)
  415f8a:	90                   	nop
  415f8b:	48 83 c4 28          	add    $0x28,%rsp
  415f8f:	5b                   	pop    %rbx
  415f90:	5d                   	pop    %rbp
  415f91:	c3                   	retq   

0000000000415f92 <StdToupper>:
  415f92:	55                   	push   %rbp
  415f93:	48 89 e5             	mov    %rsp,%rbp
  415f96:	53                   	push   %rbx
  415f97:	48 83 ec 28          	sub    $0x28,%rsp
  415f9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  415f9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  415fa3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  415fa7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  415faa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  415fae:	48 8b 00             	mov    (%rax),%rax
  415fb1:	48 8b 40 08          	mov    0x8(%rax),%rax
  415fb5:	8b 00                	mov    (%rax),%eax
  415fb7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  415fbb:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  415fbf:	89 c7                	mov    %eax,%edi
  415fc1:	e8 6a ca fe ff       	callq  402a30 <toupper@plt>
  415fc6:	89 03                	mov    %eax,(%rbx)
  415fc8:	90                   	nop
  415fc9:	48 83 c4 28          	add    $0x28,%rsp
  415fcd:	5b                   	pop    %rbx
  415fce:	5d                   	pop    %rbp
  415fcf:	c3                   	retq   

0000000000415fd0 <StdIsascii>:
  415fd0:	55                   	push   %rbp
  415fd1:	48 89 e5             	mov    %rsp,%rbp
  415fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  415fd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  415fdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  415fe0:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  415fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  415fe7:	48 8b 00             	mov    (%rax),%rax
  415fea:	48 8b 40 08          	mov    0x8(%rax),%rax
  415fee:	8b 00                	mov    (%rax),%eax
  415ff0:	83 e0 80             	and    $0xffffff80,%eax
  415ff3:	85 c0                	test   %eax,%eax
  415ff5:	0f 94 c2             	sete   %dl
  415ff8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  415ffc:	48 8b 40 08          	mov    0x8(%rax),%rax
  416000:	0f b6 d2             	movzbl %dl,%edx
  416003:	89 10                	mov    %edx,(%rax)
  416005:	90                   	nop
  416006:	5d                   	pop    %rbp
  416007:	c3                   	retq   

0000000000416008 <StdToascii>:
  416008:	55                   	push   %rbp
  416009:	48 89 e5             	mov    %rsp,%rbp
  41600c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416014:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416018:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41601b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41601f:	48 8b 00             	mov    (%rax),%rax
  416022:	48 8b 40 08          	mov    0x8(%rax),%rax
  416026:	8b 10                	mov    (%rax),%edx
  416028:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41602c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416030:	83 e2 7f             	and    $0x7f,%edx
  416033:	89 10                	mov    %edx,(%rax)
  416035:	90                   	nop
  416036:	5d                   	pop    %rbp
  416037:	c3                   	retq   

0000000000416038 <StdboolSetupFunc>:
  416038:	55                   	push   %rbp
  416039:	48 89 e5             	mov    %rsp,%rbp
  41603c:	48 83 ec 10          	sub    $0x10,%rsp
  416040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416048:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41604f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416053:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  416059:	41 b8 10 04 62 00    	mov    $0x620410,%r8d
  41605f:	48 89 d1             	mov    %rdx,%rcx
  416062:	ba 12 a7 41 00       	mov    $0x41a712,%edx
  416067:	be 00 00 00 00       	mov    $0x0,%esi
  41606c:	48 89 c7             	mov    %rax,%rdi
  41606f:	e8 eb 97 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  416074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416078:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  41607f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  416083:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  416089:	41 b8 18 09 62 00    	mov    $0x620918,%r8d
  41608f:	48 89 d1             	mov    %rdx,%rcx
  416092:	ba 17 a7 41 00       	mov    $0x41a717,%edx
  416097:	be 00 00 00 00       	mov    $0x0,%esi
  41609c:	48 89 c7             	mov    %rax,%rdi
  41609f:	e8 bb 97 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4160a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4160a8:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4160af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4160b3:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4160b9:	41 b8 10 04 62 00    	mov    $0x620410,%r8d
  4160bf:	48 89 d1             	mov    %rdx,%rcx
  4160c2:	ba 1d a7 41 00       	mov    $0x41a71d,%edx
  4160c7:	be 00 00 00 00       	mov    $0x0,%esi
  4160cc:	48 89 c7             	mov    %rax,%rdi
  4160cf:	e8 8b 97 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4160d4:	90                   	nop
  4160d5:	c9                   	leaveq 
  4160d6:	c3                   	retq   

00000000004160d7 <UnistdAccess>:
  4160d7:	55                   	push   %rbp
  4160d8:	48 89 e5             	mov    %rsp,%rbp
  4160db:	53                   	push   %rbx
  4160dc:	48 83 ec 28          	sub    $0x28,%rsp
  4160e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4160e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4160e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4160ec:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4160ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4160f3:	48 83 c0 08          	add    $0x8,%rax
  4160f7:	48 8b 00             	mov    (%rax),%rax
  4160fa:	48 8b 40 08          	mov    0x8(%rax),%rax
  4160fe:	8b 10                	mov    (%rax),%edx
  416100:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416104:	48 8b 00             	mov    (%rax),%rax
  416107:	48 8b 40 08          	mov    0x8(%rax),%rax
  41610b:	48 8b 00             	mov    (%rax),%rax
  41610e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416112:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  416116:	89 d6                	mov    %edx,%esi
  416118:	48 89 c7             	mov    %rax,%rdi
  41611b:	e8 00 d0 fe ff       	callq  403120 <access@plt>
  416120:	89 03                	mov    %eax,(%rbx)
  416122:	90                   	nop
  416123:	48 83 c4 28          	add    $0x28,%rsp
  416127:	5b                   	pop    %rbx
  416128:	5d                   	pop    %rbp
  416129:	c3                   	retq   

000000000041612a <UnistdAlarm>:
  41612a:	55                   	push   %rbp
  41612b:	48 89 e5             	mov    %rsp,%rbp
  41612e:	48 83 ec 20          	sub    $0x20,%rsp
  416132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41613a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41613e:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416145:	48 8b 00             	mov    (%rax),%rax
  416148:	48 8b 40 08          	mov    0x8(%rax),%rax
  41614c:	8b 00                	mov    (%rax),%eax
  41614e:	89 c7                	mov    %eax,%edi
  416150:	e8 7b cb fe ff       	callq  402cd0 <alarm@plt>
  416155:	89 c2                	mov    %eax,%edx
  416157:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41615b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41615f:	89 10                	mov    %edx,(%rax)
  416161:	90                   	nop
  416162:	c9                   	leaveq 
  416163:	c3                   	retq   

0000000000416164 <UnistdChdir>:
  416164:	55                   	push   %rbp
  416165:	48 89 e5             	mov    %rsp,%rbp
  416168:	53                   	push   %rbx
  416169:	48 83 ec 28          	sub    $0x28,%rsp
  41616d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416171:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416175:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416179:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41617c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416180:	48 8b 00             	mov    (%rax),%rax
  416183:	48 8b 40 08          	mov    0x8(%rax),%rax
  416187:	48 8b 00             	mov    (%rax),%rax
  41618a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41618e:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416192:	48 89 c7             	mov    %rax,%rdi
  416195:	e8 76 c9 fe ff       	callq  402b10 <chdir@plt>
  41619a:	89 03                	mov    %eax,(%rbx)
  41619c:	90                   	nop
  41619d:	48 83 c4 28          	add    $0x28,%rsp
  4161a1:	5b                   	pop    %rbx
  4161a2:	5d                   	pop    %rbp
  4161a3:	c3                   	retq   

00000000004161a4 <UnistdChroot>:
  4161a4:	55                   	push   %rbp
  4161a5:	48 89 e5             	mov    %rsp,%rbp
  4161a8:	53                   	push   %rbx
  4161a9:	48 83 ec 28          	sub    $0x28,%rsp
  4161ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4161b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4161b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4161b9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4161bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4161c0:	48 8b 00             	mov    (%rax),%rax
  4161c3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4161c7:	48 8b 00             	mov    (%rax),%rax
  4161ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4161ce:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4161d2:	48 89 c7             	mov    %rax,%rdi
  4161d5:	e8 36 c8 fe ff       	callq  402a10 <chroot@plt>
  4161da:	89 03                	mov    %eax,(%rbx)
  4161dc:	90                   	nop
  4161dd:	48 83 c4 28          	add    $0x28,%rsp
  4161e1:	5b                   	pop    %rbx
  4161e2:	5d                   	pop    %rbp
  4161e3:	c3                   	retq   

00000000004161e4 <UnistdChown>:
  4161e4:	55                   	push   %rbp
  4161e5:	48 89 e5             	mov    %rsp,%rbp
  4161e8:	53                   	push   %rbx
  4161e9:	48 83 ec 28          	sub    $0x28,%rsp
  4161ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4161f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4161f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4161f9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4161fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416200:	48 83 c0 10          	add    $0x10,%rax
  416204:	48 8b 00             	mov    (%rax),%rax
  416207:	48 8b 40 08          	mov    0x8(%rax),%rax
  41620b:	8b 00                	mov    (%rax),%eax
  41620d:	89 c6                	mov    %eax,%esi
  41620f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416213:	48 83 c0 08          	add    $0x8,%rax
  416217:	48 8b 00             	mov    (%rax),%rax
  41621a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41621e:	8b 00                	mov    (%rax),%eax
  416220:	89 c1                	mov    %eax,%ecx
  416222:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416226:	48 8b 00             	mov    (%rax),%rax
  416229:	48 8b 40 08          	mov    0x8(%rax),%rax
  41622d:	48 8b 00             	mov    (%rax),%rax
  416230:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416234:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416238:	89 f2                	mov    %esi,%edx
  41623a:	89 ce                	mov    %ecx,%esi
  41623c:	48 89 c7             	mov    %rax,%rdi
  41623f:	e8 dc cd fe ff       	callq  403020 <chown@plt>
  416244:	89 03                	mov    %eax,(%rbx)
  416246:	90                   	nop
  416247:	48 83 c4 28          	add    $0x28,%rsp
  41624b:	5b                   	pop    %rbx
  41624c:	5d                   	pop    %rbp
  41624d:	c3                   	retq   

000000000041624e <UnistdClose>:
  41624e:	55                   	push   %rbp
  41624f:	48 89 e5             	mov    %rsp,%rbp
  416252:	53                   	push   %rbx
  416253:	48 83 ec 28          	sub    $0x28,%rsp
  416257:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41625b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41625f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416263:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416266:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41626a:	48 8b 00             	mov    (%rax),%rax
  41626d:	48 8b 40 08          	mov    0x8(%rax),%rax
  416271:	8b 00                	mov    (%rax),%eax
  416273:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416277:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41627b:	89 c7                	mov    %eax,%edi
  41627d:	e8 5e ca fe ff       	callq  402ce0 <close@plt>
  416282:	89 03                	mov    %eax,(%rbx)
  416284:	90                   	nop
  416285:	48 83 c4 28          	add    $0x28,%rsp
  416289:	5b                   	pop    %rbx
  41628a:	5d                   	pop    %rbp
  41628b:	c3                   	retq   

000000000041628c <UnistdConfstr>:
  41628c:	55                   	push   %rbp
  41628d:	48 89 e5             	mov    %rsp,%rbp
  416290:	48 83 ec 20          	sub    $0x20,%rsp
  416294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41629c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4162a0:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4162a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4162a7:	48 83 c0 10          	add    $0x10,%rax
  4162ab:	48 8b 00             	mov    (%rax),%rax
  4162ae:	48 8b 40 08          	mov    0x8(%rax),%rax
  4162b2:	8b 00                	mov    (%rax),%eax
  4162b4:	48 63 d0             	movslq %eax,%rdx
  4162b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4162bb:	48 83 c0 08          	add    $0x8,%rax
  4162bf:	48 8b 00             	mov    (%rax),%rax
  4162c2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4162c6:	48 8b 08             	mov    (%rax),%rcx
  4162c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4162cd:	48 8b 00             	mov    (%rax),%rax
  4162d0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4162d4:	8b 00                	mov    (%rax),%eax
  4162d6:	48 89 ce             	mov    %rcx,%rsi
  4162d9:	89 c7                	mov    %eax,%edi
  4162db:	e8 00 cd fe ff       	callq  402fe0 <confstr@plt>
  4162e0:	48 89 c2             	mov    %rax,%rdx
  4162e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4162e7:	48 8b 40 08          	mov    0x8(%rax),%rax
  4162eb:	89 10                	mov    %edx,(%rax)
  4162ed:	90                   	nop
  4162ee:	c9                   	leaveq 
  4162ef:	c3                   	retq   

00000000004162f0 <UnistdCtermid>:
  4162f0:	55                   	push   %rbp
  4162f1:	48 89 e5             	mov    %rsp,%rbp
  4162f4:	53                   	push   %rbx
  4162f5:	48 83 ec 28          	sub    $0x28,%rsp
  4162f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4162fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416301:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416305:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416308:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41630c:	48 8b 00             	mov    (%rax),%rax
  41630f:	48 8b 40 08          	mov    0x8(%rax),%rax
  416313:	48 8b 00             	mov    (%rax),%rax
  416316:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41631a:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41631e:	48 89 c7             	mov    %rax,%rdi
  416321:	e8 0a ce fe ff       	callq  403130 <ctermid@plt>
  416326:	48 89 03             	mov    %rax,(%rbx)
  416329:	90                   	nop
  41632a:	48 83 c4 28          	add    $0x28,%rsp
  41632e:	5b                   	pop    %rbx
  41632f:	5d                   	pop    %rbp
  416330:	c3                   	retq   

0000000000416331 <UnistdDup>:
  416331:	55                   	push   %rbp
  416332:	48 89 e5             	mov    %rsp,%rbp
  416335:	53                   	push   %rbx
  416336:	48 83 ec 28          	sub    $0x28,%rsp
  41633a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41633e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416342:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416346:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41634d:	48 8b 00             	mov    (%rax),%rax
  416350:	48 8b 40 08          	mov    0x8(%rax),%rax
  416354:	8b 00                	mov    (%rax),%eax
  416356:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41635a:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41635e:	89 c7                	mov    %eax,%edi
  416360:	e8 ab c8 fe ff       	callq  402c10 <dup@plt>
  416365:	89 03                	mov    %eax,(%rbx)
  416367:	90                   	nop
  416368:	48 83 c4 28          	add    $0x28,%rsp
  41636c:	5b                   	pop    %rbx
  41636d:	5d                   	pop    %rbp
  41636e:	c3                   	retq   

000000000041636f <UnistdDup2>:
  41636f:	55                   	push   %rbp
  416370:	48 89 e5             	mov    %rsp,%rbp
  416373:	53                   	push   %rbx
  416374:	48 83 ec 28          	sub    $0x28,%rsp
  416378:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41637c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416380:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416384:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416387:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41638b:	48 83 c0 08          	add    $0x8,%rax
  41638f:	48 8b 00             	mov    (%rax),%rax
  416392:	48 8b 40 08          	mov    0x8(%rax),%rax
  416396:	8b 10                	mov    (%rax),%edx
  416398:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41639c:	48 8b 00             	mov    (%rax),%rax
  41639f:	48 8b 40 08          	mov    0x8(%rax),%rax
  4163a3:	8b 00                	mov    (%rax),%eax
  4163a5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4163a9:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4163ad:	89 d6                	mov    %edx,%esi
  4163af:	89 c7                	mov    %eax,%edi
  4163b1:	e8 aa c7 fe ff       	callq  402b60 <dup2@plt>
  4163b6:	89 03                	mov    %eax,(%rbx)
  4163b8:	90                   	nop
  4163b9:	48 83 c4 28          	add    $0x28,%rsp
  4163bd:	5b                   	pop    %rbx
  4163be:	5d                   	pop    %rbp
  4163bf:	c3                   	retq   

00000000004163c0 <Unistd_Exit>:
  4163c0:	55                   	push   %rbp
  4163c1:	48 89 e5             	mov    %rsp,%rbp
  4163c4:	48 83 ec 20          	sub    $0x20,%rsp
  4163c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4163cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4163d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4163d4:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4163d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4163db:	48 8b 00             	mov    (%rax),%rax
  4163de:	48 8b 40 08          	mov    0x8(%rax),%rax
  4163e2:	8b 00                	mov    (%rax),%eax
  4163e4:	89 c7                	mov    %eax,%edi
  4163e6:	e8 05 c6 fe ff       	callq  4029f0 <_exit@plt>

00000000004163eb <UnistdFchown>:
  4163eb:	55                   	push   %rbp
  4163ec:	48 89 e5             	mov    %rsp,%rbp
  4163ef:	53                   	push   %rbx
  4163f0:	48 83 ec 28          	sub    $0x28,%rsp
  4163f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4163f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4163fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416400:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416407:	48 83 c0 10          	add    $0x10,%rax
  41640b:	48 8b 00             	mov    (%rax),%rax
  41640e:	48 8b 40 08          	mov    0x8(%rax),%rax
  416412:	8b 00                	mov    (%rax),%eax
  416414:	89 c6                	mov    %eax,%esi
  416416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41641a:	48 83 c0 08          	add    $0x8,%rax
  41641e:	48 8b 00             	mov    (%rax),%rax
  416421:	48 8b 40 08          	mov    0x8(%rax),%rax
  416425:	8b 00                	mov    (%rax),%eax
  416427:	89 c1                	mov    %eax,%ecx
  416429:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41642d:	48 8b 00             	mov    (%rax),%rax
  416430:	48 8b 40 08          	mov    0x8(%rax),%rax
  416434:	8b 00                	mov    (%rax),%eax
  416436:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41643a:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41643e:	89 f2                	mov    %esi,%edx
  416440:	89 ce                	mov    %ecx,%esi
  416442:	89 c7                	mov    %eax,%edi
  416444:	e8 f7 cc fe ff       	callq  403140 <fchown@plt>
  416449:	89 03                	mov    %eax,(%rbx)
  41644b:	90                   	nop
  41644c:	48 83 c4 28          	add    $0x28,%rsp
  416450:	5b                   	pop    %rbx
  416451:	5d                   	pop    %rbp
  416452:	c3                   	retq   

0000000000416453 <UnistdFchdir>:
  416453:	55                   	push   %rbp
  416454:	48 89 e5             	mov    %rsp,%rbp
  416457:	53                   	push   %rbx
  416458:	48 83 ec 28          	sub    $0x28,%rsp
  41645c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416460:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416464:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416468:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41646b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41646f:	48 8b 00             	mov    (%rax),%rax
  416472:	48 8b 40 08          	mov    0x8(%rax),%rax
  416476:	8b 00                	mov    (%rax),%eax
  416478:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41647c:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416480:	89 c7                	mov    %eax,%edi
  416482:	e8 79 cb fe ff       	callq  403000 <fchdir@plt>
  416487:	89 03                	mov    %eax,(%rbx)
  416489:	90                   	nop
  41648a:	48 83 c4 28          	add    $0x28,%rsp
  41648e:	5b                   	pop    %rbx
  41648f:	5d                   	pop    %rbp
  416490:	c3                   	retq   

0000000000416491 <UnistdFdatasync>:
  416491:	55                   	push   %rbp
  416492:	48 89 e5             	mov    %rsp,%rbp
  416495:	53                   	push   %rbx
  416496:	48 83 ec 28          	sub    $0x28,%rsp
  41649a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41649e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4164a2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4164a6:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4164a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4164ad:	48 8b 00             	mov    (%rax),%rax
  4164b0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4164b4:	8b 00                	mov    (%rax),%eax
  4164b6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4164ba:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4164be:	89 c7                	mov    %eax,%edi
  4164c0:	e8 cb c4 fe ff       	callq  402990 <fdatasync@plt>
  4164c5:	89 03                	mov    %eax,(%rbx)
  4164c7:	90                   	nop
  4164c8:	48 83 c4 28          	add    $0x28,%rsp
  4164cc:	5b                   	pop    %rbx
  4164cd:	5d                   	pop    %rbp
  4164ce:	c3                   	retq   

00000000004164cf <UnistdFork>:
  4164cf:	55                   	push   %rbp
  4164d0:	48 89 e5             	mov    %rsp,%rbp
  4164d3:	53                   	push   %rbx
  4164d4:	48 83 ec 28          	sub    $0x28,%rsp
  4164d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4164dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4164e0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4164e4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4164e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4164eb:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4164ef:	e8 ec cd fe ff       	callq  4032e0 <fork@plt>
  4164f4:	89 03                	mov    %eax,(%rbx)
  4164f6:	90                   	nop
  4164f7:	48 83 c4 28          	add    $0x28,%rsp
  4164fb:	5b                   	pop    %rbx
  4164fc:	5d                   	pop    %rbp
  4164fd:	c3                   	retq   

00000000004164fe <UnistdFpathconf>:
  4164fe:	55                   	push   %rbp
  4164ff:	48 89 e5             	mov    %rsp,%rbp
  416502:	48 83 ec 20          	sub    $0x20,%rsp
  416506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41650a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  41650e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416512:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416519:	48 83 c0 08          	add    $0x8,%rax
  41651d:	48 8b 00             	mov    (%rax),%rax
  416520:	48 8b 40 08          	mov    0x8(%rax),%rax
  416524:	8b 10                	mov    (%rax),%edx
  416526:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41652a:	48 8b 00             	mov    (%rax),%rax
  41652d:	48 8b 40 08          	mov    0x8(%rax),%rax
  416531:	8b 00                	mov    (%rax),%eax
  416533:	89 d6                	mov    %edx,%esi
  416535:	89 c7                	mov    %eax,%edi
  416537:	e8 e4 c8 fe ff       	callq  402e20 <fpathconf@plt>
  41653c:	48 89 c2             	mov    %rax,%rdx
  41653f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416543:	48 8b 40 08          	mov    0x8(%rax),%rax
  416547:	89 10                	mov    %edx,(%rax)
  416549:	90                   	nop
  41654a:	c9                   	leaveq 
  41654b:	c3                   	retq   

000000000041654c <UnistdFsync>:
  41654c:	55                   	push   %rbp
  41654d:	48 89 e5             	mov    %rsp,%rbp
  416550:	53                   	push   %rbx
  416551:	48 83 ec 28          	sub    $0x28,%rsp
  416555:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416559:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41655d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416561:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416564:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416568:	48 8b 00             	mov    (%rax),%rax
  41656b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41656f:	8b 00                	mov    (%rax),%eax
  416571:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416575:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416579:	89 c7                	mov    %eax,%edi
  41657b:	e8 40 cb fe ff       	callq  4030c0 <fsync@plt>
  416580:	89 03                	mov    %eax,(%rbx)
  416582:	90                   	nop
  416583:	48 83 c4 28          	add    $0x28,%rsp
  416587:	5b                   	pop    %rbx
  416588:	5d                   	pop    %rbp
  416589:	c3                   	retq   

000000000041658a <UnistdFtruncate>:
  41658a:	55                   	push   %rbp
  41658b:	48 89 e5             	mov    %rsp,%rbp
  41658e:	53                   	push   %rbx
  41658f:	48 83 ec 28          	sub    $0x28,%rsp
  416593:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416597:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41659b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41659f:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4165a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4165a6:	48 83 c0 08          	add    $0x8,%rax
  4165aa:	48 8b 00             	mov    (%rax),%rax
  4165ad:	48 8b 40 08          	mov    0x8(%rax),%rax
  4165b1:	8b 00                	mov    (%rax),%eax
  4165b3:	48 63 d0             	movslq %eax,%rdx
  4165b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4165ba:	48 8b 00             	mov    (%rax),%rax
  4165bd:	48 8b 40 08          	mov    0x8(%rax),%rax
  4165c1:	8b 00                	mov    (%rax),%eax
  4165c3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4165c7:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4165cb:	48 89 d6             	mov    %rdx,%rsi
  4165ce:	89 c7                	mov    %eax,%edi
  4165d0:	e8 1b c6 fe ff       	callq  402bf0 <ftruncate@plt>
  4165d5:	89 03                	mov    %eax,(%rbx)
  4165d7:	90                   	nop
  4165d8:	48 83 c4 28          	add    $0x28,%rsp
  4165dc:	5b                   	pop    %rbx
  4165dd:	5d                   	pop    %rbp
  4165de:	c3                   	retq   

00000000004165df <UnistdGetcwd>:
  4165df:	55                   	push   %rbp
  4165e0:	48 89 e5             	mov    %rsp,%rbp
  4165e3:	53                   	push   %rbx
  4165e4:	48 83 ec 28          	sub    $0x28,%rsp
  4165e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4165ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4165f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4165f4:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4165f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4165fb:	48 83 c0 08          	add    $0x8,%rax
  4165ff:	48 8b 00             	mov    (%rax),%rax
  416602:	48 8b 40 08          	mov    0x8(%rax),%rax
  416606:	8b 00                	mov    (%rax),%eax
  416608:	48 63 d0             	movslq %eax,%rdx
  41660b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41660f:	48 8b 00             	mov    (%rax),%rax
  416612:	48 8b 40 08          	mov    0x8(%rax),%rax
  416616:	48 8b 00             	mov    (%rax),%rax
  416619:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  41661d:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  416621:	48 89 d6             	mov    %rdx,%rsi
  416624:	48 89 c7             	mov    %rax,%rdi
  416627:	e8 74 c6 fe ff       	callq  402ca0 <getcwd@plt>
  41662c:	48 89 03             	mov    %rax,(%rbx)
  41662f:	90                   	nop
  416630:	48 83 c4 28          	add    $0x28,%rsp
  416634:	5b                   	pop    %rbx
  416635:	5d                   	pop    %rbp
  416636:	c3                   	retq   

0000000000416637 <UnistdGetdtablesize>:
  416637:	55                   	push   %rbp
  416638:	48 89 e5             	mov    %rsp,%rbp
  41663b:	53                   	push   %rbx
  41663c:	48 83 ec 28          	sub    $0x28,%rsp
  416640:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416644:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416648:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41664c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41664f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416653:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416657:	e8 a4 cc fe ff       	callq  403300 <getdtablesize@plt>
  41665c:	89 03                	mov    %eax,(%rbx)
  41665e:	90                   	nop
  41665f:	48 83 c4 28          	add    $0x28,%rsp
  416663:	5b                   	pop    %rbx
  416664:	5d                   	pop    %rbp
  416665:	c3                   	retq   

0000000000416666 <UnistdGetegid>:
  416666:	55                   	push   %rbp
  416667:	48 89 e5             	mov    %rsp,%rbp
  41666a:	48 83 ec 20          	sub    $0x20,%rsp
  41666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416676:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  41667a:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41667d:	e8 1e c9 fe ff       	callq  402fa0 <getegid@plt>
  416682:	89 c2                	mov    %eax,%edx
  416684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416688:	48 8b 40 08          	mov    0x8(%rax),%rax
  41668c:	89 10                	mov    %edx,(%rax)
  41668e:	90                   	nop
  41668f:	c9                   	leaveq 
  416690:	c3                   	retq   

0000000000416691 <UnistdGeteuid>:
  416691:	55                   	push   %rbp
  416692:	48 89 e5             	mov    %rsp,%rbp
  416695:	48 83 ec 20          	sub    $0x20,%rsp
  416699:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  41669d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4166a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4166a5:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4166a8:	e8 c3 c5 fe ff       	callq  402c70 <geteuid@plt>
  4166ad:	89 c2                	mov    %eax,%edx
  4166af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4166b3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4166b7:	89 10                	mov    %edx,(%rax)
  4166b9:	90                   	nop
  4166ba:	c9                   	leaveq 
  4166bb:	c3                   	retq   

00000000004166bc <UnistdGetgid>:
  4166bc:	55                   	push   %rbp
  4166bd:	48 89 e5             	mov    %rsp,%rbp
  4166c0:	48 83 ec 20          	sub    $0x20,%rsp
  4166c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4166c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4166cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4166d0:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4166d3:	e8 e8 c7 fe ff       	callq  402ec0 <getgid@plt>
  4166d8:	89 c2                	mov    %eax,%edx
  4166da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4166de:	48 8b 40 08          	mov    0x8(%rax),%rax
  4166e2:	89 10                	mov    %edx,(%rax)
  4166e4:	90                   	nop
  4166e5:	c9                   	leaveq 
  4166e6:	c3                   	retq   

00000000004166e7 <UnistdGethostid>:
  4166e7:	55                   	push   %rbp
  4166e8:	48 89 e5             	mov    %rsp,%rbp
  4166eb:	48 83 ec 20          	sub    $0x20,%rsp
  4166ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4166f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4166f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4166fb:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4166fe:	e8 bd c2 fe ff       	callq  4029c0 <gethostid@plt>
  416703:	48 89 c2             	mov    %rax,%rdx
  416706:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41670a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41670e:	89 10                	mov    %edx,(%rax)
  416710:	90                   	nop
  416711:	c9                   	leaveq 
  416712:	c3                   	retq   

0000000000416713 <UnistdGetlogin>:
  416713:	55                   	push   %rbp
  416714:	48 89 e5             	mov    %rsp,%rbp
  416717:	53                   	push   %rbx
  416718:	48 83 ec 28          	sub    $0x28,%rsp
  41671c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416720:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416724:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416728:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41672b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  41672f:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416733:	e8 48 c8 fe ff       	callq  402f80 <getlogin@plt>
  416738:	48 89 03             	mov    %rax,(%rbx)
  41673b:	90                   	nop
  41673c:	48 83 c4 28          	add    $0x28,%rsp
  416740:	5b                   	pop    %rbx
  416741:	5d                   	pop    %rbp
  416742:	c3                   	retq   

0000000000416743 <UnistdGetlogin_r>:
  416743:	55                   	push   %rbp
  416744:	48 89 e5             	mov    %rsp,%rbp
  416747:	53                   	push   %rbx
  416748:	48 83 ec 28          	sub    $0x28,%rsp
  41674c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416750:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416754:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416758:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41675b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41675f:	48 83 c0 08          	add    $0x8,%rax
  416763:	48 8b 00             	mov    (%rax),%rax
  416766:	48 8b 40 08          	mov    0x8(%rax),%rax
  41676a:	8b 00                	mov    (%rax),%eax
  41676c:	48 63 d0             	movslq %eax,%rdx
  41676f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416773:	48 8b 00             	mov    (%rax),%rax
  416776:	48 8b 40 08          	mov    0x8(%rax),%rax
  41677a:	48 8b 00             	mov    (%rax),%rax
  41677d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416781:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  416785:	48 89 d6             	mov    %rdx,%rsi
  416788:	48 89 c7             	mov    %rax,%rdi
  41678b:	e8 d0 c8 fe ff       	callq  403060 <getlogin_r@plt>
  416790:	89 03                	mov    %eax,(%rbx)
  416792:	90                   	nop
  416793:	48 83 c4 28          	add    $0x28,%rsp
  416797:	5b                   	pop    %rbx
  416798:	5d                   	pop    %rbp
  416799:	c3                   	retq   

000000000041679a <UnistdGetpagesize>:
  41679a:	55                   	push   %rbp
  41679b:	48 89 e5             	mov    %rsp,%rbp
  41679e:	53                   	push   %rbx
  41679f:	48 83 ec 28          	sub    $0x28,%rsp
  4167a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4167a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4167ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4167af:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4167b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4167b6:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4167ba:	e8 61 ca fe ff       	callq  403220 <getpagesize@plt>
  4167bf:	89 03                	mov    %eax,(%rbx)
  4167c1:	90                   	nop
  4167c2:	48 83 c4 28          	add    $0x28,%rsp
  4167c6:	5b                   	pop    %rbx
  4167c7:	5d                   	pop    %rbp
  4167c8:	c3                   	retq   

00000000004167c9 <UnistdGetpass>:
  4167c9:	55                   	push   %rbp
  4167ca:	48 89 e5             	mov    %rsp,%rbp
  4167cd:	53                   	push   %rbx
  4167ce:	48 83 ec 28          	sub    $0x28,%rsp
  4167d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4167d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4167da:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4167de:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4167e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4167e5:	48 8b 00             	mov    (%rax),%rax
  4167e8:	48 8b 40 08          	mov    0x8(%rax),%rax
  4167ec:	48 8b 00             	mov    (%rax),%rax
  4167ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4167f3:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4167f7:	48 89 c7             	mov    %rax,%rdi
  4167fa:	e8 01 c9 fe ff       	callq  403100 <getpass@plt>
  4167ff:	48 89 03             	mov    %rax,(%rbx)
  416802:	90                   	nop
  416803:	48 83 c4 28          	add    $0x28,%rsp
  416807:	5b                   	pop    %rbx
  416808:	5d                   	pop    %rbp
  416809:	c3                   	retq   

000000000041680a <UnistdGetpgrp>:
  41680a:	55                   	push   %rbp
  41680b:	48 89 e5             	mov    %rsp,%rbp
  41680e:	53                   	push   %rbx
  41680f:	48 83 ec 28          	sub    $0x28,%rsp
  416813:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416817:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41681b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41681f:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416822:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416826:	48 8b 58 08          	mov    0x8(%rax),%rbx
  41682a:	e8 b1 c8 fe ff       	callq  4030e0 <getpgrp@plt>
  41682f:	89 03                	mov    %eax,(%rbx)
  416831:	90                   	nop
  416832:	48 83 c4 28          	add    $0x28,%rsp
  416836:	5b                   	pop    %rbx
  416837:	5d                   	pop    %rbp
  416838:	c3                   	retq   

0000000000416839 <UnistdGetpid>:
  416839:	55                   	push   %rbp
  41683a:	48 89 e5             	mov    %rsp,%rbp
  41683d:	53                   	push   %rbx
  41683e:	48 83 ec 28          	sub    $0x28,%rsp
  416842:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416846:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41684a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41684e:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416851:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416855:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416859:	e8 42 c2 fe ff       	callq  402aa0 <getpid@plt>
  41685e:	89 03                	mov    %eax,(%rbx)
  416860:	90                   	nop
  416861:	48 83 c4 28          	add    $0x28,%rsp
  416865:	5b                   	pop    %rbx
  416866:	5d                   	pop    %rbp
  416867:	c3                   	retq   

0000000000416868 <UnistdGetppid>:
  416868:	55                   	push   %rbp
  416869:	48 89 e5             	mov    %rsp,%rbp
  41686c:	53                   	push   %rbx
  41686d:	48 83 ec 28          	sub    $0x28,%rsp
  416871:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416875:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416879:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41687d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416880:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416884:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416888:	e8 c3 c9 fe ff       	callq  403250 <getppid@plt>
  41688d:	89 03                	mov    %eax,(%rbx)
  41688f:	90                   	nop
  416890:	48 83 c4 28          	add    $0x28,%rsp
  416894:	5b                   	pop    %rbx
  416895:	5d                   	pop    %rbp
  416896:	c3                   	retq   

0000000000416897 <UnistdGetuid>:
  416897:	55                   	push   %rbp
  416898:	48 89 e5             	mov    %rsp,%rbp
  41689b:	48 83 ec 20          	sub    $0x20,%rsp
  41689f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4168a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4168a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4168ab:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  4168ae:	e8 6d c2 fe ff       	callq  402b20 <getuid@plt>
  4168b3:	89 c2                	mov    %eax,%edx
  4168b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4168b9:	48 8b 40 08          	mov    0x8(%rax),%rax
  4168bd:	89 10                	mov    %edx,(%rax)
  4168bf:	90                   	nop
  4168c0:	c9                   	leaveq 
  4168c1:	c3                   	retq   

00000000004168c2 <UnistdGetwd>:
  4168c2:	55                   	push   %rbp
  4168c3:	48 89 e5             	mov    %rsp,%rbp
  4168c6:	53                   	push   %rbx
  4168c7:	48 83 ec 28          	sub    $0x28,%rsp
  4168cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4168cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4168d3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4168d7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4168da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4168de:	48 8b 00             	mov    (%rax),%rax
  4168e1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4168e5:	48 8b 00             	mov    (%rax),%rax
  4168e8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4168ec:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4168f0:	be 00 10 00 00       	mov    $0x1000,%esi
  4168f5:	48 89 c7             	mov    %rax,%rdi
  4168f8:	e8 a3 c3 fe ff       	callq  402ca0 <getcwd@plt>
  4168fd:	48 89 03             	mov    %rax,(%rbx)
  416900:	90                   	nop
  416901:	48 83 c4 28          	add    $0x28,%rsp
  416905:	5b                   	pop    %rbx
  416906:	5d                   	pop    %rbp
  416907:	c3                   	retq   

0000000000416908 <UnistdIsatty>:
  416908:	55                   	push   %rbp
  416909:	48 89 e5             	mov    %rsp,%rbp
  41690c:	53                   	push   %rbx
  41690d:	48 83 ec 28          	sub    $0x28,%rsp
  416911:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416915:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416919:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41691d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416920:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416924:	48 8b 00             	mov    (%rax),%rax
  416927:	48 8b 40 08          	mov    0x8(%rax),%rax
  41692b:	8b 00                	mov    (%rax),%eax
  41692d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416931:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416935:	89 c7                	mov    %eax,%edi
  416937:	e8 24 c1 fe ff       	callq  402a60 <isatty@plt>
  41693c:	89 03                	mov    %eax,(%rbx)
  41693e:	90                   	nop
  41693f:	48 83 c4 28          	add    $0x28,%rsp
  416943:	5b                   	pop    %rbx
  416944:	5d                   	pop    %rbp
  416945:	c3                   	retq   

0000000000416946 <UnistdLchown>:
  416946:	55                   	push   %rbp
  416947:	48 89 e5             	mov    %rsp,%rbp
  41694a:	53                   	push   %rbx
  41694b:	48 83 ec 28          	sub    $0x28,%rsp
  41694f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416953:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416957:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41695b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41695e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416962:	48 83 c0 10          	add    $0x10,%rax
  416966:	48 8b 00             	mov    (%rax),%rax
  416969:	48 8b 40 08          	mov    0x8(%rax),%rax
  41696d:	8b 00                	mov    (%rax),%eax
  41696f:	89 c6                	mov    %eax,%esi
  416971:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416975:	48 83 c0 08          	add    $0x8,%rax
  416979:	48 8b 00             	mov    (%rax),%rax
  41697c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416980:	8b 00                	mov    (%rax),%eax
  416982:	89 c1                	mov    %eax,%ecx
  416984:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416988:	48 8b 00             	mov    (%rax),%rax
  41698b:	48 8b 40 08          	mov    0x8(%rax),%rax
  41698f:	48 8b 00             	mov    (%rax),%rax
  416992:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416996:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  41699a:	89 f2                	mov    %esi,%edx
  41699c:	89 ce                	mov    %ecx,%esi
  41699e:	48 89 c7             	mov    %rax,%rdi
  4169a1:	e8 ea c5 fe ff       	callq  402f90 <lchown@plt>
  4169a6:	89 03                	mov    %eax,(%rbx)
  4169a8:	90                   	nop
  4169a9:	48 83 c4 28          	add    $0x28,%rsp
  4169ad:	5b                   	pop    %rbx
  4169ae:	5d                   	pop    %rbp
  4169af:	c3                   	retq   

00000000004169b0 <UnistdLink>:
  4169b0:	55                   	push   %rbp
  4169b1:	48 89 e5             	mov    %rsp,%rbp
  4169b4:	53                   	push   %rbx
  4169b5:	48 83 ec 28          	sub    $0x28,%rsp
  4169b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4169bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4169c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4169c5:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4169c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4169cc:	48 83 c0 08          	add    $0x8,%rax
  4169d0:	48 8b 00             	mov    (%rax),%rax
  4169d3:	48 8b 40 08          	mov    0x8(%rax),%rax
  4169d7:	48 8b 10             	mov    (%rax),%rdx
  4169da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4169de:	48 8b 00             	mov    (%rax),%rax
  4169e1:	48 8b 40 08          	mov    0x8(%rax),%rax
  4169e5:	48 8b 00             	mov    (%rax),%rax
  4169e8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  4169ec:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  4169f0:	48 89 d6             	mov    %rdx,%rsi
  4169f3:	48 89 c7             	mov    %rax,%rdi
  4169f6:	e8 45 c8 fe ff       	callq  403240 <link@plt>
  4169fb:	89 03                	mov    %eax,(%rbx)
  4169fd:	90                   	nop
  4169fe:	48 83 c4 28          	add    $0x28,%rsp
  416a02:	5b                   	pop    %rbx
  416a03:	5d                   	pop    %rbp
  416a04:	c3                   	retq   

0000000000416a05 <UnistdLockf>:
  416a05:	55                   	push   %rbp
  416a06:	48 89 e5             	mov    %rsp,%rbp
  416a09:	53                   	push   %rbx
  416a0a:	48 83 ec 28          	sub    $0x28,%rsp
  416a0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416a12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416a16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416a1a:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a21:	48 83 c0 10          	add    $0x10,%rax
  416a25:	48 8b 00             	mov    (%rax),%rax
  416a28:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a2c:	8b 00                	mov    (%rax),%eax
  416a2e:	48 63 d0             	movslq %eax,%rdx
  416a31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a35:	48 83 c0 08          	add    $0x8,%rax
  416a39:	48 8b 00             	mov    (%rax),%rax
  416a3c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a40:	8b 08                	mov    (%rax),%ecx
  416a42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416a46:	48 8b 00             	mov    (%rax),%rax
  416a49:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a4d:	8b 00                	mov    (%rax),%eax
  416a4f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  416a53:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  416a57:	89 ce                	mov    %ecx,%esi
  416a59:	89 c7                	mov    %eax,%edi
  416a5b:	e8 f0 c1 fe ff       	callq  402c50 <lockf@plt>
  416a60:	89 03                	mov    %eax,(%rbx)
  416a62:	90                   	nop
  416a63:	48 83 c4 28          	add    $0x28,%rsp
  416a67:	5b                   	pop    %rbx
  416a68:	5d                   	pop    %rbp
  416a69:	c3                   	retq   

0000000000416a6a <UnistdLseek>:
  416a6a:	55                   	push   %rbp
  416a6b:	48 89 e5             	mov    %rsp,%rbp
  416a6e:	48 83 ec 20          	sub    $0x20,%rsp
  416a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416a76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416a7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416a7e:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416a81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416a85:	48 83 c0 10          	add    $0x10,%rax
  416a89:	48 8b 00             	mov    (%rax),%rax
  416a8c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416a90:	8b 10                	mov    (%rax),%edx
  416a92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416a96:	48 83 c0 08          	add    $0x8,%rax
  416a9a:	48 8b 00             	mov    (%rax),%rax
  416a9d:	48 8b 40 08          	mov    0x8(%rax),%rax
  416aa1:	8b 00                	mov    (%rax),%eax
  416aa3:	48 63 c8             	movslq %eax,%rcx
  416aa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416aaa:	48 8b 00             	mov    (%rax),%rax
  416aad:	48 8b 40 08          	mov    0x8(%rax),%rax
  416ab1:	8b 00                	mov    (%rax),%eax
  416ab3:	48 89 ce             	mov    %rcx,%rsi
  416ab6:	89 c7                	mov    %eax,%edi
  416ab8:	e8 63 c1 fe ff       	callq  402c20 <lseek@plt>
  416abd:	48 89 c2             	mov    %rax,%rdx
  416ac0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416ac4:	48 8b 40 08          	mov    0x8(%rax),%rax
  416ac8:	89 10                	mov    %edx,(%rax)
  416aca:	90                   	nop
  416acb:	c9                   	leaveq 
  416acc:	c3                   	retq   

0000000000416acd <UnistdNice>:
  416acd:	55                   	push   %rbp
  416ace:	48 89 e5             	mov    %rsp,%rbp
  416ad1:	53                   	push   %rbx
  416ad2:	48 83 ec 28          	sub    $0x28,%rsp
  416ad6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416ada:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416ade:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416ae2:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416ae9:	48 8b 00             	mov    (%rax),%rax
  416aec:	48 8b 40 08          	mov    0x8(%rax),%rax
  416af0:	8b 00                	mov    (%rax),%eax
  416af2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416af6:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416afa:	89 c7                	mov    %eax,%edi
  416afc:	e8 3f c4 fe ff       	callq  402f40 <nice@plt>
  416b01:	89 03                	mov    %eax,(%rbx)
  416b03:	90                   	nop
  416b04:	48 83 c4 28          	add    $0x28,%rsp
  416b08:	5b                   	pop    %rbx
  416b09:	5d                   	pop    %rbp
  416b0a:	c3                   	retq   

0000000000416b0b <UnistdPathconf>:
  416b0b:	55                   	push   %rbp
  416b0c:	48 89 e5             	mov    %rsp,%rbp
  416b0f:	48 83 ec 20          	sub    $0x20,%rsp
  416b13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416b17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416b1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416b1f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416b22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b26:	48 83 c0 08          	add    $0x8,%rax
  416b2a:	48 8b 00             	mov    (%rax),%rax
  416b2d:	48 8b 40 08          	mov    0x8(%rax),%rax
  416b31:	8b 10                	mov    (%rax),%edx
  416b33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416b37:	48 8b 00             	mov    (%rax),%rax
  416b3a:	48 8b 40 08          	mov    0x8(%rax),%rax
  416b3e:	48 8b 00             	mov    (%rax),%rax
  416b41:	89 d6                	mov    %edx,%esi
  416b43:	48 89 c7             	mov    %rax,%rdi
  416b46:	e8 65 bf fe ff       	callq  402ab0 <pathconf@plt>
  416b4b:	48 89 c2             	mov    %rax,%rdx
  416b4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416b52:	48 8b 40 08          	mov    0x8(%rax),%rax
  416b56:	89 10                	mov    %edx,(%rax)
  416b58:	90                   	nop
  416b59:	c9                   	leaveq 
  416b5a:	c3                   	retq   

0000000000416b5b <UnistdPause>:
  416b5b:	55                   	push   %rbp
  416b5c:	48 89 e5             	mov    %rsp,%rbp
  416b5f:	53                   	push   %rbx
  416b60:	48 83 ec 28          	sub    $0x28,%rsp
  416b64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416b68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416b6c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416b70:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416b73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416b77:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416b7b:	e8 90 c3 fe ff       	callq  402f10 <pause@plt>
  416b80:	89 03                	mov    %eax,(%rbx)
  416b82:	90                   	nop
  416b83:	48 83 c4 28          	add    $0x28,%rsp
  416b87:	5b                   	pop    %rbx
  416b88:	5d                   	pop    %rbp
  416b89:	c3                   	retq   

0000000000416b8a <UnistdRead>:
  416b8a:	55                   	push   %rbp
  416b8b:	48 89 e5             	mov    %rsp,%rbp
  416b8e:	48 83 ec 20          	sub    $0x20,%rsp
  416b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416b96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416b9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416b9e:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416ba5:	48 83 c0 10          	add    $0x10,%rax
  416ba9:	48 8b 00             	mov    (%rax),%rax
  416bac:	48 8b 40 08          	mov    0x8(%rax),%rax
  416bb0:	8b 00                	mov    (%rax),%eax
  416bb2:	48 63 d0             	movslq %eax,%rdx
  416bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416bb9:	48 83 c0 08          	add    $0x8,%rax
  416bbd:	48 8b 00             	mov    (%rax),%rax
  416bc0:	48 8b 40 08          	mov    0x8(%rax),%rax
  416bc4:	48 8b 08             	mov    (%rax),%rcx
  416bc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416bcb:	48 8b 00             	mov    (%rax),%rax
  416bce:	48 8b 40 08          	mov    0x8(%rax),%rax
  416bd2:	8b 00                	mov    (%rax),%eax
  416bd4:	48 89 ce             	mov    %rcx,%rsi
  416bd7:	89 c7                	mov    %eax,%edi
  416bd9:	e8 82 c1 fe ff       	callq  402d60 <read@plt>
  416bde:	48 89 c2             	mov    %rax,%rdx
  416be1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416be5:	48 8b 40 08          	mov    0x8(%rax),%rax
  416be9:	89 10                	mov    %edx,(%rax)
  416beb:	90                   	nop
  416bec:	c9                   	leaveq 
  416bed:	c3                   	retq   

0000000000416bee <UnistdReadlink>:
  416bee:	55                   	push   %rbp
  416bef:	48 89 e5             	mov    %rsp,%rbp
  416bf2:	48 83 ec 20          	sub    $0x20,%rsp
  416bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416bfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416bfe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416c02:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416c05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c09:	48 83 c0 10          	add    $0x10,%rax
  416c0d:	48 8b 00             	mov    (%rax),%rax
  416c10:	48 8b 40 08          	mov    0x8(%rax),%rax
  416c14:	8b 00                	mov    (%rax),%eax
  416c16:	48 63 d0             	movslq %eax,%rdx
  416c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c1d:	48 83 c0 08          	add    $0x8,%rax
  416c21:	48 8b 00             	mov    (%rax),%rax
  416c24:	48 8b 40 08          	mov    0x8(%rax),%rax
  416c28:	48 8b 08             	mov    (%rax),%rcx
  416c2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416c2f:	48 8b 00             	mov    (%rax),%rax
  416c32:	48 8b 40 08          	mov    0x8(%rax),%rax
  416c36:	48 8b 00             	mov    (%rax),%rax
  416c39:	48 89 ce             	mov    %rcx,%rsi
  416c3c:	48 89 c7             	mov    %rax,%rdi
  416c3f:	e8 3c be fe ff       	callq  402a80 <readlink@plt>
  416c44:	48 89 c2             	mov    %rax,%rdx
  416c47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416c4b:	48 8b 40 08          	mov    0x8(%rax),%rax
  416c4f:	89 10                	mov    %edx,(%rax)
  416c51:	90                   	nop
  416c52:	c9                   	leaveq 
  416c53:	c3                   	retq   

0000000000416c54 <UnistdRmdir>:
  416c54:	55                   	push   %rbp
  416c55:	48 89 e5             	mov    %rsp,%rbp
  416c58:	53                   	push   %rbx
  416c59:	48 83 ec 28          	sub    $0x28,%rsp
  416c5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416c61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416c65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416c69:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416c6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416c70:	48 8b 00             	mov    (%rax),%rax
  416c73:	48 8b 40 08          	mov    0x8(%rax),%rax
  416c77:	48 8b 00             	mov    (%rax),%rax
  416c7a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416c7e:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416c82:	48 89 c7             	mov    %rax,%rdi
  416c85:	e8 66 be fe ff       	callq  402af0 <rmdir@plt>
  416c8a:	89 03                	mov    %eax,(%rbx)
  416c8c:	90                   	nop
  416c8d:	48 83 c4 28          	add    $0x28,%rsp
  416c91:	5b                   	pop    %rbx
  416c92:	5d                   	pop    %rbp
  416c93:	c3                   	retq   

0000000000416c94 <UnistdSbrk>:
  416c94:	55                   	push   %rbp
  416c95:	48 89 e5             	mov    %rsp,%rbp
  416c98:	53                   	push   %rbx
  416c99:	48 83 ec 28          	sub    $0x28,%rsp
  416c9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416ca1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416ca5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416ca9:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416cac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416cb0:	48 8b 00             	mov    (%rax),%rax
  416cb3:	48 8b 40 08          	mov    0x8(%rax),%rax
  416cb7:	8b 00                	mov    (%rax),%eax
  416cb9:	48 98                	cltq   
  416cbb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416cbf:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416cc3:	48 89 c7             	mov    %rax,%rdi
  416cc6:	e8 c5 c0 fe ff       	callq  402d90 <sbrk@plt>
  416ccb:	48 89 03             	mov    %rax,(%rbx)
  416cce:	90                   	nop
  416ccf:	48 83 c4 28          	add    $0x28,%rsp
  416cd3:	5b                   	pop    %rbx
  416cd4:	5d                   	pop    %rbp
  416cd5:	c3                   	retq   

0000000000416cd6 <UnistdSetgid>:
  416cd6:	55                   	push   %rbp
  416cd7:	48 89 e5             	mov    %rsp,%rbp
  416cda:	53                   	push   %rbx
  416cdb:	48 83 ec 28          	sub    $0x28,%rsp
  416cdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416ce3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416ce7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416ceb:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416cf2:	48 8b 00             	mov    (%rax),%rax
  416cf5:	48 8b 40 08          	mov    0x8(%rax),%rax
  416cf9:	8b 00                	mov    (%rax),%eax
  416cfb:	89 c2                	mov    %eax,%edx
  416cfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416d01:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416d05:	89 d7                	mov    %edx,%edi
  416d07:	e8 c4 c3 fe ff       	callq  4030d0 <setgid@plt>
  416d0c:	89 03                	mov    %eax,(%rbx)
  416d0e:	90                   	nop
  416d0f:	48 83 c4 28          	add    $0x28,%rsp
  416d13:	5b                   	pop    %rbx
  416d14:	5d                   	pop    %rbp
  416d15:	c3                   	retq   

0000000000416d16 <UnistdSetpgid>:
  416d16:	55                   	push   %rbp
  416d17:	48 89 e5             	mov    %rsp,%rbp
  416d1a:	53                   	push   %rbx
  416d1b:	48 83 ec 28          	sub    $0x28,%rsp
  416d1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416d23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416d27:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416d2b:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416d2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416d32:	48 83 c0 08          	add    $0x8,%rax
  416d36:	48 8b 00             	mov    (%rax),%rax
  416d39:	48 8b 40 08          	mov    0x8(%rax),%rax
  416d3d:	8b 10                	mov    (%rax),%edx
  416d3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416d43:	48 8b 00             	mov    (%rax),%rax
  416d46:	48 8b 40 08          	mov    0x8(%rax),%rax
  416d4a:	8b 00                	mov    (%rax),%eax
  416d4c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416d50:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  416d54:	89 d6                	mov    %edx,%esi
  416d56:	89 c7                	mov    %eax,%edi
  416d58:	e8 b3 c4 fe ff       	callq  403210 <setpgid@plt>
  416d5d:	89 03                	mov    %eax,(%rbx)
  416d5f:	90                   	nop
  416d60:	48 83 c4 28          	add    $0x28,%rsp
  416d64:	5b                   	pop    %rbx
  416d65:	5d                   	pop    %rbp
  416d66:	c3                   	retq   

0000000000416d67 <UnistdSetpgrp>:
  416d67:	55                   	push   %rbp
  416d68:	48 89 e5             	mov    %rsp,%rbp
  416d6b:	53                   	push   %rbx
  416d6c:	48 83 ec 28          	sub    $0x28,%rsp
  416d70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416d74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416d78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416d7c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416d7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416d83:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416d87:	e8 44 c5 fe ff       	callq  4032d0 <setpgrp@plt>
  416d8c:	89 03                	mov    %eax,(%rbx)
  416d8e:	90                   	nop
  416d8f:	48 83 c4 28          	add    $0x28,%rsp
  416d93:	5b                   	pop    %rbx
  416d94:	5d                   	pop    %rbp
  416d95:	c3                   	retq   

0000000000416d96 <UnistdSetregid>:
  416d96:	55                   	push   %rbp
  416d97:	48 89 e5             	mov    %rsp,%rbp
  416d9a:	53                   	push   %rbx
  416d9b:	48 83 ec 28          	sub    $0x28,%rsp
  416d9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416da3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416da7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416dab:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416dae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416db2:	48 83 c0 08          	add    $0x8,%rax
  416db6:	48 8b 00             	mov    (%rax),%rax
  416db9:	48 8b 40 08          	mov    0x8(%rax),%rax
  416dbd:	8b 00                	mov    (%rax),%eax
  416dbf:	89 c1                	mov    %eax,%ecx
  416dc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416dc5:	48 8b 00             	mov    (%rax),%rax
  416dc8:	48 8b 40 08          	mov    0x8(%rax),%rax
  416dcc:	8b 00                	mov    (%rax),%eax
  416dce:	89 c2                	mov    %eax,%edx
  416dd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416dd4:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416dd8:	89 ce                	mov    %ecx,%esi
  416dda:	89 d7                	mov    %edx,%edi
  416ddc:	e8 5f c2 fe ff       	callq  403040 <setregid@plt>
  416de1:	89 03                	mov    %eax,(%rbx)
  416de3:	90                   	nop
  416de4:	48 83 c4 28          	add    $0x28,%rsp
  416de8:	5b                   	pop    %rbx
  416de9:	5d                   	pop    %rbp
  416dea:	c3                   	retq   

0000000000416deb <UnistdSetreuid>:
  416deb:	55                   	push   %rbp
  416dec:	48 89 e5             	mov    %rsp,%rbp
  416def:	53                   	push   %rbx
  416df0:	48 83 ec 28          	sub    $0x28,%rsp
  416df4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416df8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416dfc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416e00:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416e03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416e07:	48 83 c0 08          	add    $0x8,%rax
  416e0b:	48 8b 00             	mov    (%rax),%rax
  416e0e:	48 8b 40 08          	mov    0x8(%rax),%rax
  416e12:	8b 00                	mov    (%rax),%eax
  416e14:	89 c1                	mov    %eax,%ecx
  416e16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416e1a:	48 8b 00             	mov    (%rax),%rax
  416e1d:	48 8b 40 08          	mov    0x8(%rax),%rax
  416e21:	8b 00                	mov    (%rax),%eax
  416e23:	89 c2                	mov    %eax,%edx
  416e25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e29:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416e2d:	89 ce                	mov    %ecx,%esi
  416e2f:	89 d7                	mov    %edx,%edi
  416e31:	e8 da c1 fe ff       	callq  403010 <setreuid@plt>
  416e36:	89 03                	mov    %eax,(%rbx)
  416e38:	90                   	nop
  416e39:	48 83 c4 28          	add    $0x28,%rsp
  416e3d:	5b                   	pop    %rbx
  416e3e:	5d                   	pop    %rbp
  416e3f:	c3                   	retq   

0000000000416e40 <UnistdSetsid>:
  416e40:	55                   	push   %rbp
  416e41:	48 89 e5             	mov    %rsp,%rbp
  416e44:	53                   	push   %rbx
  416e45:	48 83 ec 28          	sub    $0x28,%rsp
  416e49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416e4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416e51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416e55:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416e58:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e5c:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416e60:	e8 8b be fe ff       	callq  402cf0 <setsid@plt>
  416e65:	89 03                	mov    %eax,(%rbx)
  416e67:	90                   	nop
  416e68:	48 83 c4 28          	add    $0x28,%rsp
  416e6c:	5b                   	pop    %rbx
  416e6d:	5d                   	pop    %rbp
  416e6e:	c3                   	retq   

0000000000416e6f <UnistdSetuid>:
  416e6f:	55                   	push   %rbp
  416e70:	48 89 e5             	mov    %rsp,%rbp
  416e73:	53                   	push   %rbx
  416e74:	48 83 ec 28          	sub    $0x28,%rsp
  416e78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416e7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416e80:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416e84:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416e87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416e8b:	48 8b 00             	mov    (%rax),%rax
  416e8e:	48 8b 40 08          	mov    0x8(%rax),%rax
  416e92:	8b 00                	mov    (%rax),%eax
  416e94:	89 c2                	mov    %eax,%edx
  416e96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  416e9a:	48 8b 58 08          	mov    0x8(%rax),%rbx
  416e9e:	89 d7                	mov    %edx,%edi
  416ea0:	e8 db c3 fe ff       	callq  403280 <setuid@plt>
  416ea5:	89 03                	mov    %eax,(%rbx)
  416ea7:	90                   	nop
  416ea8:	48 83 c4 28          	add    $0x28,%rsp
  416eac:	5b                   	pop    %rbx
  416ead:	5d                   	pop    %rbp
  416eae:	c3                   	retq   

0000000000416eaf <UnistdSleep>:
  416eaf:	55                   	push   %rbp
  416eb0:	48 89 e5             	mov    %rsp,%rbp
  416eb3:	48 83 ec 20          	sub    $0x20,%rsp
  416eb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416ebb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416ebf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416ec3:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416ec6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416eca:	48 8b 00             	mov    (%rax),%rax
  416ecd:	48 8b 40 08          	mov    0x8(%rax),%rax
  416ed1:	8b 00                	mov    (%rax),%eax
  416ed3:	89 c7                	mov    %eax,%edi
  416ed5:	e8 d6 c3 fe ff       	callq  4032b0 <sleep@plt>
  416eda:	89 c2                	mov    %eax,%edx
  416edc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416ee0:	48 8b 40 08          	mov    0x8(%rax),%rax
  416ee4:	89 10                	mov    %edx,(%rax)
  416ee6:	90                   	nop
  416ee7:	c9                   	leaveq 
  416ee8:	c3                   	retq   

0000000000416ee9 <UnistdSymlink>:
  416ee9:	55                   	push   %rbp
  416eea:	48 89 e5             	mov    %rsp,%rbp
  416eed:	53                   	push   %rbx
  416eee:	48 83 ec 28          	sub    $0x28,%rsp
  416ef2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416ef6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416efa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416efe:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416f01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f05:	48 83 c0 08          	add    $0x8,%rax
  416f09:	48 8b 00             	mov    (%rax),%rax
  416f0c:	48 8b 40 08          	mov    0x8(%rax),%rax
  416f10:	48 8b 10             	mov    (%rax),%rdx
  416f13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416f17:	48 8b 00             	mov    (%rax),%rax
  416f1a:	48 8b 40 08          	mov    0x8(%rax),%rax
  416f1e:	48 8b 00             	mov    (%rax),%rax
  416f21:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  416f25:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  416f29:	48 89 d6             	mov    %rdx,%rsi
  416f2c:	48 89 c7             	mov    %rax,%rdi
  416f2f:	e8 8c bc fe ff       	callq  402bc0 <symlink@plt>
  416f34:	89 03                	mov    %eax,(%rbx)
  416f36:	90                   	nop
  416f37:	48 83 c4 28          	add    $0x28,%rsp
  416f3b:	5b                   	pop    %rbx
  416f3c:	5d                   	pop    %rbp
  416f3d:	c3                   	retq   

0000000000416f3e <UnistdSync>:
  416f3e:	55                   	push   %rbp
  416f3f:	48 89 e5             	mov    %rsp,%rbp
  416f42:	48 83 ec 20          	sub    $0x20,%rsp
  416f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416f4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416f4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416f52:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416f55:	e8 96 bf fe ff       	callq  402ef0 <sync@plt>
  416f5a:	90                   	nop
  416f5b:	c9                   	leaveq 
  416f5c:	c3                   	retq   

0000000000416f5d <UnistdSysconf>:
  416f5d:	55                   	push   %rbp
  416f5e:	48 89 e5             	mov    %rsp,%rbp
  416f61:	48 83 ec 20          	sub    $0x20,%rsp
  416f65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  416f69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  416f6d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  416f71:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  416f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  416f78:	48 8b 00             	mov    (%rax),%rax
  416f7b:	48 8b 40 08          	mov    0x8(%rax),%rax
  416f7f:	8b 00                	mov    (%rax),%eax
  416f81:	89 c7                	mov    %eax,%edi
  416f83:	e8 08 c2 fe ff       	callq  403190 <sysconf@plt>
  416f88:	48 89 c2             	mov    %rax,%rdx
  416f8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  416f8f:	48 8b 40 08          	mov    0x8(%rax),%rax
  416f93:	89 10                	mov    %edx,(%rax)
  416f95:	90                   	nop
  416f96:	c9                   	leaveq 
  416f97:	c3                   	retq   

0000000000416f98 <UnistdTcgetpgrp>:
  416f98:	55                   	push   %rbp
  416f99:	48 89 e5             	mov    %rsp,%rbp
  416f9c:	53                   	push   %rbx
  416f9d:	48 83 ec 28          	sub    $0x28,%rsp
  416fa1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416fa5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416fa9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416fad:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416fb4:	48 8b 00             	mov    (%rax),%rax
  416fb7:	48 8b 40 08          	mov    0x8(%rax),%rax
  416fbb:	8b 00                	mov    (%rax),%eax
  416fbd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  416fc1:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  416fc5:	89 c7                	mov    %eax,%edi
  416fc7:	e8 04 bf fe ff       	callq  402ed0 <tcgetpgrp@plt>
  416fcc:	89 03                	mov    %eax,(%rbx)
  416fce:	90                   	nop
  416fcf:	48 83 c4 28          	add    $0x28,%rsp
  416fd3:	5b                   	pop    %rbx
  416fd4:	5d                   	pop    %rbp
  416fd5:	c3                   	retq   

0000000000416fd6 <UnistdTcsetpgrp>:
  416fd6:	55                   	push   %rbp
  416fd7:	48 89 e5             	mov    %rsp,%rbp
  416fda:	53                   	push   %rbx
  416fdb:	48 83 ec 28          	sub    $0x28,%rsp
  416fdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  416fe3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  416fe7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  416feb:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  416fee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  416ff2:	48 83 c0 08          	add    $0x8,%rax
  416ff6:	48 8b 00             	mov    (%rax),%rax
  416ff9:	48 8b 40 08          	mov    0x8(%rax),%rax
  416ffd:	8b 10                	mov    (%rax),%edx
  416fff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417003:	48 8b 00             	mov    (%rax),%rax
  417006:	48 8b 40 08          	mov    0x8(%rax),%rax
  41700a:	8b 00                	mov    (%rax),%eax
  41700c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  417010:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  417014:	89 d6                	mov    %edx,%esi
  417016:	89 c7                	mov    %eax,%edi
  417018:	e8 d3 c0 fe ff       	callq  4030f0 <tcsetpgrp@plt>
  41701d:	89 03                	mov    %eax,(%rbx)
  41701f:	90                   	nop
  417020:	48 83 c4 28          	add    $0x28,%rsp
  417024:	5b                   	pop    %rbx
  417025:	5d                   	pop    %rbp
  417026:	c3                   	retq   

0000000000417027 <UnistdTruncate>:
  417027:	55                   	push   %rbp
  417028:	48 89 e5             	mov    %rsp,%rbp
  41702b:	53                   	push   %rbx
  41702c:	48 83 ec 28          	sub    $0x28,%rsp
  417030:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417034:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417038:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  41703c:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41703f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417043:	48 83 c0 08          	add    $0x8,%rax
  417047:	48 8b 00             	mov    (%rax),%rax
  41704a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41704e:	8b 00                	mov    (%rax),%eax
  417050:	48 63 d0             	movslq %eax,%rdx
  417053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  417057:	48 8b 00             	mov    (%rax),%rax
  41705a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41705e:	48 8b 00             	mov    (%rax),%rax
  417061:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  417065:	48 8b 59 08          	mov    0x8(%rcx),%rbx
  417069:	48 89 d6             	mov    %rdx,%rsi
  41706c:	48 89 c7             	mov    %rax,%rdi
  41706f:	e8 1c be fe ff       	callq  402e90 <truncate@plt>
  417074:	89 03                	mov    %eax,(%rbx)
  417076:	90                   	nop
  417077:	48 83 c4 28          	add    $0x28,%rsp
  41707b:	5b                   	pop    %rbx
  41707c:	5d                   	pop    %rbp
  41707d:	c3                   	retq   

000000000041707e <UnistdTtyname>:
  41707e:	55                   	push   %rbp
  41707f:	48 89 e5             	mov    %rsp,%rbp
  417082:	53                   	push   %rbx
  417083:	48 83 ec 28          	sub    $0x28,%rsp
  417087:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  41708b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  41708f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  417093:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  417096:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41709a:	48 8b 00             	mov    (%rax),%rax
  41709d:	48 8b 40 08          	mov    0x8(%rax),%rax
  4170a1:	8b 00                	mov    (%rax),%eax
  4170a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4170a7:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4170ab:	89 c7                	mov    %eax,%edi
  4170ad:	e8 7e bf fe ff       	callq  403030 <ttyname@plt>
  4170b2:	48 89 03             	mov    %rax,(%rbx)
  4170b5:	90                   	nop
  4170b6:	48 83 c4 28          	add    $0x28,%rsp
  4170ba:	5b                   	pop    %rbx
  4170bb:	5d                   	pop    %rbp
  4170bc:	c3                   	retq   

00000000004170bd <UnistdTtyname_r>:
  4170bd:	55                   	push   %rbp
  4170be:	48 89 e5             	mov    %rsp,%rbp
  4170c1:	53                   	push   %rbx
  4170c2:	48 83 ec 28          	sub    $0x28,%rsp
  4170c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4170ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4170ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4170d2:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4170d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4170d9:	48 83 c0 10          	add    $0x10,%rax
  4170dd:	48 8b 00             	mov    (%rax),%rax
  4170e0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4170e4:	8b 00                	mov    (%rax),%eax
  4170e6:	48 63 d0             	movslq %eax,%rdx
  4170e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4170ed:	48 83 c0 08          	add    $0x8,%rax
  4170f1:	48 8b 00             	mov    (%rax),%rax
  4170f4:	48 8b 40 08          	mov    0x8(%rax),%rax
  4170f8:	48 8b 08             	mov    (%rax),%rcx
  4170fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4170ff:	48 8b 00             	mov    (%rax),%rax
  417102:	48 8b 40 08          	mov    0x8(%rax),%rax
  417106:	8b 00                	mov    (%rax),%eax
  417108:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  41710c:	48 8b 5e 08          	mov    0x8(%rsi),%rbx
  417110:	48 89 ce             	mov    %rcx,%rsi
  417113:	89 c7                	mov    %eax,%edi
  417115:	e8 56 be fe ff       	callq  402f70 <ttyname_r@plt>
  41711a:	89 03                	mov    %eax,(%rbx)
  41711c:	90                   	nop
  41711d:	48 83 c4 28          	add    $0x28,%rsp
  417121:	5b                   	pop    %rbx
  417122:	5d                   	pop    %rbp
  417123:	c3                   	retq   

0000000000417124 <UnistdUalarm>:
  417124:	55                   	push   %rbp
  417125:	48 89 e5             	mov    %rsp,%rbp
  417128:	48 83 ec 20          	sub    $0x20,%rsp
  41712c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  417130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417134:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  417138:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41713b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41713f:	48 83 c0 08          	add    $0x8,%rax
  417143:	48 8b 00             	mov    (%rax),%rax
  417146:	48 8b 40 08          	mov    0x8(%rax),%rax
  41714a:	8b 00                	mov    (%rax),%eax
  41714c:	89 c2                	mov    %eax,%edx
  41714e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417152:	48 8b 00             	mov    (%rax),%rax
  417155:	48 8b 40 08          	mov    0x8(%rax),%rax
  417159:	8b 00                	mov    (%rax),%eax
  41715b:	89 d6                	mov    %edx,%esi
  41715d:	89 c7                	mov    %eax,%edi
  41715f:	e8 bc bb fe ff       	callq  402d20 <ualarm@plt>
  417164:	89 c2                	mov    %eax,%edx
  417166:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41716a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41716e:	89 10                	mov    %edx,(%rax)
  417170:	90                   	nop
  417171:	c9                   	leaveq 
  417172:	c3                   	retq   

0000000000417173 <UnistdUnlink>:
  417173:	55                   	push   %rbp
  417174:	48 89 e5             	mov    %rsp,%rbp
  417177:	53                   	push   %rbx
  417178:	48 83 ec 28          	sub    $0x28,%rsp
  41717c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  417180:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  417184:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  417188:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  41718b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  41718f:	48 8b 00             	mov    (%rax),%rax
  417192:	48 8b 40 08          	mov    0x8(%rax),%rax
  417196:	48 8b 00             	mov    (%rax),%rax
  417199:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  41719d:	48 8b 5a 08          	mov    0x8(%rdx),%rbx
  4171a1:	48 89 c7             	mov    %rax,%rdi
  4171a4:	e8 f7 b7 fe ff       	callq  4029a0 <unlink@plt>
  4171a9:	89 03                	mov    %eax,(%rbx)
  4171ab:	90                   	nop
  4171ac:	48 83 c4 28          	add    $0x28,%rsp
  4171b0:	5b                   	pop    %rbx
  4171b1:	5d                   	pop    %rbp
  4171b2:	c3                   	retq   

00000000004171b3 <UnistdUsleep>:
  4171b3:	55                   	push   %rbp
  4171b4:	48 89 e5             	mov    %rsp,%rbp
  4171b7:	53                   	push   %rbx
  4171b8:	48 83 ec 28          	sub    $0x28,%rsp
  4171bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4171c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4171c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4171c8:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
  4171cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4171cf:	48 8b 00             	mov    (%rax),%rax
  4171d2:	48 8b 40 08          	mov    0x8(%rax),%rax
  4171d6:	8b 00                	mov    (%rax),%eax
  4171d8:	89 c2                	mov    %eax,%edx
  4171da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4171de:	48 8b 58 08          	mov    0x8(%rax),%rbx
  4171e2:	89 d7                	mov    %edx,%edi
  4171e4:	e8 47 c1 fe ff       	callq  403330 <usleep@plt>
  4171e9:	89 03                	mov    %eax,(%rbx)
  4171eb:	90                   	nop
  4171ec:	48 83 c4 28          	add    $0x28,%rsp
  4171f0:	5b                   	pop    %rbx
  4171f1:	5d                   	pop    %rbp
  4171f2:	c3                   	retq   

00000000004171f3 <UnistdVfork>:
  4171f3:	55                   	push   %rbp
  4171f4:	48 89 e5             	mov    %rsp,%rbp
  4171f7:	48 83 ec 30          	sub    $0x30,%rsp
  4171fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4171ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417203:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  417207:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41720a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41720e:	48 8b 40 08          	mov    0x8(%rax),%rax
  417212:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  417216:	e8 a5 bf fe ff       	callq  4031c0 <vfork@plt>
  41721b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  41721f:	89 02                	mov    %eax,(%rdx)
  417221:	90                   	nop
  417222:	c9                   	leaveq 
  417223:	c3                   	retq   

0000000000417224 <UnistdWrite>:
  417224:	55                   	push   %rbp
  417225:	48 89 e5             	mov    %rsp,%rbp
  417228:	48 83 ec 20          	sub    $0x20,%rsp
  41722c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  417230:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  417234:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  417238:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
  41723b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  41723f:	48 83 c0 10          	add    $0x10,%rax
  417243:	48 8b 00             	mov    (%rax),%rax
  417246:	48 8b 40 08          	mov    0x8(%rax),%rax
  41724a:	8b 00                	mov    (%rax),%eax
  41724c:	48 63 d0             	movslq %eax,%rdx
  41724f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417253:	48 83 c0 08          	add    $0x8,%rax
  417257:	48 8b 00             	mov    (%rax),%rax
  41725a:	48 8b 40 08          	mov    0x8(%rax),%rax
  41725e:	48 8b 08             	mov    (%rax),%rcx
  417261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  417265:	48 8b 00             	mov    (%rax),%rax
  417268:	48 8b 40 08          	mov    0x8(%rax),%rax
  41726c:	8b 00                	mov    (%rax),%eax
  41726e:	48 89 ce             	mov    %rcx,%rsi
  417271:	89 c7                	mov    %eax,%edi
  417273:	e8 18 b8 fe ff       	callq  402a90 <write@plt>
  417278:	48 89 c2             	mov    %rax,%rdx
  41727b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  41727f:	48 8b 40 08          	mov    0x8(%rax),%rax
  417283:	89 10                	mov    %edx,(%rax)
  417285:	90                   	nop
  417286:	c9                   	leaveq 
  417287:	c3                   	retq   

0000000000417288 <UnistdSetupFunc>:
  417288:	55                   	push   %rbp
  417289:	48 89 e5             	mov    %rsp,%rbp
  41728c:	48 83 ec 10          	sub    $0x10,%rsp
  417290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  417294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  417298:	be 5c ae 41 00       	mov    $0x41ae5c,%esi
  41729d:	48 89 c7             	mov    %rax,%rdi
  4172a0:	e8 5c c9 fe ff       	callq  403c01 <TableStrRegister>
  4172a5:	48 89 c2             	mov    %rax,%rdx
  4172a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172ac:	48 89 d6             	mov    %rdx,%rsi
  4172af:	48 89 c7             	mov    %rax,%rdi
  4172b2:	e8 48 84 ff ff       	callq  40f6ff <VariableDefined>
  4172b7:	85 c0                	test   %eax,%eax
  4172b9:	75 30                	jne    4172eb <UnistdSetupFunc+0x63>
  4172bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172bf:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  4172c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172ca:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  4172d0:	41 b8 1c 09 62 00    	mov    $0x62091c,%r8d
  4172d6:	48 89 d1             	mov    %rdx,%rcx
  4172d9:	ba 5c ae 41 00       	mov    $0x41ae5c,%edx
  4172de:	be 00 00 00 00       	mov    $0x0,%esi
  4172e3:	48 89 c7             	mov    %rax,%rdi
  4172e6:	e8 74 85 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4172eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172ef:	48 8b 90 48 0e 00 00 	mov    0xe48(%rax),%rdx
  4172f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4172fa:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  417300:	41 b8 80 08 62 00    	mov    $0x620880,%r8d
  417306:	48 89 d1             	mov    %rdx,%rcx
  417309:	ba 61 ae 41 00       	mov    $0x41ae61,%edx
  41730e:	be 00 00 00 00       	mov    $0x0,%esi
  417313:	48 89 c7             	mov    %rax,%rdi
  417316:	e8 44 85 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41731b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41731f:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  417326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41732a:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  417330:	41 b8 78 08 62 00    	mov    $0x620878,%r8d
  417336:	48 89 d1             	mov    %rdx,%rcx
  417339:	ba 68 ae 41 00       	mov    $0x41ae68,%edx
  41733e:	be 00 00 00 00       	mov    $0x0,%esi
  417343:	48 89 c7             	mov    %rax,%rdi
  417346:	e8 14 85 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41734b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41734f:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  417356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41735a:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  417360:	41 b8 a0 08 62 00    	mov    $0x6208a0,%r8d
  417366:	48 89 d1             	mov    %rdx,%rcx
  417369:	ba 6f ae 41 00       	mov    $0x41ae6f,%edx
  41736e:	be 00 00 00 00       	mov    $0x0,%esi
  417373:	48 89 c7             	mov    %rax,%rdi
  417376:	e8 e4 84 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  41737b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41737f:	48 8d 90 c8 0a 00 00 	lea    0xac8(%rax),%rdx
  417386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  41738a:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  417390:	41 b8 88 08 62 00    	mov    $0x620888,%r8d
  417396:	48 89 d1             	mov    %rdx,%rcx
  417399:	ba 76 ae 41 00       	mov    $0x41ae76,%edx
  41739e:	be 00 00 00 00       	mov    $0x0,%esi
  4173a3:	48 89 c7             	mov    %rax,%rdi
  4173a6:	e8 b4 84 ff ff       	callq  40f85f <VariableDefinePlatformVar>
  4173ab:	90                   	nop
  4173ac:	c9                   	leaveq 
  4173ad:	c3                   	retq   
  4173ae:	66 90                	xchg   %ax,%ax

00000000004173b0 <__libc_csu_init>:
  4173b0:	41 57                	push   %r15
  4173b2:	41 56                	push   %r14
  4173b4:	49 89 d7             	mov    %rdx,%r15
  4173b7:	41 55                	push   %r13
  4173b9:	41 54                	push   %r12
  4173bb:	4c 8d 25 3e 7a 20 00 	lea    0x207a3e(%rip),%r12        # 61ee00 <__frame_dummy_init_array_entry>
  4173c2:	55                   	push   %rbp
  4173c3:	48 8d 2d 3e 7a 20 00 	lea    0x207a3e(%rip),%rbp        # 61ee08 <__init_array_end>
  4173ca:	53                   	push   %rbx
  4173cb:	41 89 fd             	mov    %edi,%r13d
  4173ce:	49 89 f6             	mov    %rsi,%r14
  4173d1:	4c 29 e5             	sub    %r12,%rbp
  4173d4:	48 83 ec 08          	sub    $0x8,%rsp
  4173d8:	48 c1 fd 03          	sar    $0x3,%rbp
  4173dc:	e8 2f b5 fe ff       	callq  402910 <_init>
  4173e1:	48 85 ed             	test   %rbp,%rbp
  4173e4:	74 20                	je     417406 <__libc_csu_init+0x56>
  4173e6:	31 db                	xor    %ebx,%ebx
  4173e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4173ef:	00 
  4173f0:	4c 89 fa             	mov    %r15,%rdx
  4173f3:	4c 89 f6             	mov    %r14,%rsi
  4173f6:	44 89 ef             	mov    %r13d,%edi
  4173f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4173fd:	48 83 c3 01          	add    $0x1,%rbx
  417401:	48 39 dd             	cmp    %rbx,%rbp
  417404:	75 ea                	jne    4173f0 <__libc_csu_init+0x40>
  417406:	48 83 c4 08          	add    $0x8,%rsp
  41740a:	5b                   	pop    %rbx
  41740b:	5d                   	pop    %rbp
  41740c:	41 5c                	pop    %r12
  41740e:	41 5d                	pop    %r13
  417410:	41 5e                	pop    %r14
  417412:	41 5f                	pop    %r15
  417414:	c3                   	retq   
  417415:	90                   	nop
  417416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  41741d:	00 00 00 

0000000000417420 <__libc_csu_fini>:
  417420:	f3 c3                	repz retq 
  417422:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  417429:	00 00 00 
  41742c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000417430 <__stat>:
  417430:	48 89 f2             	mov    %rsi,%rdx
  417433:	48 89 fe             	mov    %rdi,%rsi
  417436:	bf 01 00 00 00       	mov    $0x1,%edi
  41743b:	e9 a0 ba fe ff       	jmpq   402ee0 <__xstat@plt>

Disassembly of section .fini:

0000000000417440 <_fini>:
  417440:	48 83 ec 08          	sub    $0x8,%rsp
  417444:	48 83 c4 08          	add    $0x8,%rsp
  417448:	c3                   	retq   
